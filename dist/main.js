(()=>{"use strict";var e={192:(e,t,n)=>{n.d(t,{Z:()=>l});var o=n(537),r=n.n(o),i=n(645),a=n.n(i)()(r());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@700&display=swap);"]),a.push([e.id,'body{display:flex;height:100vh;width:100%;font-family:"Roboto",sans-serif;font-weight:700;font-size:16pt}.side-panel{background-color:#3737ef;flex:1 1 auto;height:100%}.main-panel{flex:3 3 auto;border:2px solid #639;height:100%}.project-display-panel{display:flex;flex-direction:column;justify-content:center;align-items:center}.project{justify-content:center;align-items:center;display:flex}.project button{height:1rem}.todo{width:80%;display:flex;border:2px solid #000;justify-content:space-between}.title{position:relative;z-index:0;font-size:1.5rem;font-weight:700}.todo-new-title{position:absolute;left:0;width:100%;font-size:1.5rem}.create-project-form{border:2px solid #000;height:20%;position:absolute;top:50%;left:50%;background-color:gray}.create-todo-form{border:2px solid #000;height:20%;position:absolute;top:50%;left:50%;background-color:gray}',"",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AAEA,KACI,YAAA,CACA,YAAA,CACA,UAAA,CACA,+BAAA,CACA,eAAA,CACA,cAAA,CAGJ,YACI,wBAAA,CACA,aAAA,CACA,WAAA,CAIJ,YACI,aAAA,CACA,qBAAA,CACA,WAAA,CAGJ,uBACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CAEJ,SACI,sBAAA,CACA,kBAAA,CACA,YAAA,CACD,gBACC,WAAA,CAGJ,MACI,SAAA,CACA,YAAA,CACA,qBAAA,CACA,6BAAA,CAEJ,OACI,iBAAA,CACA,SAAA,CACA,gBAAA,CACA,eAAA,CAEJ,gBACI,iBAAA,CACA,MAAA,CACA,UAAA,CACA,gBAAA,CAEJ,qBACI,qBAAA,CACA,UAAA,CACA,iBAAA,CACA,OAAA,CACA,QAAA,CACA,qBAAA,CAGJ,kBACI,qBAAA,CACI,UAAA,CACA,iBAAA,CACA,OAAA,CACA,QAAA,CACA,qBAAA",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@700&display=swap');\r\n\r\nbody{\r\n    display:flex;\r\n    height:100vh;\r\n    width:100%;\r\n    font-family:'Roboto',sans-serif;\r\n    font-weight:700;\r\n    font-size:16pt;\r\n}\r\n\r\n.side-panel{\r\n    background-color: rgb(55, 55, 239);\r\n    flex: 1 1 auto;\r\n    height:100%;\r\n}\r\n.project-manager{\r\n}\r\n.main-panel{\r\n    flex :3 3 auto;\r\n    border:2px solid rebeccapurple;\r\n    height:100%;\r\n\r\n}\r\n.project-display-panel{\r\n    display:flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n.project{\r\n    justify-content: center;\r\n    align-items: center;\r\n    display:flex;\r\n   button{\r\n    height:1rem;\r\n   }\r\n}\r\n.todo{\r\n    width:80%;\r\n    display:flex;\r\n    border:2px solid black;\r\n    justify-content: space-between;\r\n}\r\n.title{\r\n    position:relative;\r\n    z-index: 0;\r\n    font-size:1.5rem;\r\n    font-weight:700;\r\n}\r\n.todo-new-title{\r\n    position:absolute;\r\n    left:0;\r\n    width:100%;\r\n    font-size:1.5rem;\r\n}\r\n.create-project-form{\r\n    border:2px solid black;\r\n    height:20%;\r\n    position:absolute;\r\n    top:50%;\r\n    left:50%;\r\n    background-color: gray;\r\n}\r\n\r\n.create-todo-form{\r\n    border: 2px solid black;\r\n        height: 20%;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        background-color: gray;\r\n}\r\n\r\n"],sourceRoot:""}]);const l=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var l=0;l<this.length;l++){var d=this[l][0];null!=d&&(a[d]=!0)}for(var s=0;s<e.length;s++){var c=[].concat(e[s]);o&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),t.push(c))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},a=[],l=0;l<e.length;l++){var d=e[l],s=o.base?d[0]+o.base:d[0],c=i[s]||0,p="".concat(s," ").concat(c);i[s]=c+1;var u=n(p),A={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)t[u].references++,t[u].updater(A);else{var m=r(A,o);o.byIndex=l,t.splice(l,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var l=n(i[a]);t[l].references--}for(var d=o(e,r),s=0;s<i.length;s++){var c=n(i[s]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}i=d}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{class e{constructor(e,t,n,o,r){this._title=e,this._description=t,this._dueDate=n,this._priority=o,this.id=r}get title(){return this._title}get description(){return this._description}get dueDate(){return this._dueDate}get priority(){return this._priority}get id(){return this._id}set title(e){this._title=e}set description(e){this._description=e}set dueDate(e){this._dueDate=e}set priority(e){this._priority=e}set id(e){this._id=e}}class t{todos=[];constructor(e,t,n){this._title=e,this._id=t,this._div=n}get title(){return this._title}set title(e){this._title=e}get id(){return this._id}get div(){return this._div}set div(e){this._div=e}addTodo(e){this.todos.push(e)}getAll(){return this.todos}}const o=(e,t)=>{let n=e.getAll();for(let e in n)n[e].id==t&&n.splice(e,1)},r=(e,t,n,r)=>{let i=document.createElement("div");i.classList.add("todo"),i.id="todo-"+e.id,i.setAttribute("draggable","true");let a=document.createElement("input");a.setAttribute("type","checkbox"),a.classList.add("todo-checkbox");let l=document.createElement("p");l.classList.add("title"),l.textContent=e.title;let d=document.createElement("h4");d.classList.add("description"),d.textContent=e.description;let s=document.createElement("h4");s.classList.add("due-date"),s.textContent=e.dueDate;let c=document.createElement("button");c.classList.add("remove-todo"),c.textContent="Remove",i.appendChild(a),i.appendChild(l),i.appendChild(s),i.appendChild(c),t.appendChild(i),c.addEventListener("click",(()=>{o(n,e.id),i.remove(),console.log(e.id),console.log(r.getAll()),localStorage.setItem("packageManager",JSON.stringify(r))}));let p=document.createElement("input");return p.classList.add("todo-new-title"),p.value=e.title,l.addEventListener("click",(()=>{l.appendChild(p),p.focus()})),p.onblur=()=>{e.title=p.value,l.textContent=e.title,p.remove(),localStorage.setItem("packageManager",JSON.stringify(r))},p.addEventListener("keyup",(({key:e})=>{"Enter"===e&&p.blur()})),i},i=(t,n,o)=>{const i=document.querySelector(".main-panel");let a=document.createElement("button");a.classList.add("create-todo-form-button"),a.id="todo-create-new",a.textContent="Create new Todo",a.addEventListener("click",(()=>{((t,n,o)=>{let i=document.createElement("div");i.classList.add("create-todo-form");let a=document.createElement("form"),l=document.createElement("label");l.setAttribute("for","form-todo-title"),l.textContent="Title";let d=document.createElement("input");d.setAttribute("type","text"),d.id="form-Todo-title";let s=document.createElement("label");s.setAttribute("for","form-todo-dueDate"),s.textContent="Due Date";let c=document.createElement("input");c.setAttribute("type","text"),c.id="form-todo-dueDate";let p=document.createElement("label");p.setAttribute("for","form-todo-priority"),p.textContent="Priority";let u=document.createElement("input");u.setAttribute("type","text"),u.id="form-todo-priority";let A=document.createElement("button");A.textContent="Create",A.classList.add("form-button-todo"),a.appendChild(l),a.appendChild(d),a.appendChild(s),a.appendChild(c),i.appendChild(a),i.appendChild(A),document.body.appendChild(i),A.addEventListener("click",(()=>{let a=new e(d.value," ",c.value,u.value,n.getAll().length);n.addTodo(a),i.remove(),r(t,n,o),localStorage.setItem("packageManager",JSON.stringify(t))}))})(t,n,o)}));let l=document.getElementById("todo-create-new");return document.body.contains(l)&&l.remove(),i.appendChild(a),a},a=(e,t,n)=>{t.innerHTML="",console.log("hello from loadProjects",e.projects);const a=e.projects;console.log("copied array",a),a.forEach((a=>{const l=((e,t,n,a,l,d)=>{let s=document.createElement("div"),c=document.createElement("button");c.classList.add("edit-project"),c.textContent="rename",s.classList.add("project"),s.id="project-"+a;let p=document.createElement("h1");p.classList.add("project-name"),p.textContent=t.title;let u=document.createElement("input");u.id="new-name-input",u.value=t.title;let A=document.createElement("button");return A.classList.add(".project-remove-button"),A.textContent="X",A.addEventListener("click",(()=>{o(e,t.id),localStorage.setItem("packageManager",JSON.stringify(e)),console.log("after remove",e),s.remove()})),c.addEventListener("click",(()=>{p.remove(),s.appendChild(u)})),u.onblur=()=>{p.textContent=u.value,t.title=u.value,u.remove(),s.insertBefore(p,c),localStorage.setItem("packageManager",JSON.stringify(e))},u.addEventListener("keyup",(({key:e})=>{"Enter"===e&&u.blur()})),p.addEventListener("click",(function(){d.innerHTML="",r(e,t,d),i(e,t,d)})),s.appendChild(p),s.appendChild(c),s.appendChild(A),l.appendChild(s),s})(e,a,a.title,a.id,t,n);console.log("Named",a.title),a.div=l,localStorage.setItem("packageManager",JSON.stringify(e))}))};var l=n(379),d=n.n(l),s=n(795),c=n.n(s),p=n(569),u=n.n(p),A=n(565),m=n.n(A),f=n(216),C=n.n(f),h=n(589),g=n.n(h),v=n(192),b={};b.styleTagTransform=g(),b.setAttributes=m(),b.insert=u().bind(null,"head"),b.domAPI=c(),b.insertStyleElement=C(),d()(v.Z,b),v.Z&&v.Z.locals&&v.Z.locals;let y,x=new class{projects=[];addProj(e){this.projects.push(e)}getAll(){return this.projects}};if(console.log(x.getAll()),null!=localStorage.getItem("packageManager")){if(y=JSON.parse(localStorage.getItem("packageManager")).projects,console.log("saved proj",y),y.forEach(((n,o)=>{let r=new t(n._title,n._id,n._div);x.addProj(r),n.todos.forEach((t=>{console.log(t);let n=new e(t._title,t._description,t._dueDate,"",t._id);r.addTodo(n)}))})),x.getAll().length<1){let e=new t("Project",0);x.addProj(e)}}else{let e=new t("Project",0);x.addProj(e)}const E=(()=>{let e=document.createElement("div");e.classList.add("main-panel");let t=document.createElement("div");return t.classList.add("project-display-panel"),e.appendChild(t),document.body.appendChild(e),t})(),j=((e,n)=>{let o=document.createElement("div");o.classList.add("side-panel");let r=document.createElement("div");r.classList.add("project-manager");let i=document.createElement("button");i.classList.add("new-project-button"),i.textContent="Create A New Project";let l=document.querySelector(".main-panel");const d=document.body;return o.appendChild(r),o.appendChild(i),d.insertBefore(o,l),i.addEventListener("click",(()=>{((e,n,o)=>{let r=document.createElement("div");r.classList.add("create-project-form");let i=document.createElement("form"),l=document.createElement("label");l.setAttribute("for","form-project-name"),l.textContent="Project Name";let d=document.createElement("input");d.setAttribute("type","text"),d.id="form-project-name";let s=document.createElement("button");s.textContent="Create",s.classList.add("form-button"),i.appendChild(l),i.appendChild(d),r.appendChild(i),r.appendChild(s),document.body.appendChild(r),s.addEventListener("click",(()=>{r.remove();let i=new t(d.value,n.getAll().length);n.addProj(i),a(n,e,o),localStorage.setItem("packageManager",JSON.stringify(n))}))})(r,e,n),console.log("button")})),r})(x,E);a(x,j,E),localStorage.setItem("packageManager",JSON.stringify(x))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,