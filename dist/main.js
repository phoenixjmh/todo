(()=>{"use strict";var e={169:(e,t,n)=>{n.d(t,{Z:()=>m});var r=n(537),o=n.n(r),a=n(645),i=n.n(a),A=n(667),d=n.n(A),s=new URL(n(498),n.b),l=new URL(n(794),n.b),c=i()(o());c.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@700&display=swap);"]),c.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Gruppo&display=swap);"]),c.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,400;1,500;1,600;1,700;1,800&display=swap);"]),c.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Gruppo&display=swap);"]),c.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@700&display=swap);"]);var u=d()(s),C=d()(l);c.push([e.id,'*{margin:0;font-family:"Open Sans",sans-serif;box-sizing:border-box}body{display:flex;justify-content:center;align-items:center;height:100vh;width:100vw;font-weight:700;font-size:18pt;background-color:#222}@keyframes expand{from{width:0vw;left:100%}to{width:100vw;left:0}}@keyframes close{from{width:100vw;left:0}to{width:0vw;left:100%}}@keyframes openDisplay{from{position:relative;width:100vw;height:100%;right:0%;z-index:2}to{position:relative;right:100%;width:0;visibility:hidden}}@keyframes closeDisplay{from{position:relative;width:0;right:100%}to{position:relative;width:100vw;height:100%;right:0;z-index:2}}@media(min-width: 500px){@keyframes expand{from{width:0vw;left:100%}to{width:clamp(500px,70%,800px);left:0}}@keyframes close{from{width:clamp(500px,70%,800px);left:0}to{width:0vw;left:100%}}@keyframes openDisplay{from{position:relative;width:clamp(500px,70%,800px);height:100%;right:0%;z-index:2}to{position:relative;right:100%;width:0;visibility:hidden}}@keyframes closeDisplay{from{position:relative;width:0;right:100%}to{position:relative;width:clamp(500px,70%,800px);height:100%;right:0;z-index:2}}}@media(max-width: 500px){.side-panel{background-color:#fff;width:100%;height:100%;position:relative;z-index:2}.display-open{animation-duration:200ms}.display-closed{animation-duration:200ms}#panel-title{padding:2rem;color:rgba(166,69,0,.9843137255);font-size:3rem}}.side-panel{background-color:#222;height:100%;width:100%;position:relative;z-index:2;display:flex;gap:2rem;flex-direction:column;align-items:center;background:#222}#panel-title{padding:2rem;text-align:center;color:rgba(166,69,0,.9843137255);font-size:3rem;text-shadow:1px 3px 5px rgba(0,0,0,.6)}.projman-header{width:80%}#projman-label{font-size:1.5rem;position:relative;top:1rem;color:rgba(166,69,0,.9843137255);text-shadow:1px 3px 5px rgba(0,0,0,.6)}.display-open{animation-name:openDisplay;animation-delay:0ms;animation-duration:300ms;animation-fill-mode:forwards}.display-closed{animation-name:closeDisplay;animation-delay:0ms;animation-duration:300ms;animation-fill-mode:forwards}.project-manager{display:flex;width:100%;flex-direction:column;justify-content:flex-start;gap:1rem;align-items:center}.project{text-shadow:1px 3px 5px rgba(0,0,0,.6);box-shadow:1px 3px 5px #000;justify-content:flex-start;align-items:center;padding:.5rem 1rem .5rem 1rem;display:flex;width:80%;color:rgba(166,69,0,.9843137255);border:1px solid rgba(166,69,0,.9843137255);border-radius:.5rem;transition:ease-in-out 150ms}.project .project-name{left:1rem;position:relative;text-align:center;font-size:1.4rem}.project .button-panel{position:absolute;z-index:3;left:70%;display:flex;gap:1rem}.project:hover{width:90%;height:3.5rem;transition:ease-in-out 150ms}#new-name-input{font-family:"Open Sans",sans-serif;font-size:1.4rem;font-weight:700;width:72%;background:#222;color:rgba(166,69,0,.9843137255);border-radius:.6rem;border:none;box-shadow:1px 2px 3px #000}.edit-project{appearance:none;background:none;border:1px solid rgba(166,69,0,.9843137255);border-radius:.4rem;height:24px;width:24px;border:none;box-shadow:1px 2px 3px #000;padding:.2rem}.edit-icon{width:17.6px;height:17.6px;color:rgba(166,69,0,.9843137255);background-color:rgba(166,69,0,.9843137255);mask-image:url('+u+');mask-size:2.9rem;mask-clip:border-box}.new-project-button{height:2rem;width:10rem;font-size:1rem;border-radius:.5rem;color:rgba(166,69,0,.9843137255);background:#222;appearance:none;background:none;border-radius:.4rem;border:none;text-shadow:1px 3px 5px rgba(0,0,0,.6);box-shadow:1px 2px 3px #000;padding:.2rem;transition:ease-in-out 150ms}.new-project-button:hover{height:2.5rem;width:12rem;transition:ease-in-out 150ms}.project-remove-button{appearance:none;background:none;border:none;border-radius:.4rem;height:24px;width:24px;padding:.1rem;color:rgba(166,69,0,.9843137255);font-family:"Open Sans",sans-serif;font-weight:700;font-size:.8rem;box-shadow:1px 2px 3px #000}#input-placeholder{flex-shrink:0;display:flex;justify-content:space-around}#form-project-name{font-family:"Open Sans",sans-serif;font-size:1.4rem;font-weight:700;width:72%;background:none;color:rgba(166,69,0,.9843137255);border-radius:.6rem;border:none;box-shadow:1px 2px 3px #000}#create-button{appearance:none;background:none;border:none;border-radius:.4rem;padding:.3rem;color:rgba(166,69,0,.9843137255);font-family:"Open Sans",sans-serif;font-weight:700;font-size:.8rem;box-shadow:1px 2px 3px #000}@media(min-width: 500px){.side-panel{width:clamp(500px,70%,800px);border-radius:2rem}body{background-color:#fff}}@keyframes expand{from{width:0vw;left:100%}to{width:100vw;left:0}}@keyframes close{from{width:100vw;left:0}to{width:0vw;left:100%}}@keyframes openDisplay{from{position:relative;width:100vw;height:100%;right:0%;z-index:2}to{position:relative;right:100%;width:0;visibility:hidden}}@keyframes closeDisplay{from{position:relative;width:0;right:100%}to{position:relative;width:100vw;height:100%;right:0;z-index:2}}@media(min-width: 500px){@keyframes expand{from{width:0vw;left:100%}to{width:clamp(500px,70%,800px);left:0}}@keyframes close{from{width:clamp(500px,70%,800px);left:0}to{width:0vw;left:100%}}@keyframes openDisplay{from{position:relative;width:clamp(500px,70%,800px);height:100%;right:0%;z-index:2}to{position:relative;right:100%;width:0;visibility:hidden}}@keyframes closeDisplay{from{position:relative;width:0;right:100%}to{position:relative;width:clamp(500px,70%,800px);height:100%;right:0;z-index:2}}}.main-panel{display:flex;flex-direction:column;justify-content:flex-start;gap:5rem;align-items:center;background-color:#222;color:rgba(166,69,0,.9843137255);position:relative;height:100%;width:0;left:100%;z-index:0;overflow:hidden}.expand-panel{animation-name:expand;animation-duration:300ms;animation-fill-mode:forwards}.close-panel{animation-name:close;animation-duration:300ms;animation-fill-mode:forwards}.project-display-panel{padding-top:5rem;width:100%;display:flex;flex-direction:column;justify-content:flex-start;gap:5%;align-items:center}#nav-bar{position:absolute;display:flex;justify-content:center;align-items:center;top:0%;height:3rem;width:100%;padding:1rem;overflow:visible;text-shadow:1px 3px 5px rgba(0,0,0,.6);box-shadow:1px 3px 5px #000}#expand-arrow{flex:1 1 auto;background:rgba(166,69,0,.9843137255);mask-image:url('+C+');mask-repeat:no-repeat;mask-size:6rem;width:3rem;height:1.8rem}#nav-title{flex:5 5 auto}@media(min-width: 500px){.main-panel{border-radius:2rem}#nav-bar{height:4rem}}#tool-tip{font-size:.8rem}.todo{text-shadow:1px 3px 5px rgba(0,0,0,.6);box-shadow:1px 2px 3px #000;width:90%;padding:1rem;display:flex;border:1px solid rgba(166,69,0,.9843137255);justify-content:space-between;align-items:center;border-radius:.5rem}.checkbox-container{flex:1 1 auto;height:100%;display:flex;justify-content:center;align-items:center}.todo-checkbox{width:20px;height:20px;border:1px solid rgba(166,69,0,.9843137255);background:#222;border-radius:50%;appearance:none}input[type=checkbox]:checked{width:20px;height:20px;border:1px solid rgba(166,69,0,.9843137255);background:#ffa72e;background:radial-gradient(circle, rgba(166, 69, 0, 0.9843137255) 0%, rgba(166, 69, 0, 0.9843137255) 32%, rgb(0, 0, 0) 69%);border-radius:50%}.title{position:relative;z-index:0;font-size:1rem;font-weight:700;flex:3 3 auto;max-width:40%}.todo-new-title{position:absolute;background:#222;color:rgba(166,69,0,.9843137255);border:1px solid rgba(166,69,0,.9843137255);box-shadow:1px 2px 3px #000;font-size:1rem;font-weight:700;font-family:"Open Sans",sans-serif;top:0;left:0;width:100%;height:100%}.due-date{text-align:center;position:relative;z-index:0;font-size:1rem;flex:1 1 auto}.todo-new-date{position:absolute;left:0;width:85%}.remove-button-container{display:flex;justify-content:center;align-items:center}.remove-button-container .remove-todo{appearance:none;background:none;border-radius:50%;border:none;height:1.2rem;width:1.2rem;padding:.1rem;color:rgba(166,69,0,.9843137255);font-family:"Open Sans",sans-serif;font-weight:700;font-size:.8rem;box-shadow:1px 2px 3px #000}.create-todo-form{border:2px solid #000;width:80%;position:absolute;top:25%;left:10%;background-color:#222;display:flex;flex-direction:column;justify-content:flex-start;align-items:center;text-shadow:1px 3px 5px rgba(0,0,0,.6);box-shadow:1px 2px 3px #000;border:1px solid rgba(166,69,0,.9843137255);border-radius:.5rem}.create-todo-form #todo-form{padding:1.2rem;display:flex;flex-direction:column;justify-content:space-around;align-items:center;height:50%}.create-todo-form #todo-form label{color:rgba(166,69,0,.9843137255);font-size:1.5rem;width:100%}.create-todo-form #todo-form input{background:none;border:1px solid rgba(166,69,0,.9843137255);color:rgba(166,69,0,.9843137255);font-size:1.4rem;border-radius:.4rem}.create-todo-form #form-buttons-td{padding:1.2rem;width:100%;display:flex;justify-content:space-evenly}.create-todo-form #form-buttons-td button{height:2rem;width:10rem;font-size:1rem;border-radius:.5rem;color:rgba(166,69,0,.9843137255);background:#222;border:none;padding:.3rem;font-family:"Open Sans",sans-serif;font-weight:700;font-size:.8rem;box-shadow:1px 2px 3px #000}#todo-create-new{height:2rem;width:10rem;font-size:1rem;border:1px solid rgba(166,69,0,.9843137255);border-radius:.5rem;color:rgba(166,69,0,.9843137255);text-shadow:1px 3px 5px rgba(0,0,0,.6);background:#222;box-shadow:1px 2px 3px #000;transition:ease-in-out 150ms}#todo-create-new:hover{height:3rem;width:12rem;box-shadow:1px 4px 5px #000;transition:ease-in-out 150ms}',"",{version:3,sources:["webpack://./src/main.scss","webpack://./src/styles/animations.scss","webpack://./src/styles/projectPanel.scss","webpack://./src/styles/mainPanel.scss","webpack://./src/styles/todos.scss"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@700&display=swap');\r\n@import './styles/animations.scss';\r\n@import url('https://fonts.googleapis.com/css2?family=Gruppo&display=swap');\r\n*{\r\n    margin:0;\r\n    font-family:'Open Sans',sans-serif;\r\n    box-sizing: border-box;\r\n}\r\nbody{\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height:100vh;\r\n    width:100vw;\r\n    font-weight:700;\r\n    font-size:18pt;\r\n    background-color: $bgColor;\r\n}\r\n@import './styles/projectPanel.scss';\r\n@import './styles/mainPanel.scss';\r\n@import './styles/todos.scss';\r\n\r\n\r\n","$pink-ish:rgba(255, 192, 203, 0.505);\r\n$goldish:rgba(251,235,215,1);\r\n$theme-font:#a64500fb;\r\n$bgColor:  rgb(34, 34, 34);\r\n$border:1px solid $theme-font;\r\n\r\n    @import url('https://fonts.googleapis.com/css2?family=Gruppo&display=swap');\r\n    @import url('https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,400;1,500;1,600;1,700;1,800&display=swap');\r\n\r\n@mixin animations{\r\n    \r\n\r\n    @keyframes expand{\r\n        from{\r\n            width:0vw;\r\n        left: 100%;\r\n        }\r\n        to{\r\n            width:100vw;\r\n        left:0;}\r\n    }\r\n    @keyframes close {\r\n        from{\r\n            width:100vw;\r\n        left:0;}\r\n        to{\r\n            width:0vw;\r\n            left:100%;\r\n    }\r\n    }\r\n    @keyframes openDisplay{\r\n        from{\r\n            position:relative;\r\n            width:100vw;\r\n            height:100%;\r\n            right:0%;\r\n            z-index: 2;\r\n        }\r\n        to{\r\n            position:relative;\r\n            right:100%;\r\n            width:0;\r\n            visibility: hidden;\r\n    \r\n        }\r\n    }\r\n    @keyframes closeDisplay{\r\n        from{\r\n            position:relative;\r\n            width:0;\r\n            right:100%;\r\n        }\r\n        to{\r\n            \r\n            position:relative;\r\n            width:100vw;\r\n            height:100%;\r\n            right:0;\r\n            z-index: 2;\r\n            \r\n        }\r\n    }\r\n    @media (min-width:500px){\r\n        @keyframes expand{\r\n            from{\r\n                width:0vw;\r\n            left: 100%;\r\n            }\r\n            to{\r\n                width:clamp(500px,70%,800px);\r\n            left:0;}\r\n        }\r\n        @keyframes close {\r\n            from{\r\n                width:clamp(500px,70%,800px);\r\n                \r\n            left:0;}\r\n            to{\r\n                width:0vw;\r\n                left:100%;\r\n        }\r\n        }\r\n        @keyframes openDisplay{\r\n            from{\r\n                position:relative;\r\n                width:clamp(500px,70%,800px);\r\n                height:100%;\r\n                right:0%;\r\n                z-index: 2;\r\n            }\r\n            to{\r\n                position:relative;\r\n                right:100%;\r\n                width:0;\r\n                visibility: hidden;\r\n        \r\n            }\r\n        }\r\n        @keyframes closeDisplay{\r\n            from{\r\n                position:relative;\r\n                width:0;\r\n                right:100%;\r\n            }\r\n            to{\r\n                \r\n                position:relative;\r\n                width:clamp(500px,70%,800px);\r\n                height:100%;\r\n                right:0;\r\n                z-index: 2;\r\n                \r\n            }\r\n        }\r\n    }   \r\n\r\n}\r\n","@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@700&display=swap');\r\n\r\n@include animations;\r\n@media (max-width:500px){\r\n    .side-panel{\r\n        background-color:rgb(255, 255, 255);\r\n        width:100%;\r\n        height:100%;\r\n        position:relative;\r\n        z-index: 2;\r\n    }\r\n    .display-open{\r\n        animation-duration: 200ms;\r\n    }\r\n    .display-closed{\r\n        animation-duration: 200ms;\r\n    }\r\n\r\n    #panel-title{\r\n        padding:2rem;\r\n        color:$theme-font;\r\n        font-size:3rem;\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n.side-panel{\r\n    background-color:$bgColor;\r\n    height:100%;\r\n    width:100%;\r\n    position:relative;\r\n    z-index: 2;\r\n    display:flex;\r\n    gap:2rem;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background: rgb(34, 34, 34);\r\n    \r\n    \r\n}\r\n#panel-title{\r\n    padding:2rem;\r\n    text-align: center;\r\n    color:$theme-font;\r\n    font-size:3rem;\r\n    text-shadow: 1px 3px 5px rgba(0,0,0,0.6);\r\n}\r\n.projman-header{\r\n    width:80%;\r\n}\r\n#projman-label{\r\n    font-size:1.5rem;\r\n    position:relative;\r\n    top:1rem;\r\n    color:$theme-font;\r\n    text-shadow: 1px 3px 5px rgba(0,0,0,0.6);\r\n\r\n}\r\n.display-open{\r\n    animation-name:openDisplay;\r\n    animation-delay:0ms;\r\n    animation-duration:300ms;\r\n    animation-fill-mode: forwards;\r\n}\r\n.display-closed{\r\n    animation-name:closeDisplay;\r\n    animation-delay:0ms;\r\n    animation-duration:300ms;\r\n    animation-fill-mode: forwards;\r\n}\r\n\r\n.project-manager{\r\n    display:flex;\r\n    width:100%;\r\n    flex-direction:column;\r\n    justify-content: flex-start;\r\n    gap:1rem;\r\n    align-items: center;\r\n}\r\n.project{\r\n    text-shadow: 1px 3px 5px rgba(0,0,0,0.6);\r\n    box-shadow: 1px 3px 5px black;\r\n    $pink-ish:rgba(255, 192, 203, 0.505);\r\n    $goldish:rgba(251,235,215,1);\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    padding: .5rem 1rem .5rem 1rem;\r\n    display:flex;\r\n    width:80%;\r\n    color:$theme-font;\r\n     border:$border;\r\n     border-radius: .5rem;\r\n    transition:ease-in-out 150ms;\r\n    .project-name{\r\n        left:1rem;\r\n        position: relative;\r\n        text-align: center;\r\n        font-size:1.4rem;\r\n\r\n    }\r\n   .button-panel{\r\n        position:absolute;\r\n        z-index:3;\r\n        left:70%;\r\n        display:flex;\r\n        gap:1rem;\r\n    \r\n   }\r\n}\r\n.project:hover{\r\n    width:90%;\r\n    height:3.5rem;\r\n    transition:ease-in-out 150ms;\r\n\r\n}\r\n#new-name-input{\r\n    font-family:'Open Sans',sans-serif;\r\n    font-size:1.4rem;\r\n    font-weight:700;\r\n    width:72%;\r\n    background:$bgColor;\r\n    color:$theme-font;\r\n    border-radius:.6rem;\r\n    border:none;\r\n    box-shadow:1px 2px 3px black;\r\n\r\n}\r\n.edit-project{\r\n    appearance:none;\r\n    background:none;\r\n    border:$border;\r\n    border-radius: .4rem;\r\n   height:24px;\r\n   width:24px;\r\n   border:none;\r\n   box-shadow:1px 2px 3px black;\r\n   padding:.2rem;\r\n}\r\n.edit-icon{\r\n    width:17.6px;\r\n    height:17.6px;\r\n    color:$theme-font;\r\n    background-color: $theme-font;\r\n    mask-image: url(./img/pencil.svg) ;\r\n    mask-size:2.9rem;\r\n    \r\n    mask-clip:border-box;\r\n    \r\n    \r\n    // -webkit-mask-size: 1rem;\r\n    // mask-size: 1rem;\r\n\r\n}\r\n\r\n.new-project-button{\r\n    height:2rem;\r\n    width:10rem;\r\n    font-size:1rem;\r\n    border-radius:.5rem;\r\n    color:$theme-font;\r\n    background: $bgColor;\r\n    appearance:none;\r\n    background:none;\r\n    border-radius: .4rem;\r\n   \r\n   border:none;\r\n   text-shadow: 1px 3px 5px rgba(0,0,0,0.6);\r\n    box-shadow: 1px 2px 3px black;\r\n   padding:.2rem;\r\n   transition:ease-in-out 150ms;\r\n\r\n}\r\n.new-project-button:hover{\r\n    height:2.5rem;\r\n    width:12rem;\r\n    transition:ease-in-out 150ms;\r\n}\r\n.project-remove-button{\r\n    appearance:none;\r\n        background:none;\r\n        border:none;\r\n        border-radius:.4rem;\r\n        height:24px;\r\n        width:24px;\r\n        padding:.1rem;\r\n        color:$theme-font;\r\n        font-family:'Open Sans', sans-serif;\r\n        font-weight:700;\r\n        font-size:.8rem;\r\n        box-shadow:1px 2px 3px black;\r\n}\r\n#input-placeholder{\r\n   flex-shrink:0;\r\n   display:flex;\r\n   justify-content: space-around;\r\n}\r\n#form-project-name{\r\n    font-family:'Open Sans',sans-serif;\r\n    font-size:1.4rem;\r\n    font-weight:700;\r\n    width:72%;\r\n    background:none;\r\n    color:$theme-font;\r\n    border-radius:.6rem;\r\n    border:none;\r\n    box-shadow:1px 2px 3px black;\r\n}\r\n#create-button{\r\n    appearance:none;\r\n        background:none;\r\n        border:none;\r\n        border-radius:.4rem;\r\n        padding:.3rem;\r\n        color:$theme-font;\r\n        font-family:'Open Sans', sans-serif;\r\n        font-weight:700;\r\n        font-size:.8rem;\r\n        box-shadow:1px 2px 3px black;\r\n}\r\n\r\n@media (min-width:500px){\r\n    .side-panel{\r\n        width:clamp(500px,70%,800px);\r\n        border-radius: 2rem;\r\n    }\r\n    body{\r\n        background-color: white;\r\n    }\r\n    }\r\n","@include animations;\r\n.main-panel{\r\n    display:flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    gap:5rem;\r\n    align-items: center;\r\n    background-color: $bgColor;\r\n    color:$theme-font;\r\n    position:relative;\r\n    height:100%;\r\n    width:0;\r\n    left:100%;\r\n    z-index:0;\r\n    overflow:hidden;\r\n\r\n}\r\n.expand-panel{\r\n    animation-name:expand;\r\n    animation-duration: 300ms;\r\n    animation-fill-mode: forwards;\r\n}\r\n.close-panel{\r\n    animation-name:close;\r\n    animation-duration: 300ms;\r\n    animation-fill-mode: forwards;\r\n}\r\n.project-display-panel{\r\n    \r\n    padding-top:5rem;\r\n    width:100%;\r\n    display:flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    gap:5%;\r\n    align-items: center;\r\n}\r\n\r\n#nav-bar{\r\n    position:absolute;\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    top:0%;\r\n    height:3rem;\r\n    width:100%;\r\n    padding:1rem;\r\n   \r\n    overflow: visible;\r\n    \r\n    text-shadow: 1px 3px 5px rgba(0,0,0,0.6);\r\n    box-shadow: 1px 3px 5px black;\r\n}\r\n\r\n#expand-arrow{\r\n    flex:1 1 auto;\r\n    background:$theme-font;\r\n    mask-image:url('./img/projects.svg');\r\n    mask-repeat: no-repeat;\r\n    mask-size:6rem;\r\n    width:3rem;\r\n    height:1.8rem;\r\n}\r\n#nav-title{\r\n    flex :5 5 auto;\r\n}\r\n@media(min-width:500px){\r\n    .main-panel{\r\n        border-radius: 2rem;\r\n    }\r\n    #nav-bar{\r\n        height:4rem;\r\n    }\r\n}\r\n\r\n#tool-tip{\r\n    font-size:.8rem;\r\n    \r\n}",".todo{\r\n    text-shadow: 1px 3px 5px rgba(0,0,0,0.6);\r\n    box-shadow: 1px 2px 3px black;\r\n    width:90%;\r\n    padding:1rem;\r\n    display:flex;\r\n    border:$border;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border-radius:.5rem;\r\n}\r\n.checkbox-container{\r\n    flex:1 1 auto;\r\nheight:100%;\r\ndisplay:flex;\r\njustify-content: center;\r\nalign-items: center;\r\n}\r\n.todo-checkbox{\r\n    \r\n    width:20px;\r\n    height:20px;\r\n    border:$border;\r\n    background:$bgColor;\r\n    border-radius:50%;\r\n    appearance: none;\r\n  \r\n}\r\ninput[type='checkbox']:checked{\r\n    width:20px;\r\n    height:20px;\r\n    border:$border;\r\n    background: rgb(255,167,46);\r\n    background: radial-gradient(circle, $theme-font 0%,$theme-font 32%, rgba(0,0,0,1) 69%); \r\n    border-radius:50%;\r\n  \r\n}\r\n.title{\r\n    position:relative;\r\n    z-index: 0;\r\n    font-size:1rem;\r\n    font-weight:700;\r\n    flex: 3 3 auto;\r\n    max-width: 40%;\r\n}\r\n.todo-new-title{\r\n    position:absolute;\r\n    background:$bgColor;\r\n    color:$theme-font;\r\n    border:$border;\r\n    box-shadow: 1px 2px 3px black;\r\n    font-size:1rem;\r\n    font-weight:700;\r\n    font-family:'Open Sans',sans-serif;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:100%;\r\n}\r\n.due-date{\r\n    text-align: center;\r\n    position: relative;\r\n        z-index: 0;\r\n        font-size:1rem;\r\n        flex: 1 1 auto;\r\n}\r\n.todo-new-date{\r\n    position: absolute;\r\n        left: 0;\r\n        width: 85%;\r\n}\r\n.remove-button-container{\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .remove-todo{\r\n        appearance:none;\r\n        background:none;\r\n        border-radius: 50%;\r\n        border:none;\r\n        height:1.2rem;\r\n        width:1.2rem;\r\n        padding:.1rem;\r\n        color:$theme-font;\r\n        font-family:'Open Sans', sans-serif;\r\n        font-weight:700;\r\n        font-size:.8rem;\r\n        box-shadow:1px 2px 3px black;\r\n        \r\n\r\n    }\r\n}\r\n\r\n.create-todo-form{\r\n    border: 2px solid black;\r\n        width:80%;\r\n        position: absolute;\r\n        top: 25%;\r\n        left: 10%;\r\n        background-color:$bgColor;\r\n        display:flex;\r\n        flex-direction:column;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n\r\n\r\n        text-shadow: 1px 3px 5px rgba(0,0,0,0.6);\r\n        box-shadow: 1px 2px 3px black;\r\n        border:$border;\r\n        border-radius:.5rem;\r\n\r\n\r\n        #todo-form{\r\n            padding:1.2rem;\r\n            display:flex;\r\n            flex-direction: column;\r\n            justify-content: space-around;\r\n            align-items: center;\r\n            height:50%;\r\n          \r\n            label{ \r\n                color:$theme-font;\r\n                font-size:1.5rem;\r\n                width:100%;\r\n            }\r\n\r\n            input{\r\n                background:none;\r\n                border:$border;\r\n                color:$theme-font;\r\n                font-size:1.4rem;\r\n                border-radius:.4rem;\r\n            }\r\n        }\r\n        #form-buttons-td{\r\n            padding:1.2rem;\r\n            width:100%;\r\n            display:flex;\r\n            justify-content: space-evenly;\r\n            button{\r\n                height:2rem;\r\n                width:10rem;\r\n                font-size:1rem;\r\n                border-radius:.5rem;\r\n                color:$theme-font;\r\n                background: $bgColor;\r\n                border:none;\r\n                \r\n                \r\n                padding:.3rem;\r\n                font-family:'Open Sans', sans-serif;\r\n                font-weight:700;\r\n                font-size:.8rem;\r\n                box-shadow:1px 2px 3px black;\r\n\r\n            }\r\n        }\r\n}\r\n\r\n#todo-create-new{\r\n    height:2rem;\r\n    width:10rem;\r\n    font-size:1rem;\r\n    border:$border;\r\n    border-radius:.5rem;\r\n    color:$theme-font;\r\n    text-shadow: 1px 3px 5px rgba(0,0,0,0.6);\r\n    background: $bgColor;\r\n    box-shadow: 1px 2px 3px black;\r\n\r\n    transition:ease-in-out 150ms;\r\n}\r\n#todo-create-new:hover{\r\n    height:3rem;\r\n    width:12rem;\r\n    box-shadow: 1px 4px 5px black;\r\n    transition:ease-in-out 150ms;\r\n\r\n\r\n}"],sourceRoot:""}]);const m=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var d=this[A][0];null!=d&&(i[d]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},i=[],A=0;A<e.length;A++){var d=e[A],s=r.base?d[0]+r.base:d[0],l=a[s]||0,c="".concat(s," ").concat(l);a[s]=l+1;var u=n(c),C={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)t[u].references++,t[u].updater(C);else{var m=o(C,r);r.byIndex=A,t.splice(A,0,{identifier:c,updater:m,references:1})}i.push(c)}return i}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var A=n(a[i]);t[A].references--}for(var d=r(e,o),s=0;s<a.length;s++){var l=n(a[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=d}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},498:(e,t,n)=>{e.exports=n.p+"b89791f2239f6e86de64.svg"},794:(e,t,n)=>{e.exports=n.p+"c2b09013f238c8f640ed.svg"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{class e{constructor(e,t,n,r,o){this._title=e,this._description=t,this._dueDate=n,this._priority=r,this.id=o}get title(){return this._title}get description(){return this._description}get dueDate(){return this._dueDate}get priority(){return this._priority}get id(){return this._id}set title(e){this._title=e}set description(e){this._description=e}set dueDate(e){this._dueDate=e}set priority(e){this._priority=e}set id(e){this._id=e}}class t{todos=[];constructor(e,t,n){this._title=e,this._id=t,this._div=n}get title(){return this._title}set title(e){this._title=e}get id(){return this._id}get div(){return this._div}set div(e){this._div=e}addTodo(e){this.todos.push(e)}getAll(){return this.todos}}const r=(e,t)=>{let n=e.getAll();for(let e in n)n[e].id==t&&n.splice(e,1)};function o(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function A(e){o(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"===i(e)&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function d(e){if(null===e||!0===e||!1===e)return NaN;var t=Number(e);return isNaN(t)?t:t<0?Math.ceil(t):Math.floor(t)}function s(e){o(1,arguments);var t=A(e),n=t.getUTCDay(),r=(n<1?7:0)+n-1;return t.setUTCDate(t.getUTCDate()-r),t.setUTCHours(0,0,0,0),t}function l(e){o(1,arguments);var t=A(e),n=t.getUTCFullYear(),r=new Date(0);r.setUTCFullYear(n+1,0,4),r.setUTCHours(0,0,0,0);var a=s(r),i=new Date(0);i.setUTCFullYear(n,0,4),i.setUTCHours(0,0,0,0);var d=s(i);return t.getTime()>=a.getTime()?n+1:t.getTime()>=d.getTime()?n:n-1}var c=6048e5;var u={};function C(){return u}function m(e,t){var n,r,a,i,s,l,c,u;o(1,arguments);var m=C(),p=d(null!==(n=null!==(r=null!==(a=null!==(i=null==t?void 0:t.weekStartsOn)&&void 0!==i?i:null==t||null===(s=t.locale)||void 0===s||null===(l=s.options)||void 0===l?void 0:l.weekStartsOn)&&void 0!==a?a:m.weekStartsOn)&&void 0!==r?r:null===(c=m.locale)||void 0===c||null===(u=c.options)||void 0===u?void 0:u.weekStartsOn)&&void 0!==n?n:0);if(!(p>=0&&p<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var h=A(e),f=h.getUTCDay(),g=(f<p?7:0)+f-p;return h.setUTCDate(h.getUTCDate()-g),h.setUTCHours(0,0,0,0),h}function p(e,t){var n,r,a,i,s,l,c,u;o(1,arguments);var p=A(e),h=p.getUTCFullYear(),f=C(),g=d(null!==(n=null!==(r=null!==(a=null!==(i=null==t?void 0:t.firstWeekContainsDate)&&void 0!==i?i:null==t||null===(s=t.locale)||void 0===s||null===(l=s.options)||void 0===l?void 0:l.firstWeekContainsDate)&&void 0!==a?a:f.firstWeekContainsDate)&&void 0!==r?r:null===(c=f.locale)||void 0===c||null===(u=c.options)||void 0===u?void 0:u.firstWeekContainsDate)&&void 0!==n?n:1);if(!(g>=1&&g<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var b=new Date(0);b.setUTCFullYear(h+1,0,g),b.setUTCHours(0,0,0,0);var w=m(b,t),x=new Date(0);x.setUTCFullYear(h,0,g),x.setUTCHours(0,0,0,0);var v=m(x,t);return p.getTime()>=w.getTime()?h+1:p.getTime()>=v.getTime()?h:h-1}var h=6048e5;function f(e,t){for(var n=e<0?"-":"",r=Math.abs(e).toString();r.length<t;)r="0"+r;return n+r}const g=function(e,t){var n=e.getUTCFullYear(),r=n>0?n:1-n;return f("yy"===t?r%100:r,t.length)},b=function(e,t){var n=e.getUTCMonth();return"M"===t?String(n+1):f(n+1,2)},w=function(e,t){return f(e.getUTCDate(),t.length)},x=function(e,t){return f(e.getUTCHours()%12||12,t.length)},v=function(e,t){return f(e.getUTCHours(),t.length)},y=function(e,t){return f(e.getUTCMinutes(),t.length)},k=function(e,t){return f(e.getUTCSeconds(),t.length)},B=function(e,t){var n=t.length,r=e.getUTCMilliseconds();return f(Math.floor(r*Math.pow(10,n-3)),t.length)};var E={G:function(e,t,n){var r=e.getUTCFullYear()>0?1:0;switch(t){case"G":case"GG":case"GGG":return n.era(r,{width:"abbreviated"});case"GGGGG":return n.era(r,{width:"narrow"});default:return n.era(r,{width:"wide"})}},y:function(e,t,n){if("yo"===t){var r=e.getUTCFullYear(),o=r>0?r:1-r;return n.ordinalNumber(o,{unit:"year"})}return g(e,t)},Y:function(e,t,n,r){var o=p(e,r),a=o>0?o:1-o;return"YY"===t?f(a%100,2):"Yo"===t?n.ordinalNumber(a,{unit:"year"}):f(a,t.length)},R:function(e,t){return f(l(e),t.length)},u:function(e,t){return f(e.getUTCFullYear(),t.length)},Q:function(e,t,n){var r=Math.ceil((e.getUTCMonth()+1)/3);switch(t){case"Q":return String(r);case"QQ":return f(r,2);case"Qo":return n.ordinalNumber(r,{unit:"quarter"});case"QQQ":return n.quarter(r,{width:"abbreviated",context:"formatting"});case"QQQQQ":return n.quarter(r,{width:"narrow",context:"formatting"});default:return n.quarter(r,{width:"wide",context:"formatting"})}},q:function(e,t,n){var r=Math.ceil((e.getUTCMonth()+1)/3);switch(t){case"q":return String(r);case"qq":return f(r,2);case"qo":return n.ordinalNumber(r,{unit:"quarter"});case"qqq":return n.quarter(r,{width:"abbreviated",context:"standalone"});case"qqqqq":return n.quarter(r,{width:"narrow",context:"standalone"});default:return n.quarter(r,{width:"wide",context:"standalone"})}},M:function(e,t,n){var r=e.getUTCMonth();switch(t){case"M":case"MM":return b(e,t);case"Mo":return n.ordinalNumber(r+1,{unit:"month"});case"MMM":return n.month(r,{width:"abbreviated",context:"formatting"});case"MMMMM":return n.month(r,{width:"narrow",context:"formatting"});default:return n.month(r,{width:"wide",context:"formatting"})}},L:function(e,t,n){var r=e.getUTCMonth();switch(t){case"L":return String(r+1);case"LL":return f(r+1,2);case"Lo":return n.ordinalNumber(r+1,{unit:"month"});case"LLL":return n.month(r,{width:"abbreviated",context:"standalone"});case"LLLLL":return n.month(r,{width:"narrow",context:"standalone"});default:return n.month(r,{width:"wide",context:"standalone"})}},w:function(e,t,n,r){var a=function(e,t){o(1,arguments);var n=A(e),r=m(n,t).getTime()-function(e,t){var n,r,a,i,A,s,l,c;o(1,arguments);var u=C(),h=d(null!==(n=null!==(r=null!==(a=null!==(i=null==t?void 0:t.firstWeekContainsDate)&&void 0!==i?i:null==t||null===(A=t.locale)||void 0===A||null===(s=A.options)||void 0===s?void 0:s.firstWeekContainsDate)&&void 0!==a?a:u.firstWeekContainsDate)&&void 0!==r?r:null===(l=u.locale)||void 0===l||null===(c=l.options)||void 0===c?void 0:c.firstWeekContainsDate)&&void 0!==n?n:1),f=p(e,t),g=new Date(0);return g.setUTCFullYear(f,0,h),g.setUTCHours(0,0,0,0),m(g,t)}(n,t).getTime();return Math.round(r/h)+1}(e,r);return"wo"===t?n.ordinalNumber(a,{unit:"week"}):f(a,t.length)},I:function(e,t,n){var r=function(e){o(1,arguments);var t=A(e),n=s(t).getTime()-function(e){o(1,arguments);var t=l(e),n=new Date(0);return n.setUTCFullYear(t,0,4),n.setUTCHours(0,0,0,0),s(n)}(t).getTime();return Math.round(n/c)+1}(e);return"Io"===t?n.ordinalNumber(r,{unit:"week"}):f(r,t.length)},d:function(e,t,n){return"do"===t?n.ordinalNumber(e.getUTCDate(),{unit:"date"}):w(e,t)},D:function(e,t,n){var r=function(e){o(1,arguments);var t=A(e),n=t.getTime();t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0);var r=n-t.getTime();return Math.floor(r/864e5)+1}(e);return"Do"===t?n.ordinalNumber(r,{unit:"dayOfYear"}):f(r,t.length)},E:function(e,t,n){var r=e.getUTCDay();switch(t){case"E":case"EE":case"EEE":return n.day(r,{width:"abbreviated",context:"formatting"});case"EEEEE":return n.day(r,{width:"narrow",context:"formatting"});case"EEEEEE":return n.day(r,{width:"short",context:"formatting"});default:return n.day(r,{width:"wide",context:"formatting"})}},e:function(e,t,n,r){var o=e.getUTCDay(),a=(o-r.weekStartsOn+8)%7||7;switch(t){case"e":return String(a);case"ee":return f(a,2);case"eo":return n.ordinalNumber(a,{unit:"day"});case"eee":return n.day(o,{width:"abbreviated",context:"formatting"});case"eeeee":return n.day(o,{width:"narrow",context:"formatting"});case"eeeeee":return n.day(o,{width:"short",context:"formatting"});default:return n.day(o,{width:"wide",context:"formatting"})}},c:function(e,t,n,r){var o=e.getUTCDay(),a=(o-r.weekStartsOn+8)%7||7;switch(t){case"c":return String(a);case"cc":return f(a,t.length);case"co":return n.ordinalNumber(a,{unit:"day"});case"ccc":return n.day(o,{width:"abbreviated",context:"standalone"});case"ccccc":return n.day(o,{width:"narrow",context:"standalone"});case"cccccc":return n.day(o,{width:"short",context:"standalone"});default:return n.day(o,{width:"wide",context:"standalone"})}},i:function(e,t,n){var r=e.getUTCDay(),o=0===r?7:r;switch(t){case"i":return String(o);case"ii":return f(o,t.length);case"io":return n.ordinalNumber(o,{unit:"day"});case"iii":return n.day(r,{width:"abbreviated",context:"formatting"});case"iiiii":return n.day(r,{width:"narrow",context:"formatting"});case"iiiiii":return n.day(r,{width:"short",context:"formatting"});default:return n.day(r,{width:"wide",context:"formatting"})}},a:function(e,t,n){var r=e.getUTCHours()/12>=1?"pm":"am";switch(t){case"a":case"aa":return n.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"aaa":return n.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return n.dayPeriod(r,{width:"narrow",context:"formatting"});default:return n.dayPeriod(r,{width:"wide",context:"formatting"})}},b:function(e,t,n){var r,o=e.getUTCHours();switch(r=12===o?"noon":0===o?"midnight":o/12>=1?"pm":"am",t){case"b":case"bb":return n.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"bbb":return n.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return n.dayPeriod(r,{width:"narrow",context:"formatting"});default:return n.dayPeriod(r,{width:"wide",context:"formatting"})}},B:function(e,t,n){var r,o=e.getUTCHours();switch(r=o>=17?"evening":o>=12?"afternoon":o>=4?"morning":"night",t){case"B":case"BB":case"BBB":return n.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"BBBBB":return n.dayPeriod(r,{width:"narrow",context:"formatting"});default:return n.dayPeriod(r,{width:"wide",context:"formatting"})}},h:function(e,t,n){if("ho"===t){var r=e.getUTCHours()%12;return 0===r&&(r=12),n.ordinalNumber(r,{unit:"hour"})}return x(e,t)},H:function(e,t,n){return"Ho"===t?n.ordinalNumber(e.getUTCHours(),{unit:"hour"}):v(e,t)},K:function(e,t,n){var r=e.getUTCHours()%12;return"Ko"===t?n.ordinalNumber(r,{unit:"hour"}):f(r,t.length)},k:function(e,t,n){var r=e.getUTCHours();return 0===r&&(r=24),"ko"===t?n.ordinalNumber(r,{unit:"hour"}):f(r,t.length)},m:function(e,t,n){return"mo"===t?n.ordinalNumber(e.getUTCMinutes(),{unit:"minute"}):y(e,t)},s:function(e,t,n){return"so"===t?n.ordinalNumber(e.getUTCSeconds(),{unit:"second"}):k(e,t)},S:function(e,t){return B(e,t)},X:function(e,t,n,r){var o=(r._originalDate||e).getTimezoneOffset();if(0===o)return"Z";switch(t){case"X":return I(o);case"XXXX":case"XX":return D(o);default:return D(o,":")}},x:function(e,t,n,r){var o=(r._originalDate||e).getTimezoneOffset();switch(t){case"x":return I(o);case"xxxx":case"xx":return D(o);default:return D(o,":")}},O:function(e,t,n,r){var o=(r._originalDate||e).getTimezoneOffset();switch(t){case"O":case"OO":case"OOO":return"GMT"+S(o,":");default:return"GMT"+D(o,":")}},z:function(e,t,n,r){var o=(r._originalDate||e).getTimezoneOffset();switch(t){case"z":case"zz":case"zzz":return"GMT"+S(o,":");default:return"GMT"+D(o,":")}},t:function(e,t,n,r){var o=r._originalDate||e;return f(Math.floor(o.getTime()/1e3),t.length)},T:function(e,t,n,r){return f((r._originalDate||e).getTime(),t.length)}};function S(e,t){var n=e>0?"-":"+",r=Math.abs(e),o=Math.floor(r/60),a=r%60;if(0===a)return n+String(o);var i=t||"";return n+String(o)+i+f(a,2)}function I(e,t){return e%60==0?(e>0?"-":"+")+f(Math.abs(e)/60,2):D(e,t)}function D(e,t){var n=t||"",r=e>0?"-":"+",o=Math.abs(e);return r+f(Math.floor(o/60),2)+n+f(o%60,2)}const T=E;var M=function(e,t){switch(e){case"P":return t.date({width:"short"});case"PP":return t.date({width:"medium"});case"PPP":return t.date({width:"long"});default:return t.date({width:"full"})}},j=function(e,t){switch(e){case"p":return t.time({width:"short"});case"pp":return t.time({width:"medium"});case"ppp":return t.time({width:"long"});default:return t.time({width:"full"})}};const J={p:j,P:function(e,t){var n,r=e.match(/(P+)(p+)?/)||[],o=r[1],a=r[2];if(!a)return M(e,t);switch(o){case"P":n=t.dateTime({width:"short"});break;case"PP":n=t.dateTime({width:"medium"});break;case"PPP":n=t.dateTime({width:"long"});break;default:n=t.dateTime({width:"full"})}return n.replace("{{date}}",M(o,t)).replace("{{time}}",j(a,t))}};var O=["D","DD"],L=["YY","YYYY"];function W(e,t,n){if("YYYY"===e)throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(t,"`) for formatting years to the input `").concat(n,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("YY"===e)throw new RangeError("Use `yy` instead of `YY` (in `".concat(t,"`) for formatting years to the input `").concat(n,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("D"===e)throw new RangeError("Use `d` instead of `D` (in `".concat(t,"`) for formatting days of the month to the input `").concat(n,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("DD"===e)throw new RangeError("Use `dd` instead of `DD` (in `".concat(t,"`) for formatting days of the month to the input `").concat(n,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"))}var z={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function G(e){return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=t.width?String(t.width):e.defaultWidth;return e.formats[n]||e.formats[e.defaultWidth]}}const U={date:G({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:G({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:G({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})};var P={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function Y(e){return function(t,n){var r;if("formatting"===(null!=n&&n.context?String(n.context):"standalone")&&e.formattingValues){var o=e.defaultFormattingWidth||e.defaultWidth,a=null!=n&&n.width?String(n.width):o;r=e.formattingValues[a]||e.formattingValues[o]}else{var i=e.defaultWidth,A=null!=n&&n.width?String(n.width):e.defaultWidth;r=e.values[A]||e.values[i]}return r[e.argumentCallback?e.argumentCallback(t):t]}}const H={ordinalNumber:function(e,t){var n=Number(e),r=n%100;if(r>20||r<10)switch(r%10){case 1:return n+"st";case 2:return n+"nd";case 3:return n+"rd"}return n+"th"},era:Y({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:Y({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(e){return e-1}}),month:Y({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:Y({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:Y({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function N(e){return function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=n.width,o=r&&e.matchPatterns[r]||e.matchPatterns[e.defaultMatchWidth],a=t.match(o);if(!a)return null;var i,A=a[0],d=r&&e.parsePatterns[r]||e.parsePatterns[e.defaultParseWidth],s=Array.isArray(d)?function(e,t){for(var n=0;n<e.length;n++)if(e[n].test(A))return n}(d):function(e,t){for(var n in e)if(e.hasOwnProperty(n)&&e[n].test(A))return n}(d);return i=e.valueCallback?e.valueCallback(s):s,{value:i=n.valueCallback?n.valueCallback(i):i,rest:t.slice(A.length)}}}var q,R={ordinalNumber:(q={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(e){return parseInt(e,10)}},function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.match(q.matchPattern);if(!n)return null;var r=n[0],o=e.match(q.parsePattern);if(!o)return null;var a=q.valueCallback?q.valueCallback(o[0]):o[0];return{value:a=t.valueCallback?t.valueCallback(a):a,rest:e.slice(r.length)}}),era:N({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:N({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(e){return e+1}}),month:N({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:N({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:N({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})};const $={code:"en-US",formatDistance:function(e,t,n){var r,o=z[e];return r="string"==typeof o?o:1===t?o.one:o.other.replace("{{count}}",t.toString()),null!=n&&n.addSuffix?n.comparison&&n.comparison>0?"in "+r:r+" ago":r},formatLong:U,formatRelative:function(e,t,n,r){return P[e]},localize:H,match:R,options:{weekStartsOn:0,firstWeekContainsDate:1}};var Q=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,_=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,F=/^'([^]*?)'?$/,K=/''/g,X=/[a-zA-Z]/;function Z(e,t,n){var r,i,s,l,c,u,m,p,h,f,g,b,w,x,v,y,k,B;o(2,arguments);var E=String(t),S=C(),I=null!==(r=null!==(i=null==n?void 0:n.locale)&&void 0!==i?i:S.locale)&&void 0!==r?r:$,D=d(null!==(s=null!==(l=null!==(c=null!==(u=null==n?void 0:n.firstWeekContainsDate)&&void 0!==u?u:null==n||null===(m=n.locale)||void 0===m||null===(p=m.options)||void 0===p?void 0:p.firstWeekContainsDate)&&void 0!==c?c:S.firstWeekContainsDate)&&void 0!==l?l:null===(h=S.locale)||void 0===h||null===(f=h.options)||void 0===f?void 0:f.firstWeekContainsDate)&&void 0!==s?s:1);if(!(D>=1&&D<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var M=d(null!==(g=null!==(b=null!==(w=null!==(x=null==n?void 0:n.weekStartsOn)&&void 0!==x?x:null==n||null===(v=n.locale)||void 0===v||null===(y=v.options)||void 0===y?void 0:y.weekStartsOn)&&void 0!==w?w:S.weekStartsOn)&&void 0!==b?b:null===(k=S.locale)||void 0===k||null===(B=k.options)||void 0===B?void 0:B.weekStartsOn)&&void 0!==g?g:0);if(!(M>=0&&M<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");if(!I.localize)throw new RangeError("locale must contain localize property");if(!I.formatLong)throw new RangeError("locale must contain formatLong property");var j=A(e);if(!function(e){if(o(1,arguments),!function(e){return o(1,arguments),e instanceof Date||"object"===a(e)&&"[object Date]"===Object.prototype.toString.call(e)}(e)&&"number"!=typeof e)return!1;var t=A(e);return!isNaN(Number(t))}(j))throw new RangeError("Invalid time value");var z=function(e){var t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),e.getTime()-t.getTime()}(j),G=function(e,t){return o(2,arguments),function(e,t){o(2,arguments);var n=A(e).getTime(),r=d(t);return new Date(n+r)}(e,-d(t))}(j,z),U={firstWeekContainsDate:D,weekStartsOn:M,locale:I,_originalDate:j};return E.match(_).map((function(e){var t=e[0];return"p"===t||"P"===t?(0,J[t])(e,I.formatLong):e})).join("").match(Q).map((function(r){if("''"===r)return"'";var o,a,i=r[0];if("'"===i)return(a=(o=r).match(F))?a[1].replace(K,"'"):o;var A,d=T[i];if(d)return null!=n&&n.useAdditionalWeekYearTokens||(A=r,-1===L.indexOf(A))||W(r,t,String(e)),null!=n&&n.useAdditionalDayOfYearTokens||!function(e){return-1!==O.indexOf(e)}(r)||W(r,t,String(e)),d(G,r,I.localize,U);if(i.match(X))throw new RangeError("Format string contains an unescaped latin alphabet character `"+i+"`");return r})).join("")}const V=(e,t,n,o)=>{const a=document.querySelector("#expand-arrow"),i=document.querySelector(".side-panel");a.ondragover=()=>{t.parentElement.classList.remove("expand-panel"),i.classList.remove("display-open"),t.parentElement.classList.add("close-panel"),i.classList.add("display-closed")};let A=document.createElement("div");A.classList.add("todo"),A.id="todo-"+e.id,A.setAttribute("draggable","true");let d=document.createElement("input");d.setAttribute("type","checkbox"),d.classList.add("todo-checkbox");let s=document.createElement("p");s.classList.add("title"),s.textContent=e.title;let l=document.createElement("p");l.classList.add("due-date"),l.textContent=e.dueDate;let c=document.createElement("input");c.setAttribute("type","date"),c.classList.add("todo-new-date"),c.value=e.dueDate;let u=document.createElement("button");u.classList.add("remove-todo"),u.textContent="X";let C=document.createElement("div");C.classList.add("remove-button-container"),C.appendChild(u);let m=document.createElement("div");m.classList.add("checkbox-container"),m.appendChild(d),A.appendChild(m),A.appendChild(s),A.appendChild(l),A.appendChild(C),t.appendChild(A);let p=document.createElement("input");return p.classList.add("todo-new-title"),p.value=e.title,u.addEventListener("click",(()=>{r(n,e.id),A.remove(),localStorage.setItem("packageManager",JSON.stringify(o))})),s.addEventListener("click",(()=>{s.appendChild(p),p.focus()})),p.onblur=()=>{e.title=p.value,s.textContent=e.title,p.remove(),localStorage.setItem("packageManager",JSON.stringify(o))},p.addEventListener("keyup",(({key:e})=>{"Enter"===e&&p.blur()})),A.ondragstart=t=>{const r={todoObj:e,projectObj:n};t.dataTransfer.setData("text",JSON.stringify(r))},A.ondragend=e=>{e.preventDefault(),te(o,n,t)},l.addEventListener("click",(()=>{l.appendChild(c),c.focus()})),c.onblur=()=>{if(""!==c.value){let t=Z(new Date(`${c.value}T00:00`),"MM/dd/yyyy");e.dueDate=t,l.valueAsDate=t,l.textContent=e.dueDate,localStorage.setItem("packageManager",JSON.stringify(o))}c.remove()},c.addEventListener("keyup",(({key:e})=>{"Enter"===e&&c.blur()})),A},ee=(e,t)=>{e.getAll().forEach((n=>{n.getAll().forEach((r=>{V(r,t,n,e)}))}));let n=t.children;n=Array.prototype.slice.call(n),n.sort(((e,t)=>new Date(e.childNodes[2].innerHTML)-new Date(t.childNodes[2].innerHTML)));let r=t;r.innerHTML="";for(let e=0;e<n.length;e++)"Set Date"!==n[e].childNodes[2]?r.appendChild(n[e]):r.insertBefore(n[e],r.firstChild)},te=(e,t,n)=>{n.innerHTML="","All"===t.title?ee(e,n):t.getAll().forEach((r=>{V(r,n,t,e)}))},ne=(t,n,r)=>{const o=document.querySelector(".main-panel");let a=document.createElement("button");a.classList.add("create-todo-form-button"),a.id="todo-create-new",a.textContent="Create new Todo",a.addEventListener("click",(()=>{((t,n,r)=>{let o=document.createElement("div");o.classList.add("create-todo-form");let a=document.createElement("form");a.id="todo-form";let i=document.createElement("label");i.setAttribute("for","form-todo-title"),i.textContent="todo:";let A=document.createElement("input");A.setAttribute("type","text"),A.id="form-Todo-title";let d=document.createElement("label");d.setAttribute("for","form-todo-dueDate"),d.textContent="Due Date";let s=document.createElement("input");s.setAttribute("type","date"),s.id="form-todo-dueDate";let l=document.createElement("label");l.setAttribute("for","form-todo-priority"),l.textContent="Priority";let c=document.createElement("input");c.setAttribute("type","text"),c.id="form-todo-priority";let u=document.createElement("button");u.textContent="+Add",u.classList.add("form-create-td");let C=document.createElement("button");C.textContent="Cancel",C.classList.add("form-remove-td");let m=document.createElement("div");m.id="form-buttons-td",m.appendChild(u),m.appendChild(C),a.appendChild(i),a.appendChild(A),o.appendChild(a),o.appendChild(m),document.body.appendChild(o),A.focus(),A.onblur=()=>{""!==A.value?p():o.remove()},C.onclick=()=>{o.remove()},a.addEventListener("submit",(e=>{e.preventDefault(),p()})),u.addEventListener("click",(()=>{p()}));const p=()=>{let a;if(a=""!==s.value?Z(new Date(`${s.value}T00:00`),"MM/dd/yyyy"):"Set Date",""!==A.value){let i=new e(A.value," ",a,c.value,(()=>{let e=0;return t.getAll().forEach((t=>{t.getAll().forEach((t=>e+=1))})),e})());n.addTodo(i),o.remove(),te(t,n,r),localStorage.setItem("packageManager",JSON.stringify(t))}}})(t,n,r)}));let i=document.getElementById("todo-create-new"),A=document.createElement("div");return A.id="tool-tip",A.innerHTML='<p id="tip-paragraph">Try dragging and dropping a Task into a project!</p>',document.body.contains(i)&&i.remove(),o.appendChild(a),o.appendChild(A),a},re=(t,n,o,a,i,A)=>{const d=document.querySelector("#nav-title"),s=i.parentElement;if(document.querySelector("#expand-arrow").onclick=()=>{A.parentElement.classList.remove("expand-panel"),s.classList.remove("display-open"),A.parentElement.classList.add("close-panel"),s.classList.add("display-closed")},"All"!==n.title){let e=document.createElement("div"),o=document.createElement("button");o.classList.add("edit-project");let c=document.createElement("img");c.classList.add("edit-icon"),o.appendChild(c),e.classList.add("project"),e.id="project-"+a;let u=document.createElement("p");u.classList.add("project-name"),u.textContent=n.title;let C=document.createElement("input");C.id="new-name-input",C.value=n.title;let m=document.createElement("button");m.classList.add("project-remove-button"),m.textContent="X",e.appendChild(u);let p=document.createElement("div");p.classList.add("button-panel"),p.appendChild(o),p.appendChild(m),e.appendChild(p),i.appendChild(e),e.addEventListener("drop",(e=>l(e,n,t))),m.addEventListener("click",(()=>{r(t,n.id),localStorage.setItem("packageManager",JSON.stringify(t)),e.remove()})),o.addEventListener("click",(()=>{u.remove(),e.appendChild(C),C.focus()})),C.onblur=()=>{u.textContent=C.value,n.title=C.value,C.remove(),e.insertBefore(u,p),localStorage.setItem("packageManager",JSON.stringify(t))},C.addEventListener("keyup",(({key:e})=>{"Enter"===e&&C.blur()})),e.addEventListener("click",(function(e){e.target!==this&&e.target!==u||(A.parentElement.classList.contains("close-panel")&&(A.parentElement.classList.remove("close-panel"),s.classList.remove("display-closed")),A.parentElement.classList.add("expand-panel"),s.classList.add("display-open"),A.innerHTML="",d.textContent=n.title,te(t,n,A),ne(t,n,A))})),e.addEventListener("dragover",(e=>{e.preventDefault()}))}else{let e=document.createElement("div");e.classList.add("project"),e.id="all-projects-container";let r=document.createElement("p");r.classList.add("project-name"),r.textContent=n.title,e.appendChild(r),i.appendChild(e),e.addEventListener("click",(function(){A.parentElement.classList.contains("close-panel")&&(A.parentElement.classList.remove("close-panel"),s.classList.remove("display-closed")),A.parentElement.classList.add("expand-panel"),s.classList.add("display-open"),A.innerHTML="",d.textContent=n.title,ee(t,A),ne(t,n,A)}))}const l=(t,n,o)=>{t.preventDefault();const a=JSON.parse(t.dataTransfer.getData("text")).todoObj,i=JSON.parse(t.dataTransfer.getData("text")).projectObj,A=new e(a._title,a._description,a._dueDate," ",a._id);n.addTodo(A);let d=o.getAll();for(let e in d)if(d[e].id==i._id){let t=d[e];r(t,A.id)}localStorage.setItem("packageManager",JSON.stringify(o))}},oe=(e,t,n)=>{t.innerHTML="",e.projects.forEach((r=>{const o=re(e,r,r.title,r.id,t,n);r.div=o,localStorage.setItem("packageManager",JSON.stringify(e))}))};var ae=n(379),ie=n.n(ae),Ae=n(795),de=n.n(Ae),se=n(569),le=n.n(se),ce=n(565),ue=n.n(ce),Ce=n(216),me=n.n(Ce),pe=n(589),he=n.n(pe),fe=n(169),ge={};ge.styleTagTransform=he(),ge.setAttributes=ue(),ge.insert=le().bind(null,"head"),ge.domAPI=de(),ge.insertStyleElement=me(),ie()(fe.Z,ge),fe.Z&&fe.Z.locals&&fe.Z.locals;let be,we=new class{projects=[];addProj(e){this.projects.push(e)}getAll(){return this.projects}};if(null!=localStorage.getItem("packageManager")){if(be=JSON.parse(localStorage.getItem("packageManager")).projects,be.forEach(((n,r)=>{let o=new t(n._title,n._id,n._div);we.addProj(o),n.todos.forEach((t=>{let n=new e(t._title,t._description,t._dueDate,"",t._id);o.addTodo(n)}))})),we.getAll().length<1){let e=new t("All",0);we.addProj(e)}}else{let e=new t("Project",0);we.addProj(e)}const xe=(()=>{let e=document.createElement("div");e.classList.add("main-panel");let t=document.createElement("div");t.id="nav-bar";let n=document.createElement("div");n.id="expand-arrow";let r=document.createElement("div");r.classList.add("project-display-panel");let o=document.createElement("p");return o.textContent="Project Title",o.id="nav-title",t.appendChild(n),t.appendChild(o),e.appendChild(t),e.appendChild(r),document.body.appendChild(e),r})(),ve=((e,n)=>{let r=document.createElement("div");r.classList.add("side-panel");let o=document.createElement("div");o.classList.add("projman-header"),o.innerHTML="<h2 id = panel-title>Todo-App</h2> <p id ='projman-label'>Projects</p>";let a=document.createElement("div");a.classList.add("project-manager");let i=document.createElement("button");i.classList.add("new-project-button"),i.textContent="+ Add Project";let A=document.querySelector(".main-panel");const d=document.body;return r.appendChild(o),r.appendChild(a),r.appendChild(i),d.insertBefore(r,A),i.addEventListener("click",(()=>{((e,n,r)=>{let o=document.createElement("input");o.setAttribute("type","text"),o.id="form-project-name";let a=document.createElement("button");a.textContent="+ Add",a.id="create-button";let i=document.createElement("div");i.id="input-placeholder",i.classList.add("project"),i.appendChild(o),i.appendChild(a),e.appendChild(i),o.focus(),o.addEventListener("keyup",(({key:e})=>{"Enter"===e&&o.blur()})),a.addEventListener("click",(()=>{""!==o.value?A():i.remove()})),o.onblur=()=>{""!==o.value?A():i.remove()};const A=()=>{let a=new t(o.value,n.getAll().length);n.addProj(a),oe(n,e,r),localStorage.setItem("packageManager",JSON.stringify(n))}})(a,e,n)})),a})(we,xe);oe(we,ve,xe),localStorage.setItem("packageManager",JSON.stringify(we))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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dXJjZXMiOlsid2VicGFjazovL3RvZG8vLi9zcmMvbWFpbi5zY3NzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvZG8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvZG8vd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvanNvbnAgY2h1bmsgbG9hZGluZyIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL21vZHVsZXMvVG9kby5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL21vZHVsZXMvUHJvamVjdC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL21vZHVsZXMvcmVtb3ZlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9pc0RhdGUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vdG9EYXRlL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvdG9JbnRlZ2VyL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvc3RhcnRPZlVUQ0lTT1dlZWsvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vX2xpYi9nZXRVVENJU09XZWVrWWVhci9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL2dldFVUQ0lTT1dlZWsvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vX2xpYi9kZWZhdWx0T3B0aW9ucy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL3N0YXJ0T2ZVVENXZWVrL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvZ2V0VVRDV2Vla1llYXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vX2xpYi9nZXRVVENXZWVrL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvYWRkTGVhZGluZ1plcm9zL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvZm9ybWF0L2xpZ2h0Rm9ybWF0dGVycy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL2Zvcm1hdC9mb3JtYXR0ZXJzL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvc3RhcnRPZlVUQ1dlZWtZZWFyL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvc3RhcnRPZlVUQ0lTT1dlZWtZZWFyL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvZ2V0VVRDRGF5T2ZZZWFyL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvZm9ybWF0L2xvbmdGb3JtYXR0ZXJzL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvcHJvdGVjdGVkVG9rZW5zL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2xvY2FsZS9lbi1VUy9fbGliL2Zvcm1hdERpc3RhbmNlL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2xvY2FsZS9fbGliL2J1aWxkRm9ybWF0TG9uZ0ZuL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2xvY2FsZS9lbi1VUy9fbGliL2Zvcm1hdExvbmcvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vbG9jYWxlL2VuLVVTL19saWIvZm9ybWF0UmVsYXRpdmUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vbG9jYWxlL19saWIvYnVpbGRMb2NhbGl6ZUZuL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2xvY2FsZS9lbi1VUy9fbGliL2xvY2FsaXplL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2xvY2FsZS9fbGliL2J1aWxkTWF0Y2hGbi9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9sb2NhbGUvZW4tVVMvX2xpYi9tYXRjaC9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9sb2NhbGUvX2xpYi9idWlsZE1hdGNoUGF0dGVybkZuL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2xvY2FsZS9lbi1VUy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL2RlZmF1bHRMb2NhbGUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vZm9ybWF0L2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2lzVmFsaWQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vX2xpYi9nZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL3N1Yk1pbGxpc2Vjb25kcy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9hZGRNaWxsaXNlY29uZHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9tb2R1bGVzL2RyYXdUb2RvLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvbW9kdWxlcy9kcmF3QWxsVG9kb3MuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9tb2R1bGVzL2RyYXdFeGlzdGluZ1RvZG9zLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvbW9kdWxlcy9uZXdUb2RvQnV0dG9uLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvbW9kdWxlcy9uZXdUb2RvRm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL21vZHVsZXMvZHJhd1Byb2plY3RzVG9MaXN0LmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvbW9kdWxlcy9sb2FkUHJvamVjdHMuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9tYWluLnNjc3M/NGU1MyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvbW9kdWxlcy9Qcm9qZWN0TWFuYWdlci5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL21vZHVsZXMvbG9hZE1haW4uanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9tb2R1bGVzL25ld1Byb2plY3RGb3JtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuL2ltZy9wZW5jaWwuc3ZnXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18gPSBuZXcgVVJMKFwiLi9pbWcvcHJvamVjdHMuc3ZnXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG86d2dodEA3MDAmZGlzcGxheT1zd2FwKTtcIl0pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIkBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9R3J1cHBvJmRpc3BsYXk9c3dhcCk7XCJdKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU9wZW4rU2FuczppdGFsLHdnaHRAMCwzMDA7MCw0MDA7MCw1MDA7MCw2MDA7MCw3MDA7MCw4MDA7MSw0MDA7MSw1MDA7MSw2MDA7MSw3MDA7MSw4MDAmZGlzcGxheT1zd2FwKTtcIl0pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIkBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9R3J1cHBvJmRpc3BsYXk9c3dhcCk7XCJdKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVJvYm90bzp3Z2h0QDcwMCZkaXNwbGF5PXN3YXApO1wiXSk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIip7bWFyZ2luOjA7Zm9udC1mYW1pbHk6XFxcIk9wZW4gU2Fuc1xcXCIsc2Fucy1zZXJpZjtib3gtc2l6aW5nOmJvcmRlci1ib3h9Ym9keXtkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7aGVpZ2h0OjEwMHZoO3dpZHRoOjEwMHZ3O2ZvbnQtd2VpZ2h0OjcwMDtmb250LXNpemU6MThwdDtiYWNrZ3JvdW5kLWNvbG9yOiMyMjJ9QGtleWZyYW1lcyBleHBhbmR7ZnJvbXt3aWR0aDowdnc7bGVmdDoxMDAlfXRve3dpZHRoOjEwMHZ3O2xlZnQ6MH19QGtleWZyYW1lcyBjbG9zZXtmcm9te3dpZHRoOjEwMHZ3O2xlZnQ6MH10b3t3aWR0aDowdnc7bGVmdDoxMDAlfX1Aa2V5ZnJhbWVzIG9wZW5EaXNwbGF5e2Zyb217cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwdnc7aGVpZ2h0OjEwMCU7cmlnaHQ6MCU7ei1pbmRleDoyfXRve3Bvc2l0aW9uOnJlbGF0aXZlO3JpZ2h0OjEwMCU7d2lkdGg6MDt2aXNpYmlsaXR5OmhpZGRlbn19QGtleWZyYW1lcyBjbG9zZURpc3BsYXl7ZnJvbXtwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDowO3JpZ2h0OjEwMCV9dG97cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwdnc7aGVpZ2h0OjEwMCU7cmlnaHQ6MDt6LWluZGV4OjJ9fUBtZWRpYShtaW4td2lkdGg6IDUwMHB4KXtAa2V5ZnJhbWVzIGV4cGFuZHtmcm9te3dpZHRoOjB2dztsZWZ0OjEwMCV9dG97d2lkdGg6Y2xhbXAoNTAwcHgsNzAlLDgwMHB4KTtsZWZ0OjB9fUBrZXlmcmFtZXMgY2xvc2V7ZnJvbXt3aWR0aDpjbGFtcCg1MDBweCw3MCUsODAwcHgpO2xlZnQ6MH10b3t3aWR0aDowdnc7bGVmdDoxMDAlfX1Aa2V5ZnJhbWVzIG9wZW5EaXNwbGF5e2Zyb217cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6Y2xhbXAoNTAwcHgsNzAlLDgwMHB4KTtoZWlnaHQ6MTAwJTtyaWdodDowJTt6LWluZGV4OjJ9dG97cG9zaXRpb246cmVsYXRpdmU7cmlnaHQ6MTAwJTt3aWR0aDowO3Zpc2liaWxpdHk6aGlkZGVufX1Aa2V5ZnJhbWVzIGNsb3NlRGlzcGxheXtmcm9te3Bvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjA7cmlnaHQ6MTAwJX10b3twb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDpjbGFtcCg1MDBweCw3MCUsODAwcHgpO2hlaWdodDoxMDAlO3JpZ2h0OjA7ei1pbmRleDoyfX19QG1lZGlhKG1heC13aWR0aDogNTAwcHgpey5zaWRlLXBhbmVse2JhY2tncm91bmQtY29sb3I6I2ZmZjt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO3Bvc2l0aW9uOnJlbGF0aXZlO3otaW5kZXg6Mn0uZGlzcGxheS1vcGVue2FuaW1hdGlvbi1kdXJhdGlvbjoyMDBtc30uZGlzcGxheS1jbG9zZWR7YW5pbWF0aW9uLWR1cmF0aW9uOjIwMG1zfSNwYW5lbC10aXRsZXtwYWRkaW5nOjJyZW07Y29sb3I6cmdiYSgxNjYsNjksMCwuOTg0MzEzNzI1NSk7Zm9udC1zaXplOjNyZW19fS5zaWRlLXBhbmVse2JhY2tncm91bmQtY29sb3I6IzIyMjtoZWlnaHQ6MTAwJTt3aWR0aDoxMDAlO3Bvc2l0aW9uOnJlbGF0aXZlO3otaW5kZXg6MjtkaXNwbGF5OmZsZXg7Z2FwOjJyZW07ZmxleC1kaXJlY3Rpb246Y29sdW1uO2FsaWduLWl0ZW1zOmNlbnRlcjtiYWNrZ3JvdW5kOiMyMjJ9I3BhbmVsLXRpdGxle3BhZGRpbmc6MnJlbTt0ZXh0LWFsaWduOmNlbnRlcjtjb2xvcjpyZ2JhKDE2Niw2OSwwLC45ODQzMTM3MjU1KTtmb250LXNpemU6M3JlbTt0ZXh0LXNoYWRvdzoxcHggM3B4IDVweCByZ2JhKDAsMCwwLC42KX0ucHJvam1hbi1oZWFkZXJ7d2lkdGg6ODAlfSNwcm9qbWFuLWxhYmVse2ZvbnQtc2l6ZToxLjVyZW07cG9zaXRpb246cmVsYXRpdmU7dG9wOjFyZW07Y29sb3I6cmdiYSgxNjYsNjksMCwuOTg0MzEzNzI1NSk7dGV4dC1zaGFkb3c6MXB4IDNweCA1cHggcmdiYSgwLDAsMCwuNil9LmRpc3BsYXktb3BlbnthbmltYXRpb24tbmFtZTpvcGVuRGlzcGxheTthbmltYXRpb24tZGVsYXk6MG1zO2FuaW1hdGlvbi1kdXJhdGlvbjozMDBtczthbmltYXRpb24tZmlsbC1tb2RlOmZvcndhcmRzfS5kaXNwbGF5LWNsb3NlZHthbmltYXRpb24tbmFtZTpjbG9zZURpc3BsYXk7YW5pbWF0aW9uLWRlbGF5OjBtczthbmltYXRpb24tZHVyYXRpb246MzAwbXM7YW5pbWF0aW9uLWZpbGwtbW9kZTpmb3J3YXJkc30ucHJvamVjdC1tYW5hZ2Vye2Rpc3BsYXk6ZmxleDt3aWR0aDoxMDAlO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtnYXA6MXJlbTthbGlnbi1pdGVtczpjZW50ZXJ9LnByb2plY3R7dGV4dC1zaGFkb3c6MXB4IDNweCA1cHggcmdiYSgwLDAsMCwuNik7Ym94LXNoYWRvdzoxcHggM3B4IDVweCAjMDAwO2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nOi41cmVtIDFyZW0gLjVyZW0gMXJlbTtkaXNwbGF5OmZsZXg7d2lkdGg6ODAlO2NvbG9yOnJnYmEoMTY2LDY5LDAsLjk4NDMxMzcyNTUpO2JvcmRlcjoxcHggc29saWQgcmdiYSgxNjYsNjksMCwuOTg0MzEzNzI1NSk7Ym9yZGVyLXJhZGl1czouNXJlbTt0cmFuc2l0aW9uOmVhc2UtaW4tb3V0IDE1MG1zfS5wcm9qZWN0IC5wcm9qZWN0LW5hbWV7bGVmdDoxcmVtO3Bvc2l0aW9uOnJlbGF0aXZlO3RleHQtYWxpZ246Y2VudGVyO2ZvbnQtc2l6ZToxLjRyZW19LnByb2plY3QgLmJ1dHRvbi1wYW5lbHtwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjM7bGVmdDo3MCU7ZGlzcGxheTpmbGV4O2dhcDoxcmVtfS5wcm9qZWN0OmhvdmVye3dpZHRoOjkwJTtoZWlnaHQ6My41cmVtO3RyYW5zaXRpb246ZWFzZS1pbi1vdXQgMTUwbXN9I25ldy1uYW1lLWlucHV0e2ZvbnQtZmFtaWx5OlxcXCJPcGVuIFNhbnNcXFwiLHNhbnMtc2VyaWY7Zm9udC1zaXplOjEuNHJlbTtmb250LXdlaWdodDo3MDA7d2lkdGg6NzIlO2JhY2tncm91bmQ6IzIyMjtjb2xvcjpyZ2JhKDE2Niw2OSwwLC45ODQzMTM3MjU1KTtib3JkZXItcmFkaXVzOi42cmVtO2JvcmRlcjpub25lO2JveC1zaGFkb3c6MXB4IDJweCAzcHggIzAwMH0uZWRpdC1wcm9qZWN0e2FwcGVhcmFuY2U6bm9uZTtiYWNrZ3JvdW5kOm5vbmU7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDE2Niw2OSwwLC45ODQzMTM3MjU1KTtib3JkZXItcmFkaXVzOi40cmVtO2hlaWdodDoyNHB4O3dpZHRoOjI0cHg7Ym9yZGVyOm5vbmU7Ym94LXNoYWRvdzoxcHggMnB4IDNweCAjMDAwO3BhZGRpbmc6LjJyZW19LmVkaXQtaWNvbnt3aWR0aDoxNy42cHg7aGVpZ2h0OjE3LjZweDtjb2xvcjpyZ2JhKDE2Niw2OSwwLC45ODQzMTM3MjU1KTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTY2LDY5LDAsLjk4NDMxMzcyNTUpO21hc2staW1hZ2U6dXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKTttYXNrLXNpemU6Mi45cmVtO21hc2stY2xpcDpib3JkZXItYm94fS5uZXctcHJvamVjdC1idXR0b257aGVpZ2h0OjJyZW07d2lkdGg6MTByZW07Zm9udC1zaXplOjFyZW07Ym9yZGVyLXJhZGl1czouNXJlbTtjb2xvcjpyZ2JhKDE2Niw2OSwwLC45ODQzMTM3MjU1KTtiYWNrZ3JvdW5kOiMyMjI7YXBwZWFyYW5jZTpub25lO2JhY2tncm91bmQ6bm9uZTtib3JkZXItcmFkaXVzOi40cmVtO2JvcmRlcjpub25lO3RleHQtc2hhZG93OjFweCAzcHggNXB4IHJnYmEoMCwwLDAsLjYpO2JveC1zaGFkb3c6MXB4IDJweCAzcHggIzAwMDtwYWRkaW5nOi4ycmVtO3RyYW5zaXRpb246ZWFzZS1pbi1vdXQgMTUwbXN9Lm5ldy1wcm9qZWN0LWJ1dHRvbjpob3ZlcntoZWlnaHQ6Mi41cmVtO3dpZHRoOjEycmVtO3RyYW5zaXRpb246ZWFzZS1pbi1vdXQgMTUwbXN9LnByb2plY3QtcmVtb3ZlLWJ1dHRvbnthcHBlYXJhbmNlOm5vbmU7YmFja2dyb3VuZDpub25lO2JvcmRlcjpub25lO2JvcmRlci1yYWRpdXM6LjRyZW07aGVpZ2h0OjI0cHg7d2lkdGg6MjRweDtwYWRkaW5nOi4xcmVtO2NvbG9yOnJnYmEoMTY2LDY5LDAsLjk4NDMxMzcyNTUpO2ZvbnQtZmFtaWx5OlxcXCJPcGVuIFNhbnNcXFwiLHNhbnMtc2VyaWY7Zm9udC13ZWlnaHQ6NzAwO2ZvbnQtc2l6ZTouOHJlbTtib3gtc2hhZG93OjFweCAycHggM3B4ICMwMDB9I2lucHV0LXBsYWNlaG9sZGVye2ZsZXgtc2hyaW5rOjA7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpzcGFjZS1hcm91bmR9I2Zvcm0tcHJvamVjdC1uYW1le2ZvbnQtZmFtaWx5OlxcXCJPcGVuIFNhbnNcXFwiLHNhbnMtc2VyaWY7Zm9udC1zaXplOjEuNHJlbTtmb250LXdlaWdodDo3MDA7d2lkdGg6NzIlO2JhY2tncm91bmQ6bm9uZTtjb2xvcjpyZ2JhKDE2Niw2OSwwLC45ODQzMTM3MjU1KTtib3JkZXItcmFkaXVzOi42cmVtO2JvcmRlcjpub25lO2JveC1zaGFkb3c6MXB4IDJweCAzcHggIzAwMH0jY3JlYXRlLWJ1dHRvbnthcHBlYXJhbmNlOm5vbmU7YmFja2dyb3VuZDpub25lO2JvcmRlcjpub25lO2JvcmRlci1yYWRpdXM6LjRyZW07cGFkZGluZzouM3JlbTtjb2xvcjpyZ2JhKDE2Niw2OSwwLC45ODQzMTM3MjU1KTtmb250LWZhbWlseTpcXFwiT3BlbiBTYW5zXFxcIixzYW5zLXNlcmlmO2ZvbnQtd2VpZ2h0OjcwMDtmb250LXNpemU6LjhyZW07Ym94LXNoYWRvdzoxcHggMnB4IDNweCAjMDAwfUBtZWRpYShtaW4td2lkdGg6IDUwMHB4KXsuc2lkZS1wYW5lbHt3aWR0aDpjbGFtcCg1MDBweCw3MCUsODAwcHgpO2JvcmRlci1yYWRpdXM6MnJlbX1ib2R5e2JhY2tncm91bmQtY29sb3I6I2ZmZn19QGtleWZyYW1lcyBleHBhbmR7ZnJvbXt3aWR0aDowdnc7bGVmdDoxMDAlfXRve3dpZHRoOjEwMHZ3O2xlZnQ6MH19QGtleWZyYW1lcyBjbG9zZXtmcm9te3dpZHRoOjEwMHZ3O2xlZnQ6MH10b3t3aWR0aDowdnc7bGVmdDoxMDAlfX1Aa2V5ZnJhbWVzIG9wZW5EaXNwbGF5e2Zyb217cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwdnc7aGVpZ2h0OjEwMCU7cmlnaHQ6MCU7ei1pbmRleDoyfXRve3Bvc2l0aW9uOnJlbGF0aXZlO3JpZ2h0OjEwMCU7d2lkdGg6MDt2aXNpYmlsaXR5OmhpZGRlbn19QGtleWZyYW1lcyBjbG9zZURpc3BsYXl7ZnJvbXtwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDowO3JpZ2h0OjEwMCV9dG97cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwdnc7aGVpZ2h0OjEwMCU7cmlnaHQ6MDt6LWluZGV4OjJ9fUBtZWRpYShtaW4td2lkdGg6IDUwMHB4KXtAa2V5ZnJhbWVzIGV4cGFuZHtmcm9te3dpZHRoOjB2dztsZWZ0OjEwMCV9dG97d2lkdGg6Y2xhbXAoNTAwcHgsNzAlLDgwMHB4KTtsZWZ0OjB9fUBrZXlmcmFtZXMgY2xvc2V7ZnJvbXt3aWR0aDpjbGFtcCg1MDBweCw3MCUsODAwcHgpO2xlZnQ6MH10b3t3aWR0aDowdnc7bGVmdDoxMDAlfX1Aa2V5ZnJhbWVzIG9wZW5EaXNwbGF5e2Zyb217cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6Y2xhbXAoNTAwcHgsNzAlLDgwMHB4KTtoZWlnaHQ6MTAwJTtyaWdodDowJTt6LWluZGV4OjJ9dG97cG9zaXRpb246cmVsYXRpdmU7cmlnaHQ6MTAwJTt3aWR0aDowO3Zpc2liaWxpdHk6aGlkZGVufX1Aa2V5ZnJhbWVzIGNsb3NlRGlzcGxheXtmcm9te3Bvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjA7cmlnaHQ6MTAwJX10b3twb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDpjbGFtcCg1MDBweCw3MCUsODAwcHgpO2hlaWdodDoxMDAlO3JpZ2h0OjA7ei1pbmRleDoyfX19Lm1haW4tcGFuZWx7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtnYXA6NXJlbTthbGlnbi1pdGVtczpjZW50ZXI7YmFja2dyb3VuZC1jb2xvcjojMjIyO2NvbG9yOnJnYmEoMTY2LDY5LDAsLjk4NDMxMzcyNTUpO3Bvc2l0aW9uOnJlbGF0aXZlO2hlaWdodDoxMDAlO3dpZHRoOjA7bGVmdDoxMDAlO3otaW5kZXg6MDtvdmVyZmxvdzpoaWRkZW59LmV4cGFuZC1wYW5lbHthbmltYXRpb24tbmFtZTpleHBhbmQ7YW5pbWF0aW9uLWR1cmF0aW9uOjMwMG1zO2FuaW1hdGlvbi1maWxsLW1vZGU6Zm9yd2FyZHN9LmNsb3NlLXBhbmVse2FuaW1hdGlvbi1uYW1lOmNsb3NlO2FuaW1hdGlvbi1kdXJhdGlvbjozMDBtczthbmltYXRpb24tZmlsbC1tb2RlOmZvcndhcmRzfS5wcm9qZWN0LWRpc3BsYXktcGFuZWx7cGFkZGluZy10b3A6NXJlbTt3aWR0aDoxMDAlO2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7Z2FwOjUlO2FsaWduLWl0ZW1zOmNlbnRlcn0jbmF2LWJhcntwb3NpdGlvbjphYnNvbHV0ZTtkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7dG9wOjAlO2hlaWdodDozcmVtO3dpZHRoOjEwMCU7cGFkZGluZzoxcmVtO292ZXJmbG93OnZpc2libGU7dGV4dC1zaGFkb3c6MXB4IDNweCA1cHggcmdiYSgwLDAsMCwuNik7Ym94LXNoYWRvdzoxcHggM3B4IDVweCAjMDAwfSNleHBhbmQtYXJyb3d7ZmxleDoxIDEgYXV0bztiYWNrZ3JvdW5kOnJnYmEoMTY2LDY5LDAsLjk4NDMxMzcyNTUpO21hc2staW1hZ2U6dXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyArIFwiKTttYXNrLXJlcGVhdDpuby1yZXBlYXQ7bWFzay1zaXplOjZyZW07d2lkdGg6M3JlbTtoZWlnaHQ6MS44cmVtfSNuYXYtdGl0bGV7ZmxleDo1IDUgYXV0b31AbWVkaWEobWluLXdpZHRoOiA1MDBweCl7Lm1haW4tcGFuZWx7Ym9yZGVyLXJhZGl1czoycmVtfSNuYXYtYmFye2hlaWdodDo0cmVtfX0jdG9vbC10aXB7Zm9udC1zaXplOi44cmVtfS50b2Rve3RleHQtc2hhZG93OjFweCAzcHggNXB4IHJnYmEoMCwwLDAsLjYpO2JveC1zaGFkb3c6MXB4IDJweCAzcHggIzAwMDt3aWR0aDo5MCU7cGFkZGluZzoxcmVtO2Rpc3BsYXk6ZmxleDtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMTY2LDY5LDAsLjk4NDMxMzcyNTUpO2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO2FsaWduLWl0ZW1zOmNlbnRlcjtib3JkZXItcmFkaXVzOi41cmVtfS5jaGVja2JveC1jb250YWluZXJ7ZmxleDoxIDEgYXV0bztoZWlnaHQ6MTAwJTtkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXJ9LnRvZG8tY2hlY2tib3h7d2lkdGg6MjBweDtoZWlnaHQ6MjBweDtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMTY2LDY5LDAsLjk4NDMxMzcyNTUpO2JhY2tncm91bmQ6IzIyMjtib3JkZXItcmFkaXVzOjUwJTthcHBlYXJhbmNlOm5vbmV9aW5wdXRbdHlwZT1jaGVja2JveF06Y2hlY2tlZHt3aWR0aDoyMHB4O2hlaWdodDoyMHB4O2JvcmRlcjoxcHggc29saWQgcmdiYSgxNjYsNjksMCwuOTg0MzEzNzI1NSk7YmFja2dyb3VuZDojZmZhNzJlO2JhY2tncm91bmQ6cmFkaWFsLWdyYWRpZW50KGNpcmNsZSwgcmdiYSgxNjYsIDY5LCAwLCAwLjk4NDMxMzcyNTUpIDAlLCByZ2JhKDE2NiwgNjksIDAsIDAuOTg0MzEzNzI1NSkgMzIlLCByZ2IoMCwgMCwgMCkgNjklKTtib3JkZXItcmFkaXVzOjUwJX0udGl0bGV7cG9zaXRpb246cmVsYXRpdmU7ei1pbmRleDowO2ZvbnQtc2l6ZToxcmVtO2ZvbnQtd2VpZ2h0OjcwMDtmbGV4OjMgMyBhdXRvO21heC13aWR0aDo0MCV9LnRvZG8tbmV3LXRpdGxle3Bvc2l0aW9uOmFic29sdXRlO2JhY2tncm91bmQ6IzIyMjtjb2xvcjpyZ2JhKDE2Niw2OSwwLC45ODQzMTM3MjU1KTtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMTY2LDY5LDAsLjk4NDMxMzcyNTUpO2JveC1zaGFkb3c6MXB4IDJweCAzcHggIzAwMDtmb250LXNpemU6MXJlbTtmb250LXdlaWdodDo3MDA7Zm9udC1mYW1pbHk6XFxcIk9wZW4gU2Fuc1xcXCIsc2Fucy1zZXJpZjt0b3A6MDtsZWZ0OjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJX0uZHVlLWRhdGV7dGV4dC1hbGlnbjpjZW50ZXI7cG9zaXRpb246cmVsYXRpdmU7ei1pbmRleDowO2ZvbnQtc2l6ZToxcmVtO2ZsZXg6MSAxIGF1dG99LnRvZG8tbmV3LWRhdGV7cG9zaXRpb246YWJzb2x1dGU7bGVmdDowO3dpZHRoOjg1JX0ucmVtb3ZlLWJ1dHRvbi1jb250YWluZXJ7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyfS5yZW1vdmUtYnV0dG9uLWNvbnRhaW5lciAucmVtb3ZlLXRvZG97YXBwZWFyYW5jZTpub25lO2JhY2tncm91bmQ6bm9uZTtib3JkZXItcmFkaXVzOjUwJTtib3JkZXI6bm9uZTtoZWlnaHQ6MS4ycmVtO3dpZHRoOjEuMnJlbTtwYWRkaW5nOi4xcmVtO2NvbG9yOnJnYmEoMTY2LDY5LDAsLjk4NDMxMzcyNTUpO2ZvbnQtZmFtaWx5OlxcXCJPcGVuIFNhbnNcXFwiLHNhbnMtc2VyaWY7Zm9udC13ZWlnaHQ6NzAwO2ZvbnQtc2l6ZTouOHJlbTtib3gtc2hhZG93OjFweCAycHggM3B4ICMwMDB9LmNyZWF0ZS10b2RvLWZvcm17Ym9yZGVyOjJweCBzb2xpZCAjMDAwO3dpZHRoOjgwJTtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MjUlO2xlZnQ6MTAlO2JhY2tncm91bmQtY29sb3I6IzIyMjtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O2FsaWduLWl0ZW1zOmNlbnRlcjt0ZXh0LXNoYWRvdzoxcHggM3B4IDVweCByZ2JhKDAsMCwwLC42KTtib3gtc2hhZG93OjFweCAycHggM3B4ICMwMDA7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDE2Niw2OSwwLC45ODQzMTM3MjU1KTtib3JkZXItcmFkaXVzOi41cmVtfS5jcmVhdGUtdG9kby1mb3JtICN0b2RvLWZvcm17cGFkZGluZzoxLjJyZW07ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kO2FsaWduLWl0ZW1zOmNlbnRlcjtoZWlnaHQ6NTAlfS5jcmVhdGUtdG9kby1mb3JtICN0b2RvLWZvcm0gbGFiZWx7Y29sb3I6cmdiYSgxNjYsNjksMCwuOTg0MzEzNzI1NSk7Zm9udC1zaXplOjEuNXJlbTt3aWR0aDoxMDAlfS5jcmVhdGUtdG9kby1mb3JtICN0b2RvLWZvcm0gaW5wdXR7YmFja2dyb3VuZDpub25lO2JvcmRlcjoxcHggc29saWQgcmdiYSgxNjYsNjksMCwuOTg0MzEzNzI1NSk7Y29sb3I6cmdiYSgxNjYsNjksMCwuOTg0MzEzNzI1NSk7Zm9udC1zaXplOjEuNHJlbTtib3JkZXItcmFkaXVzOi40cmVtfS5jcmVhdGUtdG9kby1mb3JtICNmb3JtLWJ1dHRvbnMtdGR7cGFkZGluZzoxLjJyZW07d2lkdGg6MTAwJTtkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OnNwYWNlLWV2ZW5seX0uY3JlYXRlLXRvZG8tZm9ybSAjZm9ybS1idXR0b25zLXRkIGJ1dHRvbntoZWlnaHQ6MnJlbTt3aWR0aDoxMHJlbTtmb250LXNpemU6MXJlbTtib3JkZXItcmFkaXVzOi41cmVtO2NvbG9yOnJnYmEoMTY2LDY5LDAsLjk4NDMxMzcyNTUpO2JhY2tncm91bmQ6IzIyMjtib3JkZXI6bm9uZTtwYWRkaW5nOi4zcmVtO2ZvbnQtZmFtaWx5OlxcXCJPcGVuIFNhbnNcXFwiLHNhbnMtc2VyaWY7Zm9udC13ZWlnaHQ6NzAwO2ZvbnQtc2l6ZTouOHJlbTtib3gtc2hhZG93OjFweCAycHggM3B4ICMwMDB9I3RvZG8tY3JlYXRlLW5ld3toZWlnaHQ6MnJlbTt3aWR0aDoxMHJlbTtmb250LXNpemU6MXJlbTtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMTY2LDY5LDAsLjk4NDMxMzcyNTUpO2JvcmRlci1yYWRpdXM6LjVyZW07Y29sb3I6cmdiYSgxNjYsNjksMCwuOTg0MzEzNzI1NSk7dGV4dC1zaGFkb3c6MXB4IDNweCA1cHggcmdiYSgwLDAsMCwuNik7YmFja2dyb3VuZDojMjIyO2JveC1zaGFkb3c6MXB4IDJweCAzcHggIzAwMDt0cmFuc2l0aW9uOmVhc2UtaW4tb3V0IDE1MG1zfSN0b2RvLWNyZWF0ZS1uZXc6aG92ZXJ7aGVpZ2h0OjNyZW07d2lkdGg6MTJyZW07Ym94LXNoYWRvdzoxcHggNHB4IDVweCAjMDAwO3RyYW5zaXRpb246ZWFzZS1pbi1vdXQgMTUwbXN9XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL21haW4uc2Nzc1wiLFwid2VicGFjazovLy4vc3JjL3N0eWxlcy9hbmltYXRpb25zLnNjc3NcIixcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvcHJvamVjdFBhbmVsLnNjc3NcIixcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvbWFpblBhbmVsLnNjc3NcIixcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvdG9kb3Muc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFHQSxFQUNJLFFBQUEsQ0FDQSxrQ0FBQSxDQUNBLHFCQUFBLENBRUosS0FDSSxZQUFBLENBQ0Esc0JBQUEsQ0FDQSxrQkFBQSxDQUNBLFlBQUEsQ0FDQSxXQUFBLENBQ0EsZUFBQSxDQUNBLGNBQUEsQ0FDQSxxQkNiTyxDQVNQLGtCQUNJLEtBQ0ksU0FBQSxDQUNKLFNBQUEsQ0FFQSxHQUNJLFdBQUEsQ0FDSixNQUFBLENBQUEsQ0FFSixpQkFDSSxLQUNJLFdBQUEsQ0FDSixNQUFBLENBQ0EsR0FDSSxTQUFBLENBQ0EsU0FBQSxDQUFBLENBR1IsdUJBQ0ksS0FDSSxpQkFBQSxDQUNBLFdBQUEsQ0FDQSxXQUFBLENB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QkFBQSxDQUNBLDRCQUFBLENBQ0Esa0JBQUEsQ0FDQSxVQUFBLENBRUEsbUNBQ0ksZ0NIdkhKLENHd0hJLGdCQUFBLENBQ0EsVUFBQSxDQUdKLG1DQUNJLGVBQUEsQ0FDQSwyQ0g1SFIsQ0c2SFEsZ0NIL0hKLENHZ0lJLGdCQUFBLENBQ0EsbUJBQUEsQ0FHUixtQ0FDSSxjQUFBLENBQ0EsVUFBQSxDQUNBLFlBQUEsQ0FDQSw0QkFBQSxDQUNBLDBDQUNJLFdBQUEsQ0FDQSxXQUFBLENBQ0EsY0FBQSxDQUNBLG1CQUFBLENBQ0EsZ0NIOUlKLENHK0lJLGVIOUlMLENHK0lLLFdBQUEsQ0FHQSxhQUFBLENBQ0Esa0NBQUEsQ0FDQSxlQUFBLENBQ0EsZUFBQSxDQUNBLDJCQUFBLENBTWhCLGlCQUNJLFdBQUEsQ0FDQSxXQUFBLENBQ0EsY0FBQSxDQUNBLDJDSC9KSSxDR2dLSixtQkFBQSxDQUNBLGdDSG5LUSxDR29LUixzQ0FBQSxDQUNBLGVIcEtPLENHcUtQLDJCQUFBLENBRUEsNEJBQUEsQ0FFSix1QkFDSSxXQUFBLENBQ0EsV0FBQSxDQUNBLDJCQUFBLENBQ0EsNEJBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9Um9ib3RvOndnaHRANzAwJmRpc3BsYXk9c3dhcCcpO1xcclxcbkBpbXBvcnQgJy4vc3R5bGVzL2FuaW1hdGlvbnMuc2Nzcyc7XFxyXFxuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9R3J1cHBvJmRpc3BsYXk9c3dhcCcpO1xcclxcbip7XFxyXFxuICAgIG1hcmdpbjowO1xcclxcbiAgICBmb250LWZhbWlseTonT3BlbiBTYW5zJyxzYW5zLXNlcmlmO1xcclxcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcclxcbn1cXHJcXG5ib2R5e1xcclxcbiAgICBkaXNwbGF5OmZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBoZWlnaHQ6MTAwdmg7XFxyXFxuICAgIHdpZHRoOjEwMHZ3O1xcclxcbiAgICBmb250LXdlaWdodDo3MDA7XFxyXFxuICAgIGZvbnQtc2l6ZToxOHB0O1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmdDb2xvcjtcXHJcXG59XFxyXFxuQGltcG9ydCAnLi9zdHlsZXMvcHJvamVjdFBhbmVsLnNjc3MnO1xcclxcbkBpbXBvcnQgJy4vc3R5bGVzL21haW5QYW5lbC5zY3NzJztcXHJcXG5AaW1wb3J0ICcuL3N0eWxlcy90b2Rvcy5zY3NzJztcXHJcXG5cXHJcXG5cXHJcXG5cIixcIiRwaW5rLWlzaDpyZ2JhKDI1NSwgMTkyLCAyMDMsIDAuNTA1KTtcXHJcXG4kZ29sZGlzaDpyZ2JhKDI1MSwyMzUsMjE1LDEpO1xcclxcbiR0aGVtZS1mb250OiNhNjQ1MDBmYjtcXHJcXG4kYmdDb2xvcjogIHJnYigzNCwgMzQsIDM0KTtcXHJcXG4kYm9yZGVyOjFweCBzb2xpZCAkdGhlbWUtZm9udDtcXHJcXG5cXHJcXG4gICAgQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9R3J1cHBvJmRpc3BsYXk9c3dhcCcpO1xcclxcbiAgICBAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1PcGVuK1NhbnM6aXRhbCx3Z2h0QDAsMzAwOzAsNDAwOzAsNTAwOzAsNjAwOzAsNzAwOzAsODAwOzEsNDAwOzEsNTAwOzEsNjAwOzEsNzAwOzEsODAwJmRpc3BsYXk9c3dhcCcpO1xcclxcblxcclxcbkBtaXhpbiBhbmltYXRpb25ze1xcclxcbiAgICBcXHJcXG5cXHJcXG4gICAgQGtleWZyYW1lcyBleHBhbmR7XFxyXFxuICAgICAgICBmcm9te1xcclxcbiAgICAgICAgICAgIHdpZHRoOjB2dztcXHJcXG4gICAgICAgIGxlZnQ6IDEwMCU7XFxyXFxuICAgICAgICB9XFxyXFxuICAgICAgICB0b3tcXHJcXG4gICAgICAgICAgICB3aWR0aDoxMDB2dztcXHJcXG4gICAgICAgIGxlZnQ6MDt9XFxyXFxuICAgIH1cXHJcXG4gICAgQGtleWZyYW1lcyBjbG9zZSB7XFxyXFxuICAgICAgICBmcm9te1xcclxcbiAgICAgICAgICAgIHdpZHRoOjEwMHZ3O1xcclxcbiAgICAgICAgbGVmdDowO31cXHJcXG4gICAgICAgIHRve1xcclxcbiAgICAgICAgICAgIHdpZHRoOjB2dztcXHJcXG4gICAgICAgICAgICBsZWZ0OjEwMCU7XFxyXFxuICAgIH1cXHJcXG4gICAgfVxcclxcbiAgICBAa2V5ZnJhbWVzIG9wZW5EaXNwbGF5e1xcclxcbiAgICAgICAgZnJvbXtcXHJcXG4gICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcXHJcXG4gICAgICAgICAgICB3aWR0aDoxMDB2dztcXHJcXG4gICAgICAgICAgICBoZWlnaHQ6MTAwJTtcXHJcXG4gICAgICAgICAgICByaWdodDowJTtcXHJcXG4gICAgICAgICAgICB6LWluZGV4OiAyO1xcclxcbiAgICAgICAgfVxcclxcbiAgICAgICAgdG97XFxyXFxuICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XFxyXFxuICAgICAgICAgICAgcmlnaHQ6MTAwJTtcXHJcXG4gICAgICAgICAgICB3aWR0aDowO1xcclxcbiAgICAgICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcXHJcXG4gICAgXFxyXFxuICAgICAgICB9XFxyXFxuICAgIH1cXHJcXG4gICAgQGtleWZyYW1lcyBjbG9zZURpc3BsYXl7XFxyXFxuICAgICAgICBmcm9te1xcclxcbiAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xcclxcbiAgICAgICAgICAgIHdpZHRoOjA7XFxyXFxuICAgICAgICAgICAgcmlnaHQ6MTAwJTtcXHJcXG4gICAgICAgIH1cXHJcXG4gICAgICAgIHRve1xcclxcbiAgICAgICAgICAgIFxcclxcbiAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xcclxcbiAgICAgICAgICAgIHdpZHRoOjEwMHZ3O1xcclxcbiAgICAgICAgICAgIGhlaWdodDoxMDAlO1xcclxcbiAgICAgICAgICAgIHJpZ2h0OjA7XFxyXFxuICAgICAgICAgICAgei1pbmRleDogMjtcXHJcXG4gICAgICAgICAgICBcXHJcXG4gICAgICAgIH1cXHJcXG4gICAgfVxcclxcbiAgICBAbWVkaWEgKG1pbi13aWR0aDo1MDBweCl7XFxyXFxuICAgICAgICBAa2V5ZnJhbWVzIGV4cGFuZHtcXHJcXG4gICAgICAgICAgICBmcm9te1xcclxcbiAgICAgICAgICAgICAgICB3aWR0aDowdnc7XFxyXFxuICAgICAgICAgICAgbGVmdDogMTAwJTtcXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICAgICAgdG97XFxyXFxuICAgICAgICAgICAgICAgIHdpZHRoOmNsYW1wKDUwMHB4LDcwJSw4MDBweCk7XFxyXFxuICAgICAgICAgICAgbGVmdDowO31cXHJcXG4gICAgICAgIH1cXHJcXG4gICAgICAgIEBrZXlmcmFtZXMgY2xvc2Uge1xcclxcbiAgICAgICAgICAgIGZyb217XFxyXFxuICAgICAgICAgICAgICAgIHdpZHRoOmNsYW1wKDUwMHB4LDcwJSw4MDBweCk7XFxyXFxuICAgICAgICAgICAgICAgIFxcclxcbiAgICAgICAgICAgIGxlZnQ6MDt9XFxyXFxuICAgICAgICAgICAgdG97XFxyXFxuICAgICAgICAgICAgICAgIHdpZHRoOjB2dztcXHJcXG4gICAgICAgICAgICAgICAgbGVmdDoxMDAlO1xcclxcbiAgICAgICAgfVxcclxcbiAgICAgICAgfVxcclxcbiAgICAgICAgQGtleWZyYW1lcyBvcGVuRGlzcGxheXtcXHJcXG4gICAgICAgICAgICBmcm9te1xcclxcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcXHJcXG4gICAgICAgICAgICAgICAgd2lkdGg6Y2xhbXAoNTAwcHgsNzAlLDgwMHB4KTtcXHJcXG4gICAgICAgICAgICAgICAgaGVpZ2h0OjEwMCU7XFxyXFxuICAgICAgICAgICAgICAgIHJpZ2h0OjAlO1xcclxcbiAgICAgICAgICAgICAgICB6LWluZGV4OiAyO1xcclxcbiAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICB0b3tcXHJcXG4gICAgICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XFxyXFxuICAgICAgICAgICAgICAgIHJpZ2h0OjEwMCU7XFxyXFxuICAgICAgICAgICAgICAgIHdpZHRoOjA7XFxyXFxuICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcXHJcXG4gICAgICAgIFxcclxcbiAgICAgICAgICAgIH1cXHJcXG4gICAgICAgIH1cXHJcXG4gICAgICAgIEBrZXlmcmFtZXMgY2xvc2VEaXNwbGF5e1xcclxcbiAgICAgICAgICAgIGZyb217XFxyXFxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xcclxcbiAgICAgICAgICAgICAgICB3aWR0aDowO1xcclxcbiAgICAgICAgICAgICAgICByaWdodDoxMDAlO1xcclxcbiAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICB0b3tcXHJcXG4gICAgICAgICAgICAgICAgXFxyXFxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xcclxcbiAgICAgICAgICAgICAgICB3aWR0aDpjbGFtcCg1MDBweCw3MCUsODAwcHgpO1xcclxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6MTAwJTtcXHJcXG4gICAgICAgICAgICAgICAgcmlnaHQ6MDtcXHJcXG4gICAgICAgICAgICAgICAgei1pbmRleDogMjtcXHJcXG4gICAgICAgICAgICAgICAgXFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfVxcclxcbiAgICB9ICAgXFxyXFxuXFxyXFxufVxcclxcblwiLFwiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9Um9ib3RvOndnaHRANzAwJmRpc3BsYXk9c3dhcCcpO1xcclxcblxcclxcbkBpbmNsdWRlIGFuaW1hdGlvbnM7XFxyXFxuQG1lZGlhIChtYXgtd2lkdGg6NTAwcHgpe1xcclxcbiAgICAuc2lkZS1wYW5lbHtcXHJcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6cmdiKDI1NSwgMjU1LCAyNTUpO1xcclxcbiAgICAgICAgd2lkdGg6MTAwJTtcXHJcXG4gICAgICAgIGhlaWdodDoxMDAlO1xcclxcbiAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XFxyXFxuICAgICAgICB6LWluZGV4OiAyO1xcclxcbiAgICB9XFxyXFxuICAgIC5kaXNwbGF5LW9wZW57XFxyXFxuICAgICAgICBhbmltYXRpb24tZHVyYXRpb246IDIwMG1zO1xcclxcbiAgICB9XFxyXFxuICAgIC5kaXNwbGF5LWNsb3NlZHtcXHJcXG4gICAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMjAwbXM7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgI3BhbmVsLXRpdGxle1xcclxcbiAgICAgICAgcGFkZGluZzoycmVtO1xcclxcbiAgICAgICAgY29sb3I6JHRoZW1lLWZvbnQ7XFxyXFxuICAgICAgICBmb250LXNpemU6M3JlbTtcXHJcXG4gICAgICAgIFxcclxcbiAgICB9XFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxuXFxyXFxufVxcclxcblxcclxcblxcclxcblxcclxcbi5zaWRlLXBhbmVse1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiRiZ0NvbG9yO1xcclxcbiAgICBoZWlnaHQ6MTAwJTtcXHJcXG4gICAgd2lkdGg6MTAwJTtcXHJcXG4gICAgcG9zaXRpb246cmVsYXRpdmU7XFxyXFxuICAgIHotaW5kZXg6IDI7XFxyXFxuICAgIGRpc3BsYXk6ZmxleDtcXHJcXG4gICAgZ2FwOjJyZW07XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGJhY2tncm91bmQ6IHJnYigzNCwgMzQsIDM0KTtcXHJcXG4gICAgXFxyXFxuICAgIFxcclxcbn1cXHJcXG4jcGFuZWwtdGl0bGV7XFxyXFxuICAgIHBhZGRpbmc6MnJlbTtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICBjb2xvcjokdGhlbWUtZm9udDtcXHJcXG4gICAgZm9udC1zaXplOjNyZW07XFxyXFxuICAgIHRleHQtc2hhZG93OiAxcHggM3B4IDVweCByZ2JhKDAsMCwwLDAuNik7XFxyXFxufVxcclxcbi5wcm9qbWFuLWhlYWRlcntcXHJcXG4gICAgd2lkdGg6ODAlO1xcclxcbn1cXHJcXG4jcHJvam1hbi1sYWJlbHtcXHJcXG4gICAgZm9udC1zaXplOjEuNXJlbTtcXHJcXG4gICAgcG9zaXRpb246cmVsYXRpdmU7XFxyXFxuICAgIHRvcDoxcmVtO1xcclxcbiAgICBjb2xvcjokdGhlbWUtZm9udDtcXHJcXG4gICAgdGV4dC1zaGFkb3c6IDFweCAzcHggNXB4IHJnYmEoMCwwLDAsMC42KTtcXHJcXG5cXHJcXG59XFxyXFxuLmRpc3BsYXktb3BlbntcXHJcXG4gICAgYW5pbWF0aW9uLW5hbWU6b3BlbkRpc3BsYXk7XFxyXFxuICAgIGFuaW1hdGlvbi1kZWxheTowbXM7XFxyXFxuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjozMDBtcztcXHJcXG4gICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XFxyXFxufVxcclxcbi5kaXNwbGF5LWNsb3NlZHtcXHJcXG4gICAgYW5pbWF0aW9uLW5hbWU6Y2xvc2VEaXNwbGF5O1xcclxcbiAgICBhbmltYXRpb24tZGVsYXk6MG1zO1xcclxcbiAgICBhbmltYXRpb24tZHVyYXRpb246MzAwbXM7XFxyXFxuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xcclxcbn1cXHJcXG5cXHJcXG4ucHJvamVjdC1tYW5hZ2Vye1xcclxcbiAgICBkaXNwbGF5OmZsZXg7XFxyXFxuICAgIHdpZHRoOjEwMCU7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcclxcbiAgICBnYXA6MXJlbTtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG59XFxyXFxuLnByb2plY3R7XFxyXFxuICAgIHRleHQtc2hhZG93OiAxcHggM3B4IDVweCByZ2JhKDAsMCwwLDAuNik7XFxyXFxuICAgIGJveC1zaGFkb3c6IDFweCAzcHggNXB4IGJsYWNrO1xcclxcbiAgICAkcGluay1pc2g6cmdiYSgyNTUsIDE5MiwgMjAzLCAwLjUwNSk7XFxyXFxuICAgICRnb2xkaXNoOnJnYmEoMjUxLDIzNSwyMTUsMSk7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgcGFkZGluZzogLjVyZW0gMXJlbSAuNXJlbSAxcmVtO1xcclxcbiAgICBkaXNwbGF5OmZsZXg7XFxyXFxuICAgIHdpZHRoOjgwJTtcXHJcXG4gICAgY29sb3I6JHRoZW1lLWZvbnQ7XFxyXFxuICAgICBib3JkZXI6JGJvcmRlcjtcXHJcXG4gICAgIGJvcmRlci1yYWRpdXM6IC41cmVtO1xcclxcbiAgICB0cmFuc2l0aW9uOmVhc2UtaW4tb3V0IDE1MG1zO1xcclxcbiAgICAucHJvamVjdC1uYW1le1xcclxcbiAgICAgICAgbGVmdDoxcmVtO1xcclxcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICAgICAgZm9udC1zaXplOjEuNHJlbTtcXHJcXG5cXHJcXG4gICAgfVxcclxcbiAgIC5idXR0b24tcGFuZWx7XFxyXFxuICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcXHJcXG4gICAgICAgIHotaW5kZXg6MztcXHJcXG4gICAgICAgIGxlZnQ6NzAlO1xcclxcbiAgICAgICAgZGlzcGxheTpmbGV4O1xcclxcbiAgICAgICAgZ2FwOjFyZW07XFxyXFxuICAgIFxcclxcbiAgIH1cXHJcXG59XFxyXFxuLnByb2plY3Q6aG92ZXJ7XFxyXFxuICAgIHdpZHRoOjkwJTtcXHJcXG4gICAgaGVpZ2h0OjMuNXJlbTtcXHJcXG4gICAgdHJhbnNpdGlvbjplYXNlLWluLW91dCAxNTBtcztcXHJcXG5cXHJcXG59XFxyXFxuI25ldy1uYW1lLWlucHV0e1xcclxcbiAgICBmb250LWZhbWlseTonT3BlbiBTYW5zJyxzYW5zLXNlcmlmO1xcclxcbiAgICBmb250LXNpemU6MS40cmVtO1xcclxcbiAgICBmb250LXdlaWdodDo3MDA7XFxyXFxuICAgIHdpZHRoOjcyJTtcXHJcXG4gICAgYmFja2dyb3VuZDokYmdDb2xvcjtcXHJcXG4gICAgY29sb3I6JHRoZW1lLWZvbnQ7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6LjZyZW07XFxyXFxuICAgIGJvcmRlcjpub25lO1xcclxcbiAgICBib3gtc2hhZG93OjFweCAycHggM3B4IGJsYWNrO1xcclxcblxcclxcbn1cXHJcXG4uZWRpdC1wcm9qZWN0e1xcclxcbiAgICBhcHBlYXJhbmNlOm5vbmU7XFxyXFxuICAgIGJhY2tncm91bmQ6bm9uZTtcXHJcXG4gICAgYm9yZGVyOiRib3JkZXI7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IC40cmVtO1xcclxcbiAgIGhlaWdodDoyNHB4O1xcclxcbiAgIHdpZHRoOjI0cHg7XFxyXFxuICAgYm9yZGVyOm5vbmU7XFxyXFxuICAgYm94LXNoYWRvdzoxcHggMnB4IDNweCBibGFjaztcXHJcXG4gICBwYWRkaW5nOi4ycmVtO1xcclxcbn1cXHJcXG4uZWRpdC1pY29ue1xcclxcbiAgICB3aWR0aDoxNy42cHg7XFxyXFxuICAgIGhlaWdodDoxNy42cHg7XFxyXFxuICAgIGNvbG9yOiR0aGVtZS1mb250O1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGhlbWUtZm9udDtcXHJcXG4gICAgbWFzay1pbWFnZTogdXJsKC4vaW1nL3BlbmNpbC5zdmcpIDtcXHJcXG4gICAgbWFzay1zaXplOjIuOXJlbTtcXHJcXG4gICAgXFxyXFxuICAgIG1hc2stY2xpcDpib3JkZXItYm94O1xcclxcbiAgICBcXHJcXG4gICAgXFxyXFxuICAgIC8vIC13ZWJraXQtbWFzay1zaXplOiAxcmVtO1xcclxcbiAgICAvLyBtYXNrLXNpemU6IDFyZW07XFxyXFxuXFxyXFxufVxcclxcblxcclxcbi5uZXctcHJvamVjdC1idXR0b257XFxyXFxuICAgIGhlaWdodDoycmVtO1xcclxcbiAgICB3aWR0aDoxMHJlbTtcXHJcXG4gICAgZm9udC1zaXplOjFyZW07XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6LjVyZW07XFxyXFxuICAgIGNvbG9yOiR0aGVtZS1mb250O1xcclxcbiAgICBiYWNrZ3JvdW5kOiAkYmdDb2xvcjtcXHJcXG4gICAgYXBwZWFyYW5jZTpub25lO1xcclxcbiAgICBiYWNrZ3JvdW5kOm5vbmU7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IC40cmVtO1xcclxcbiAgIFxcclxcbiAgIGJvcmRlcjpub25lO1xcclxcbiAgIHRleHQtc2hhZG93OiAxcHggM3B4IDVweCByZ2JhKDAsMCwwLDAuNik7XFxyXFxuICAgIGJveC1zaGFkb3c6IDFweCAycHggM3B4IGJsYWNrO1xcclxcbiAgIHBhZGRpbmc6LjJyZW07XFxyXFxuICAgdHJhbnNpdGlvbjplYXNlLWluLW91dCAxNTBtcztcXHJcXG5cXHJcXG59XFxyXFxuLm5ldy1wcm9qZWN0LWJ1dHRvbjpob3ZlcntcXHJcXG4gICAgaGVpZ2h0OjIuNXJlbTtcXHJcXG4gICAgd2lkdGg6MTJyZW07XFxyXFxuICAgIHRyYW5zaXRpb246ZWFzZS1pbi1vdXQgMTUwbXM7XFxyXFxufVxcclxcbi5wcm9qZWN0LXJlbW92ZS1idXR0b257XFxyXFxuICAgIGFwcGVhcmFuY2U6bm9uZTtcXHJcXG4gICAgICAgIGJhY2tncm91bmQ6bm9uZTtcXHJcXG4gICAgICAgIGJvcmRlcjpub25lO1xcclxcbiAgICAgICAgYm9yZGVyLXJhZGl1czouNHJlbTtcXHJcXG4gICAgICAgIGhlaWdodDoyNHB4O1xcclxcbiAgICAgICAgd2lkdGg6MjRweDtcXHJcXG4gICAgICAgIHBhZGRpbmc6LjFyZW07XFxyXFxuICAgICAgICBjb2xvcjokdGhlbWUtZm9udDtcXHJcXG4gICAgICAgIGZvbnQtZmFtaWx5OidPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xcclxcbiAgICAgICAgZm9udC13ZWlnaHQ6NzAwO1xcclxcbiAgICAgICAgZm9udC1zaXplOi44cmVtO1xcclxcbiAgICAgICAgYm94LXNoYWRvdzoxcHggMnB4IDNweCBibGFjaztcXHJcXG59XFxyXFxuI2lucHV0LXBsYWNlaG9sZGVye1xcclxcbiAgIGZsZXgtc2hyaW5rOjA7XFxyXFxuICAgZGlzcGxheTpmbGV4O1xcclxcbiAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcclxcbn1cXHJcXG4jZm9ybS1wcm9qZWN0LW5hbWV7XFxyXFxuICAgIGZvbnQtZmFtaWx5OidPcGVuIFNhbnMnLHNhbnMtc2VyaWY7XFxyXFxuICAgIGZvbnQtc2l6ZToxLjRyZW07XFxyXFxuICAgIGZvbnQtd2VpZ2h0OjcwMDtcXHJcXG4gICAgd2lkdGg6NzIlO1xcclxcbiAgICBiYWNrZ3JvdW5kOm5vbmU7XFxyXFxuICAgIGNvbG9yOiR0aGVtZS1mb250O1xcclxcbiAgICBib3JkZXItcmFkaXVzOi42cmVtO1xcclxcbiAgICBib3JkZXI6bm9uZTtcXHJcXG4gICAgYm94LXNoYWRvdzoxcHggMnB4IDNweCBibGFjaztcXHJcXG59XFxyXFxuI2NyZWF0ZS1idXR0b257XFxyXFxuICAgIGFwcGVhcmFuY2U6bm9uZTtcXHJcXG4gICAgICAgIGJhY2tncm91bmQ6bm9uZTtcXHJcXG4gICAgICAgIGJvcmRlcjpub25lO1xcclxcbiAgICAgICAgYm9yZGVyLXJhZGl1czouNHJlbTtcXHJcXG4gICAgICAgIHBhZGRpbmc6LjNyZW07XFxyXFxuICAgICAgICBjb2xvcjokdGhlbWUtZm9udDtcXHJcXG4gICAgICAgIGZvbnQtZmFtaWx5OidPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xcclxcbiAgICAgICAgZm9udC13ZWlnaHQ6NzAwO1xcclxcbiAgICAgICAgZm9udC1zaXplOi44cmVtO1xcclxcbiAgICAgICAgYm94LXNoYWRvdzoxcHggMnB4IDNweCBibGFjaztcXHJcXG59XFxyXFxuXFxyXFxuQG1lZGlhIChtaW4td2lkdGg6NTAwcHgpe1xcclxcbiAgICAuc2lkZS1wYW5lbHtcXHJcXG4gICAgICAgIHdpZHRoOmNsYW1wKDUwMHB4LDcwJSw4MDBweCk7XFxyXFxuICAgICAgICBib3JkZXItcmFkaXVzOiAycmVtO1xcclxcbiAgICB9XFxyXFxuICAgIGJvZHl7XFxyXFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXHJcXG4gICAgfVxcclxcbiAgICB9XFxyXFxuXCIsXCJAaW5jbHVkZSBhbmltYXRpb25zO1xcclxcbi5tYWluLXBhbmVse1xcclxcbiAgICBkaXNwbGF5OmZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXHJcXG4gICAgZ2FwOjVyZW07XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICRiZ0NvbG9yO1xcclxcbiAgICBjb2xvcjokdGhlbWUtZm9udDtcXHJcXG4gICAgcG9zaXRpb246cmVsYXRpdmU7XFxyXFxuICAgIGhlaWdodDoxMDAlO1xcclxcbiAgICB3aWR0aDowO1xcclxcbiAgICBsZWZ0OjEwMCU7XFxyXFxuICAgIHotaW5kZXg6MDtcXHJcXG4gICAgb3ZlcmZsb3c6aGlkZGVuO1xcclxcblxcclxcbn1cXHJcXG4uZXhwYW5kLXBhbmVse1xcclxcbiAgICBhbmltYXRpb24tbmFtZTpleHBhbmQ7XFxyXFxuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMzAwbXM7XFxyXFxuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xcclxcbn1cXHJcXG4uY2xvc2UtcGFuZWx7XFxyXFxuICAgIGFuaW1hdGlvbi1uYW1lOmNsb3NlO1xcclxcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDMwMG1zO1xcclxcbiAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcXHJcXG59XFxyXFxuLnByb2plY3QtZGlzcGxheS1wYW5lbHtcXHJcXG4gICAgXFxyXFxuICAgIHBhZGRpbmctdG9wOjVyZW07XFxyXFxuICAgIHdpZHRoOjEwMCU7XFxyXFxuICAgIGRpc3BsYXk6ZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcclxcbiAgICBnYXA6NSU7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbiNuYXYtYmFye1xcclxcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcXHJcXG4gICAgZGlzcGxheTpmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgdG9wOjAlO1xcclxcbiAgICBoZWlnaHQ6M3JlbTtcXHJcXG4gICAgd2lkdGg6MTAwJTtcXHJcXG4gICAgcGFkZGluZzoxcmVtO1xcclxcbiAgIFxcclxcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcXHJcXG4gICAgXFxyXFxuICAgIHRleHQtc2hhZG93OiAxcHggM3B4IDVweCByZ2JhKDAsMCwwLDAuNik7XFxyXFxuICAgIGJveC1zaGFkb3c6IDFweCAzcHggNXB4IGJsYWNrO1xcclxcbn1cXHJcXG5cXHJcXG4jZXhwYW5kLWFycm93e1xcclxcbiAgICBmbGV4OjEgMSBhdXRvO1xcclxcbiAgICBiYWNrZ3JvdW5kOiR0aGVtZS1mb250O1xcclxcbiAgICBtYXNrLWltYWdlOnVybCgnLi9pbWcvcHJvamVjdHMuc3ZnJyk7XFxyXFxuICAgIG1hc2stcmVwZWF0OiBuby1yZXBlYXQ7XFxyXFxuICAgIG1hc2stc2l6ZTo2cmVtO1xcclxcbiAgICB3aWR0aDozcmVtO1xcclxcbiAgICBoZWlnaHQ6MS44cmVtO1xcclxcbn1cXHJcXG4jbmF2LXRpdGxle1xcclxcbiAgICBmbGV4IDo1IDUgYXV0bztcXHJcXG59XFxyXFxuQG1lZGlhKG1pbi13aWR0aDo1MDBweCl7XFxyXFxuICAgIC5tYWluLXBhbmVse1xcclxcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMnJlbTtcXHJcXG4gICAgfVxcclxcbiAgICAjbmF2LWJhcntcXHJcXG4gICAgICAgIGhlaWdodDo0cmVtO1xcclxcbiAgICB9XFxyXFxufVxcclxcblxcclxcbiN0b29sLXRpcHtcXHJcXG4gICAgZm9udC1zaXplOi44cmVtO1xcclxcbiAgICBcXHJcXG59XCIsXCIudG9kb3tcXHJcXG4gICAgdGV4dC1zaGFkb3c6IDFweCAzcHggNXB4IHJnYmEoMCwwLDAsMC42KTtcXHJcXG4gICAgYm94LXNoYWRvdzogMXB4IDJweCAzcHggYmxhY2s7XFxyXFxuICAgIHdpZHRoOjkwJTtcXHJcXG4gICAgcGFkZGluZzoxcmVtO1xcclxcbiAgICBkaXNwbGF5OmZsZXg7XFxyXFxuICAgIGJvcmRlcjokYm9yZGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6LjVyZW07XFxyXFxufVxcclxcbi5jaGVja2JveC1jb250YWluZXJ7XFxyXFxuICAgIGZsZXg6MSAxIGF1dG87XFxyXFxuaGVpZ2h0OjEwMCU7XFxyXFxuZGlzcGxheTpmbGV4O1xcclxcbmp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbmFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxufVxcclxcbi50b2RvLWNoZWNrYm94e1xcclxcbiAgICBcXHJcXG4gICAgd2lkdGg6MjBweDtcXHJcXG4gICAgaGVpZ2h0OjIwcHg7XFxyXFxuICAgIGJvcmRlcjokYm9yZGVyO1xcclxcbiAgICBiYWNrZ3JvdW5kOiRiZ0NvbG9yO1xcclxcbiAgICBib3JkZXItcmFkaXVzOjUwJTtcXHJcXG4gICAgYXBwZWFyYW5jZTogbm9uZTtcXHJcXG4gIFxcclxcbn1cXHJcXG5pbnB1dFt0eXBlPSdjaGVja2JveCddOmNoZWNrZWR7XFxyXFxuICAgIHdpZHRoOjIwcHg7XFxyXFxuICAgIGhlaWdodDoyMHB4O1xcclxcbiAgICBib3JkZXI6JGJvcmRlcjtcXHJcXG4gICAgYmFja2dyb3VuZDogcmdiKDI1NSwxNjcsNDYpO1xcclxcbiAgICBiYWNrZ3JvdW5kOiByYWRpYWwtZ3JhZGllbnQoY2lyY2xlLCAkdGhlbWUtZm9udCAwJSwkdGhlbWUtZm9udCAzMiUsIHJnYmEoMCwwLDAsMSkgNjklKTsgXFxyXFxuICAgIGJvcmRlci1yYWRpdXM6NTAlO1xcclxcbiAgXFxyXFxufVxcclxcbi50aXRsZXtcXHJcXG4gICAgcG9zaXRpb246cmVsYXRpdmU7XFxyXFxuICAgIHotaW5kZXg6IDA7XFxyXFxuICAgIGZvbnQtc2l6ZToxcmVtO1xcclxcbiAgICBmb250LXdlaWdodDo3MDA7XFxyXFxuICAgIGZsZXg6IDMgMyBhdXRvO1xcclxcbiAgICBtYXgtd2lkdGg6IDQwJTtcXHJcXG59XFxyXFxuLnRvZG8tbmV3LXRpdGxle1xcclxcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcXHJcXG4gICAgYmFja2dyb3VuZDokYmdDb2xvcjtcXHJcXG4gICAgY29sb3I6JHRoZW1lLWZvbnQ7XFxyXFxuICAgIGJvcmRlcjokYm9yZGVyO1xcclxcbiAgICBib3gtc2hhZG93OiAxcHggMnB4IDNweCBibGFjaztcXHJcXG4gICAgZm9udC1zaXplOjFyZW07XFxyXFxuICAgIGZvbnQtd2VpZ2h0OjcwMDtcXHJcXG4gICAgZm9udC1mYW1pbHk6J09wZW4gU2Fucycsc2Fucy1zZXJpZjtcXHJcXG4gICAgdG9wOjA7XFxyXFxuICAgIGxlZnQ6MDtcXHJcXG4gICAgd2lkdGg6MTAwJTtcXHJcXG4gICAgaGVpZ2h0OjEwMCU7XFxyXFxufVxcclxcbi5kdWUtZGF0ZXtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICAgICAgICB6LWluZGV4OiAwO1xcclxcbiAgICAgICAgZm9udC1zaXplOjFyZW07XFxyXFxuICAgICAgICBmbGV4OiAxIDEgYXV0bztcXHJcXG59XFxyXFxuLnRvZG8tbmV3LWRhdGV7XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgICAgIGxlZnQ6IDA7XFxyXFxuICAgICAgICB3aWR0aDogODUlO1xcclxcbn1cXHJcXG4ucmVtb3ZlLWJ1dHRvbi1jb250YWluZXJ7XFxyXFxuICAgIGRpc3BsYXk6ZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIC5yZW1vdmUtdG9kb3tcXHJcXG4gICAgICAgIGFwcGVhcmFuY2U6bm9uZTtcXHJcXG4gICAgICAgIGJhY2tncm91bmQ6bm9uZTtcXHJcXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcXHJcXG4gICAgICAgIGJvcmRlcjpub25lO1xcclxcbiAgICAgICAgaGVpZ2h0OjEuMnJlbTtcXHJcXG4gICAgICAgIHdpZHRoOjEuMnJlbTtcXHJcXG4gICAgICAgIHBhZGRpbmc6LjFyZW07XFxyXFxuICAgICAgICBjb2xvcjokdGhlbWUtZm9udDtcXHJcXG4gICAgICAgIGZvbnQtZmFtaWx5OidPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xcclxcbiAgICAgICAgZm9udC13ZWlnaHQ6NzAwO1xcclxcbiAgICAgICAgZm9udC1zaXplOi44cmVtO1xcclxcbiAgICAgICAgYm94LXNoYWRvdzoxcHggMnB4IDNweCBibGFjaztcXHJcXG4gICAgICAgIFxcclxcblxcclxcbiAgICB9XFxyXFxufVxcclxcblxcclxcbi5jcmVhdGUtdG9kby1mb3Jte1xcclxcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXHJcXG4gICAgICAgIHdpZHRoOjgwJTtcXHJcXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgICAgIHRvcDogMjUlO1xcclxcbiAgICAgICAgbGVmdDogMTAlO1xcclxcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjokYmdDb2xvcjtcXHJcXG4gICAgICAgIGRpc3BsYXk6ZmxleDtcXHJcXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcXHJcXG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXHJcXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuXFxyXFxuXFxyXFxuICAgICAgICB0ZXh0LXNoYWRvdzogMXB4IDNweCA1cHggcmdiYSgwLDAsMCwwLjYpO1xcclxcbiAgICAgICAgYm94LXNoYWRvdzogMXB4IDJweCAzcHggYmxhY2s7XFxyXFxuICAgICAgICBib3JkZXI6JGJvcmRlcjtcXHJcXG4gICAgICAgIGJvcmRlci1yYWRpdXM6LjVyZW07XFxyXFxuXFxyXFxuXFxyXFxuICAgICAgICAjdG9kby1mb3Jte1xcclxcbiAgICAgICAgICAgIHBhZGRpbmc6MS4ycmVtO1xcclxcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcXHJcXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcclxcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgICAgICAgICAgaGVpZ2h0OjUwJTtcXHJcXG4gICAgICAgICAgXFxyXFxuICAgICAgICAgICAgbGFiZWx7IFxcclxcbiAgICAgICAgICAgICAgICBjb2xvcjokdGhlbWUtZm9udDtcXHJcXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOjEuNXJlbTtcXHJcXG4gICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcXHJcXG4gICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgaW5wdXR7XFxyXFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6bm9uZTtcXHJcXG4gICAgICAgICAgICAgICAgYm9yZGVyOiRib3JkZXI7XFxyXFxuICAgICAgICAgICAgICAgIGNvbG9yOiR0aGVtZS1mb250O1xcclxcbiAgICAgICAgICAgICAgICBmb250LXNpemU6MS40cmVtO1xcclxcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOi40cmVtO1xcclxcbiAgICAgICAgICAgIH1cXHJcXG4gICAgICAgIH1cXHJcXG4gICAgICAgICNmb3JtLWJ1dHRvbnMtdGR7XFxyXFxuICAgICAgICAgICAgcGFkZGluZzoxLjJyZW07XFxyXFxuICAgICAgICAgICAgd2lkdGg6MTAwJTtcXHJcXG4gICAgICAgICAgICBkaXNwbGF5OmZsZXg7XFxyXFxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XFxyXFxuICAgICAgICAgICAgYnV0dG9ue1xcclxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6MnJlbTtcXHJcXG4gICAgICAgICAgICAgICAgd2lkdGg6MTByZW07XFxyXFxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZToxcmVtO1xcclxcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOi41cmVtO1xcclxcbiAgICAgICAgICAgICAgICBjb2xvcjokdGhlbWUtZm9udDtcXHJcXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJGJnQ29sb3I7XFxyXFxuICAgICAgICAgICAgICAgIGJvcmRlcjpub25lO1xcclxcbiAgICAgICAgICAgICAgICBcXHJcXG4gICAgICAgICAgICAgICAgXFxyXFxuICAgICAgICAgICAgICAgIHBhZGRpbmc6LjNyZW07XFxyXFxuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OidPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xcclxcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDo3MDA7XFxyXFxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTouOHJlbTtcXHJcXG4gICAgICAgICAgICAgICAgYm94LXNoYWRvdzoxcHggMnB4IDNweCBibGFjaztcXHJcXG5cXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICB9XFxyXFxufVxcclxcblxcclxcbiN0b2RvLWNyZWF0ZS1uZXd7XFxyXFxuICAgIGhlaWdodDoycmVtO1xcclxcbiAgICB3aWR0aDoxMHJlbTtcXHJcXG4gICAgZm9udC1zaXplOjFyZW07XFxyXFxuICAgIGJvcmRlcjokYm9yZGVyO1xcclxcbiAgICBib3JkZXItcmFkaXVzOi41cmVtO1xcclxcbiAgICBjb2xvcjokdGhlbWUtZm9udDtcXHJcXG4gICAgdGV4dC1zaGFkb3c6IDFweCAzcHggNXB4IHJnYmEoMCwwLDAsMC42KTtcXHJcXG4gICAgYmFja2dyb3VuZDogJGJnQ29sb3I7XFxyXFxuICAgIGJveC1zaGFkb3c6IDFweCAycHggM3B4IGJsYWNrO1xcclxcblxcclxcbiAgICB0cmFuc2l0aW9uOmVhc2UtaW4tb3V0IDE1MG1zO1xcclxcbn1cXHJcXG4jdG9kby1jcmVhdGUtbmV3OmhvdmVye1xcclxcbiAgICBoZWlnaHQ6M3JlbTtcXHJcXG4gICAgd2lkdGg6MTJyZW07XFxyXFxuICAgIGJveC1zaGFkb3c6IDFweCA0cHggNXB4IGJsYWNrO1xcclxcbiAgICB0cmFuc2l0aW9uOmVhc2UtaW4tb3V0IDE1MG1zO1xcclxcblxcclxcblxcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB1cmw7XG4gIH1cbiAgdXJsID0gU3RyaW5nKHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmwpO1xuXG4gIC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICB1cmwgPSB1cmwuc2xpY2UoMSwgLTEpO1xuICB9XG4gIGlmIChvcHRpb25zLmhhc2gpIHtcbiAgICB1cmwgKz0gb3B0aW9ucy5oYXNoO1xuICB9XG5cbiAgLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuICBpZiAoL1tcIicoKSBcXHRcXG5dfCglMjApLy50ZXN0KHVybCkgfHwgb3B0aW9ucy5uZWVkUXVvdGVzKSB7XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCBcIlxcXFxuXCIpLCBcIlxcXCJcIik7XG4gIH1cbiAgcmV0dXJuIHVybDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4vLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuX193ZWJwYWNrX3JlcXVpcmVfXy5tID0gX193ZWJwYWNrX21vZHVsZXNfXztcblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmM7XG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmIgPSBkb2N1bWVudC5iYXNlVVJJIHx8IHNlbGYubG9jYXRpb24uaHJlZjtcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQxNzk6IDBcbn07XG5cbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gbm8ganNvbnAgZnVuY3Rpb24iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9kbyB7XHJcbiAgY29uc3RydWN0b3IoVGl0bGUsIERlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSwgaWQpIHtcclxuICAgIHRoaXMuX3RpdGxlID0gVGl0bGU7XHJcbiAgICB0aGlzLl9kZXNjcmlwdGlvbiA9IERlc2NyaXB0aW9uO1xyXG4gICAgdGhpcy5fZHVlRGF0ZSA9IGR1ZURhdGU7XHJcbiAgICB0aGlzLl9wcmlvcml0eSA9IHByaW9yaXR5O1xyXG4gICAgdGhpcy5pZCA9IGlkO1xyXG4gIH1cclxuICBnZXQgdGl0bGUoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fdGl0bGU7XHJcbiAgfVxyXG4gIGdldCBkZXNjcmlwdGlvbigpIHtcclxuICAgIHJldHVybiB0aGlzLl9kZXNjcmlwdGlvbjtcclxuICB9XHJcbiAgZ2V0IGR1ZURhdGUoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fZHVlRGF0ZTtcclxuICB9XHJcbiAgZ2V0IHByaW9yaXR5KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3ByaW9yaXR5O1xyXG4gIH1cclxuICBnZXQgaWQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5faWQ7XHJcbiAgfVxyXG4gIHNldCB0aXRsZSh0aXRsZSkge1xyXG4gICAgXHJcbiAgICB0aGlzLl90aXRsZSA9IHRpdGxlO1xyXG4gIH1cclxuICBzZXQgZGVzY3JpcHRpb24oZGVzY3JpcHRpb24pIHtcclxuICAgIHRoaXMuX2Rlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XHJcbiAgfVxyXG4gIHNldCBkdWVEYXRlKGR1ZURhdGUpIHtcclxuICAgIHRoaXMuX2R1ZURhdGUgPSBkdWVEYXRlO1xyXG4gIH1cclxuICBzZXQgcHJpb3JpdHkocHJpb3JpdHkpIHtcclxuICAgIHRoaXMuX3ByaW9yaXR5ID0gcHJpb3JpdHk7XHJcbiAgfVxyXG4gIHNldCBpZChpZCkge1xyXG4gICAgdGhpcy5faWQgPSBpZDtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJvamVjdCB7XHJcbiAgdG9kb3MgPSBbXTtcclxuICBjb25zdHJ1Y3Rvcih0aXRsZSwgaWQsIGRpdikge1xyXG4gICAgdGhpcy5fdGl0bGUgPSB0aXRsZTtcclxuICAgIHRoaXMuX2lkID0gaWQ7XHJcbiAgICB0aGlzLl9kaXYgPSBkaXY7XHJcbiAgfVxyXG4gIGdldCB0aXRsZSgpIHtcclxuICAgIHJldHVybiB0aGlzLl90aXRsZTtcclxuICB9XHJcbiAgc2V0IHRpdGxlKHRpdGxlKSB7XHJcbiAgICB0aGlzLl90aXRsZSA9IHRpdGxlO1xyXG4gIH1cclxuICBnZXQgaWQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5faWQ7XHJcbiAgfVxyXG4gIGdldCBkaXYoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fZGl2O1xyXG4gIH1cclxuICBzZXQgZGl2KGRpdikge1xyXG4gICAgdGhpcy5fZGl2ID0gZGl2O1xyXG4gIH1cclxuICBcclxuICBhZGRUb2RvKHRvZG8pIHtcclxuICAgIHRoaXMudG9kb3MucHVzaCh0b2RvKTtcclxuICB9XHJcbiAgZ2V0QWxsKCkge1xyXG4gICAgcmV0dXJuIHRoaXMudG9kb3M7XHJcbiAgfVxyXG59XHJcbiIsImNvbnN0IHJlbW92ZUVsZW1lbnQ9KG9iamVjdCwgaWQpPT4ge1xyXG4gICAgbGV0IGFycmF5ID0gb2JqZWN0LmdldEFsbCgpO1xyXG4gICAgZm9yIChsZXQgaSBpbiBhcnJheSkge1xyXG4gICAgICBpZiAoYXJyYXlbaV0uaWQgPT0gaWQpIHtcclxuICAgICAgICBhcnJheS5zcGxpY2UoaSwxKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBleHBvcnQgZGVmYXVsdCByZW1vdmVFbGVtZW50OyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlcXVpcmVkQXJncyhyZXF1aXJlZCwgYXJncykge1xyXG4gIGlmIChhcmdzLmxlbmd0aCA8IHJlcXVpcmVkKSB7XHJcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHJlcXVpcmVkICsgJyBhcmd1bWVudCcgKyAocmVxdWlyZWQgPiAxID8gJ3MnIDogJycpICsgJyByZXF1aXJlZCwgYnV0IG9ubHkgJyArIGFyZ3MubGVuZ3RoICsgJyBwcmVzZW50Jyk7XHJcbiAgfVxyXG59IiwiZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfVxyXG5cclxuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcclxuLyoqXHJcbiAqIEBuYW1lIGlzRGF0ZVxyXG4gKiBAY2F0ZWdvcnkgQ29tbW9uIEhlbHBlcnNcclxuICogQHN1bW1hcnkgSXMgdGhlIGdpdmVuIHZhbHVlIGEgZGF0ZT9cclxuICpcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgZ2l2ZW4gdmFsdWUgaXMgYW4gaW5zdGFuY2Ugb2YgRGF0ZS4gVGhlIGZ1bmN0aW9uIHdvcmtzIGZvciBkYXRlcyB0cmFuc2ZlcnJlZCBhY3Jvc3MgaWZyYW1lcy5cclxuICpcclxuICogQHBhcmFtIHsqfSB2YWx1ZSAtIHRoZSB2YWx1ZSB0byBjaGVja1xyXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gdHJ1ZSBpZiB0aGUgZ2l2ZW4gdmFsdWUgaXMgYSBkYXRlXHJcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMSBhcmd1bWVudHMgcmVxdWlyZWRcclxuICpcclxuICogQGV4YW1wbGVcclxuICogLy8gRm9yIGEgdmFsaWQgZGF0ZTpcclxuICogY29uc3QgcmVzdWx0ID0gaXNEYXRlKG5ldyBEYXRlKCkpXHJcbiAqIC8vPT4gdHJ1ZVxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKiAvLyBGb3IgYW4gaW52YWxpZCBkYXRlOlxyXG4gKiBjb25zdCByZXN1bHQgPSBpc0RhdGUobmV3IERhdGUoTmFOKSlcclxuICogLy89PiB0cnVlXHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqIC8vIEZvciBzb21lIHZhbHVlOlxyXG4gKiBjb25zdCByZXN1bHQgPSBpc0RhdGUoJzIwMTQtMDItMzEnKVxyXG4gKiAvLz0+IGZhbHNlXHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqIC8vIEZvciBhbiBvYmplY3Q6XHJcbiAqIGNvbnN0IHJlc3VsdCA9IGlzRGF0ZSh7fSlcclxuICogLy89PiBmYWxzZVxyXG4gKi9cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzRGF0ZSh2YWx1ZSkge1xyXG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xyXG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIERhdGUgfHwgX3R5cGVvZih2YWx1ZSkgPT09ICdvYmplY3QnICYmIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT09ICdbb2JqZWN0IERhdGVdJztcclxufSIsImZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mKG9iaik7IH1cclxuXHJcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XHJcbi8qKlxyXG4gKiBAbmFtZSB0b0RhdGVcclxuICogQGNhdGVnb3J5IENvbW1vbiBIZWxwZXJzXHJcbiAqIEBzdW1tYXJ5IENvbnZlcnQgdGhlIGdpdmVuIGFyZ3VtZW50IHRvIGFuIGluc3RhbmNlIG9mIERhdGUuXHJcbiAqXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBDb252ZXJ0IHRoZSBnaXZlbiBhcmd1bWVudCB0byBhbiBpbnN0YW5jZSBvZiBEYXRlLlxyXG4gKlxyXG4gKiBJZiB0aGUgYXJndW1lbnQgaXMgYW4gaW5zdGFuY2Ugb2YgRGF0ZSwgdGhlIGZ1bmN0aW9uIHJldHVybnMgaXRzIGNsb25lLlxyXG4gKlxyXG4gKiBJZiB0aGUgYXJndW1lbnQgaXMgYSBudW1iZXIsIGl0IGlzIHRyZWF0ZWQgYXMgYSB0aW1lc3RhbXAuXHJcbiAqXHJcbiAqIElmIHRoZSBhcmd1bWVudCBpcyBub25lIG9mIHRoZSBhYm92ZSwgdGhlIGZ1bmN0aW9uIHJldHVybnMgSW52YWxpZCBEYXRlLlxyXG4gKlxyXG4gKiAqKk5vdGUqKjogKmFsbCogRGF0ZSBhcmd1bWVudHMgcGFzc2VkIHRvIGFueSAqZGF0ZS1mbnMqIGZ1bmN0aW9uIGlzIHByb2Nlc3NlZCBieSBgdG9EYXRlYC5cclxuICpcclxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gYXJndW1lbnQgLSB0aGUgdmFsdWUgdG8gY29udmVydFxyXG4gKiBAcmV0dXJucyB7RGF0ZX0gdGhlIHBhcnNlZCBkYXRlIGluIHRoZSBsb2NhbCB0aW1lIHpvbmVcclxuICogQHRocm93cyB7VHlwZUVycm9yfSAxIGFyZ3VtZW50IHJlcXVpcmVkXHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqIC8vIENsb25lIHRoZSBkYXRlOlxyXG4gKiBjb25zdCByZXN1bHQgPSB0b0RhdGUobmV3IERhdGUoMjAxNCwgMSwgMTEsIDExLCAzMCwgMzApKVxyXG4gKiAvLz0+IFR1ZSBGZWIgMTEgMjAxNCAxMTozMDozMFxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKiAvLyBDb252ZXJ0IHRoZSB0aW1lc3RhbXAgdG8gZGF0ZTpcclxuICogY29uc3QgcmVzdWx0ID0gdG9EYXRlKDEzOTIwOTg0MzAwMDApXHJcbiAqIC8vPT4gVHVlIEZlYiAxMSAyMDE0IDExOjMwOjMwXHJcbiAqL1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdG9EYXRlKGFyZ3VtZW50KSB7XHJcbiAgcmVxdWlyZWRBcmdzKDEsIGFyZ3VtZW50cyk7XHJcbiAgdmFyIGFyZ1N0ciA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcmd1bWVudCk7IC8vIENsb25lIHRoZSBkYXRlXHJcblxyXG4gIGlmIChhcmd1bWVudCBpbnN0YW5jZW9mIERhdGUgfHwgX3R5cGVvZihhcmd1bWVudCkgPT09ICdvYmplY3QnICYmIGFyZ1N0ciA9PT0gJ1tvYmplY3QgRGF0ZV0nKSB7XHJcbiAgICAvLyBQcmV2ZW50IHRoZSBkYXRlIHRvIGxvc2UgdGhlIG1pbGxpc2Vjb25kcyB3aGVuIHBhc3NlZCB0byBuZXcgRGF0ZSgpIGluIElFMTBcclxuICAgIHJldHVybiBuZXcgRGF0ZShhcmd1bWVudC5nZXRUaW1lKCkpO1xyXG4gIH0gZWxzZSBpZiAodHlwZW9mIGFyZ3VtZW50ID09PSAnbnVtYmVyJyB8fCBhcmdTdHIgPT09ICdbb2JqZWN0IE51bWJlcl0nKSB7XHJcbiAgICByZXR1cm4gbmV3IERhdGUoYXJndW1lbnQpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBpZiAoKHR5cGVvZiBhcmd1bWVudCA9PT0gJ3N0cmluZycgfHwgYXJnU3RyID09PSAnW29iamVjdCBTdHJpbmddJykgJiYgdHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXHJcbiAgICAgIGNvbnNvbGUud2FybihcIlN0YXJ0aW5nIHdpdGggdjIuMC4wLWJldGEuMSBkYXRlLWZucyBkb2Vzbid0IGFjY2VwdCBzdHJpbmdzIGFzIGRhdGUgYXJndW1lbnRzLiBQbGVhc2UgdXNlIGBwYXJzZUlTT2AgdG8gcGFyc2Ugc3RyaW5ncy4gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91cGdyYWRlR3VpZGUubWQjc3RyaW5nLWFyZ3VtZW50c1wiKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcclxuXHJcbiAgICAgIGNvbnNvbGUud2FybihuZXcgRXJyb3IoKS5zdGFjayk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG5ldyBEYXRlKE5hTik7XHJcbiAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdG9JbnRlZ2VyKGRpcnR5TnVtYmVyKSB7XHJcbiAgaWYgKGRpcnR5TnVtYmVyID09PSBudWxsIHx8IGRpcnR5TnVtYmVyID09PSB0cnVlIHx8IGRpcnR5TnVtYmVyID09PSBmYWxzZSkge1xyXG4gICAgcmV0dXJuIE5hTjtcclxuICB9XHJcblxyXG4gIHZhciBudW1iZXIgPSBOdW1iZXIoZGlydHlOdW1iZXIpO1xyXG5cclxuICBpZiAoaXNOYU4obnVtYmVyKSkge1xyXG4gICAgcmV0dXJuIG51bWJlcjtcclxuICB9XHJcblxyXG4gIHJldHVybiBudW1iZXIgPCAwID8gTWF0aC5jZWlsKG51bWJlcikgOiBNYXRoLmZsb29yKG51bWJlcik7XHJcbn0iLCJpbXBvcnQgdG9EYXRlIGZyb20gXCIuLi8uLi90b0RhdGUvaW5kZXguanNcIjtcclxuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN0YXJ0T2ZVVENJU09XZWVrKGRpcnR5RGF0ZSkge1xyXG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xyXG4gIHZhciB3ZWVrU3RhcnRzT24gPSAxO1xyXG4gIHZhciBkYXRlID0gdG9EYXRlKGRpcnR5RGF0ZSk7XHJcbiAgdmFyIGRheSA9IGRhdGUuZ2V0VVRDRGF5KCk7XHJcbiAgdmFyIGRpZmYgPSAoZGF5IDwgd2Vla1N0YXJ0c09uID8gNyA6IDApICsgZGF5IC0gd2Vla1N0YXJ0c09uO1xyXG4gIGRhdGUuc2V0VVRDRGF0ZShkYXRlLmdldFVUQ0RhdGUoKSAtIGRpZmYpO1xyXG4gIGRhdGUuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XHJcbiAgcmV0dXJuIGRhdGU7XHJcbn0iLCJpbXBvcnQgdG9EYXRlIGZyb20gXCIuLi8uLi90b0RhdGUvaW5kZXguanNcIjtcclxuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XHJcbmltcG9ydCBzdGFydE9mVVRDSVNPV2VlayBmcm9tIFwiLi4vc3RhcnRPZlVUQ0lTT1dlZWsvaW5kZXguanNcIjtcclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0VVRDSVNPV2Vla1llYXIoZGlydHlEYXRlKSB7XHJcbiAgcmVxdWlyZWRBcmdzKDEsIGFyZ3VtZW50cyk7XHJcbiAgdmFyIGRhdGUgPSB0b0RhdGUoZGlydHlEYXRlKTtcclxuICB2YXIgeWVhciA9IGRhdGUuZ2V0VVRDRnVsbFllYXIoKTtcclxuICB2YXIgZm91cnRoT2ZKYW51YXJ5T2ZOZXh0WWVhciA9IG5ldyBEYXRlKDApO1xyXG4gIGZvdXJ0aE9mSmFudWFyeU9mTmV4dFllYXIuc2V0VVRDRnVsbFllYXIoeWVhciArIDEsIDAsIDQpO1xyXG4gIGZvdXJ0aE9mSmFudWFyeU9mTmV4dFllYXIuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XHJcbiAgdmFyIHN0YXJ0T2ZOZXh0WWVhciA9IHN0YXJ0T2ZVVENJU09XZWVrKGZvdXJ0aE9mSmFudWFyeU9mTmV4dFllYXIpO1xyXG4gIHZhciBmb3VydGhPZkphbnVhcnlPZlRoaXNZZWFyID0gbmV3IERhdGUoMCk7XHJcbiAgZm91cnRoT2ZKYW51YXJ5T2ZUaGlzWWVhci5zZXRVVENGdWxsWWVhcih5ZWFyLCAwLCA0KTtcclxuICBmb3VydGhPZkphbnVhcnlPZlRoaXNZZWFyLnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApO1xyXG4gIHZhciBzdGFydE9mVGhpc1llYXIgPSBzdGFydE9mVVRDSVNPV2Vlayhmb3VydGhPZkphbnVhcnlPZlRoaXNZZWFyKTtcclxuXHJcbiAgaWYgKGRhdGUuZ2V0VGltZSgpID49IHN0YXJ0T2ZOZXh0WWVhci5nZXRUaW1lKCkpIHtcclxuICAgIHJldHVybiB5ZWFyICsgMTtcclxuICB9IGVsc2UgaWYgKGRhdGUuZ2V0VGltZSgpID49IHN0YXJ0T2ZUaGlzWWVhci5nZXRUaW1lKCkpIHtcclxuICAgIHJldHVybiB5ZWFyO1xyXG4gIH0gZWxzZSB7XHJcbiAgICByZXR1cm4geWVhciAtIDE7XHJcbiAgfVxyXG59IiwiaW1wb3J0IHRvRGF0ZSBmcm9tIFwiLi4vLi4vdG9EYXRlL2luZGV4LmpzXCI7XHJcbmltcG9ydCBzdGFydE9mVVRDSVNPV2VlayBmcm9tIFwiLi4vc3RhcnRPZlVUQ0lTT1dlZWsvaW5kZXguanNcIjtcclxuaW1wb3J0IHN0YXJ0T2ZVVENJU09XZWVrWWVhciBmcm9tIFwiLi4vc3RhcnRPZlVUQ0lTT1dlZWtZZWFyL2luZGV4LmpzXCI7XHJcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xyXG52YXIgTUlMTElTRUNPTkRTX0lOX1dFRUsgPSA2MDQ4MDAwMDA7XHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFVUQ0lTT1dlZWsoZGlydHlEYXRlKSB7XHJcbiAgcmVxdWlyZWRBcmdzKDEsIGFyZ3VtZW50cyk7XHJcbiAgdmFyIGRhdGUgPSB0b0RhdGUoZGlydHlEYXRlKTtcclxuICB2YXIgZGlmZiA9IHN0YXJ0T2ZVVENJU09XZWVrKGRhdGUpLmdldFRpbWUoKSAtIHN0YXJ0T2ZVVENJU09XZWVrWWVhcihkYXRlKS5nZXRUaW1lKCk7IC8vIFJvdW5kIHRoZSBudW1iZXIgb2YgZGF5cyB0byB0aGUgbmVhcmVzdCBpbnRlZ2VyXHJcbiAgLy8gYmVjYXVzZSB0aGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBpbiBhIHdlZWsgaXMgbm90IGNvbnN0YW50XHJcbiAgLy8gKGUuZy4gaXQncyBkaWZmZXJlbnQgaW4gdGhlIHdlZWsgb2YgdGhlIGRheWxpZ2h0IHNhdmluZyB0aW1lIGNsb2NrIHNoaWZ0KVxyXG5cclxuICByZXR1cm4gTWF0aC5yb3VuZChkaWZmIC8gTUlMTElTRUNPTkRTX0lOX1dFRUspICsgMTtcclxufSIsInZhciBkZWZhdWx0T3B0aW9ucyA9IHt9O1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVmYXVsdE9wdGlvbnMoKSB7XHJcbiAgcmV0dXJuIGRlZmF1bHRPcHRpb25zO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBzZXREZWZhdWx0T3B0aW9ucyhuZXdPcHRpb25zKSB7XHJcbiAgZGVmYXVsdE9wdGlvbnMgPSBuZXdPcHRpb25zO1xyXG59IiwiaW1wb3J0IHRvRGF0ZSBmcm9tIFwiLi4vLi4vdG9EYXRlL2luZGV4LmpzXCI7XHJcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xyXG5pbXBvcnQgdG9JbnRlZ2VyIGZyb20gXCIuLi90b0ludGVnZXIvaW5kZXguanNcIjtcclxuaW1wb3J0IHsgZ2V0RGVmYXVsdE9wdGlvbnMgfSBmcm9tIFwiLi4vZGVmYXVsdE9wdGlvbnMvaW5kZXguanNcIjtcclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3RhcnRPZlVUQ1dlZWsoZGlydHlEYXRlLCBvcHRpb25zKSB7XHJcbiAgdmFyIF9yZWYsIF9yZWYyLCBfcmVmMywgX29wdGlvbnMkd2Vla1N0YXJ0c09uLCBfb3B0aW9ucyRsb2NhbGUsIF9vcHRpb25zJGxvY2FsZSRvcHRpbywgX2RlZmF1bHRPcHRpb25zJGxvY2FsLCBfZGVmYXVsdE9wdGlvbnMkbG9jYWwyO1xyXG5cclxuICByZXF1aXJlZEFyZ3MoMSwgYXJndW1lbnRzKTtcclxuICB2YXIgZGVmYXVsdE9wdGlvbnMgPSBnZXREZWZhdWx0T3B0aW9ucygpO1xyXG4gIHZhciB3ZWVrU3RhcnRzT24gPSB0b0ludGVnZXIoKF9yZWYgPSAoX3JlZjIgPSAoX3JlZjMgPSAoX29wdGlvbnMkd2Vla1N0YXJ0c09uID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLndlZWtTdGFydHNPbikgIT09IG51bGwgJiYgX29wdGlvbnMkd2Vla1N0YXJ0c09uICE9PSB2b2lkIDAgPyBfb3B0aW9ucyR3ZWVrU3RhcnRzT24gOiBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfb3B0aW9ucyRsb2NhbGUgPSBvcHRpb25zLmxvY2FsZSkgPT09IG51bGwgfHwgX29wdGlvbnMkbG9jYWxlID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX29wdGlvbnMkbG9jYWxlJG9wdGlvID0gX29wdGlvbnMkbG9jYWxlLm9wdGlvbnMpID09PSBudWxsIHx8IF9vcHRpb25zJGxvY2FsZSRvcHRpbyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX29wdGlvbnMkbG9jYWxlJG9wdGlvLndlZWtTdGFydHNPbikgIT09IG51bGwgJiYgX3JlZjMgIT09IHZvaWQgMCA/IF9yZWYzIDogZGVmYXVsdE9wdGlvbnMud2Vla1N0YXJ0c09uKSAhPT0gbnVsbCAmJiBfcmVmMiAhPT0gdm9pZCAwID8gX3JlZjIgOiAoX2RlZmF1bHRPcHRpb25zJGxvY2FsID0gZGVmYXVsdE9wdGlvbnMubG9jYWxlKSA9PT0gbnVsbCB8fCBfZGVmYXVsdE9wdGlvbnMkbG9jYWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfZGVmYXVsdE9wdGlvbnMkbG9jYWwyID0gX2RlZmF1bHRPcHRpb25zJGxvY2FsLm9wdGlvbnMpID09PSBudWxsIHx8IF9kZWZhdWx0T3B0aW9ucyRsb2NhbDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kZWZhdWx0T3B0aW9ucyRsb2NhbDIud2Vla1N0YXJ0c09uKSAhPT0gbnVsbCAmJiBfcmVmICE9PSB2b2lkIDAgPyBfcmVmIDogMCk7IC8vIFRlc3QgaWYgd2Vla1N0YXJ0c09uIGlzIGJldHdlZW4gMCBhbmQgNiBfYW5kXyBpcyBub3QgTmFOXHJcblxyXG4gIGlmICghKHdlZWtTdGFydHNPbiA+PSAwICYmIHdlZWtTdGFydHNPbiA8PSA2KSkge1xyXG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ3dlZWtTdGFydHNPbiBtdXN0IGJlIGJldHdlZW4gMCBhbmQgNiBpbmNsdXNpdmVseScpO1xyXG4gIH1cclxuXHJcbiAgdmFyIGRhdGUgPSB0b0RhdGUoZGlydHlEYXRlKTtcclxuICB2YXIgZGF5ID0gZGF0ZS5nZXRVVENEYXkoKTtcclxuICB2YXIgZGlmZiA9IChkYXkgPCB3ZWVrU3RhcnRzT24gPyA3IDogMCkgKyBkYXkgLSB3ZWVrU3RhcnRzT247XHJcbiAgZGF0ZS5zZXRVVENEYXRlKGRhdGUuZ2V0VVRDRGF0ZSgpIC0gZGlmZik7XHJcbiAgZGF0ZS5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcclxuICByZXR1cm4gZGF0ZTtcclxufSIsImltcG9ydCB0b0RhdGUgZnJvbSBcIi4uLy4uL3RvRGF0ZS9pbmRleC5qc1wiO1xyXG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcclxuaW1wb3J0IHN0YXJ0T2ZVVENXZWVrIGZyb20gXCIuLi9zdGFydE9mVVRDV2Vlay9pbmRleC5qc1wiO1xyXG5pbXBvcnQgdG9JbnRlZ2VyIGZyb20gXCIuLi90b0ludGVnZXIvaW5kZXguanNcIjtcclxuaW1wb3J0IHsgZ2V0RGVmYXVsdE9wdGlvbnMgfSBmcm9tIFwiLi4vZGVmYXVsdE9wdGlvbnMvaW5kZXguanNcIjtcclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0VVRDV2Vla1llYXIoZGlydHlEYXRlLCBvcHRpb25zKSB7XHJcbiAgdmFyIF9yZWYsIF9yZWYyLCBfcmVmMywgX29wdGlvbnMkZmlyc3RXZWVrQ29uLCBfb3B0aW9ucyRsb2NhbGUsIF9vcHRpb25zJGxvY2FsZSRvcHRpbywgX2RlZmF1bHRPcHRpb25zJGxvY2FsLCBfZGVmYXVsdE9wdGlvbnMkbG9jYWwyO1xyXG5cclxuICByZXF1aXJlZEFyZ3MoMSwgYXJndW1lbnRzKTtcclxuICB2YXIgZGF0ZSA9IHRvRGF0ZShkaXJ0eURhdGUpO1xyXG4gIHZhciB5ZWFyID0gZGF0ZS5nZXRVVENGdWxsWWVhcigpO1xyXG4gIHZhciBkZWZhdWx0T3B0aW9ucyA9IGdldERlZmF1bHRPcHRpb25zKCk7XHJcbiAgdmFyIGZpcnN0V2Vla0NvbnRhaW5zRGF0ZSA9IHRvSW50ZWdlcigoX3JlZiA9IChfcmVmMiA9IChfcmVmMyA9IChfb3B0aW9ucyRmaXJzdFdlZWtDb24gPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuZmlyc3RXZWVrQ29udGFpbnNEYXRlKSAhPT0gbnVsbCAmJiBfb3B0aW9ucyRmaXJzdFdlZWtDb24gIT09IHZvaWQgMCA/IF9vcHRpb25zJGZpcnN0V2Vla0NvbiA6IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9vcHRpb25zJGxvY2FsZSA9IG9wdGlvbnMubG9jYWxlKSA9PT0gbnVsbCB8fCBfb3B0aW9ucyRsb2NhbGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfb3B0aW9ucyRsb2NhbGUkb3B0aW8gPSBfb3B0aW9ucyRsb2NhbGUub3B0aW9ucykgPT09IG51bGwgfHwgX29wdGlvbnMkbG9jYWxlJG9wdGlvID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfb3B0aW9ucyRsb2NhbGUkb3B0aW8uZmlyc3RXZWVrQ29udGFpbnNEYXRlKSAhPT0gbnVsbCAmJiBfcmVmMyAhPT0gdm9pZCAwID8gX3JlZjMgOiBkZWZhdWx0T3B0aW9ucy5maXJzdFdlZWtDb250YWluc0RhdGUpICE9PSBudWxsICYmIF9yZWYyICE9PSB2b2lkIDAgPyBfcmVmMiA6IChfZGVmYXVsdE9wdGlvbnMkbG9jYWwgPSBkZWZhdWx0T3B0aW9ucy5sb2NhbGUpID09PSBudWxsIHx8IF9kZWZhdWx0T3B0aW9ucyRsb2NhbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9kZWZhdWx0T3B0aW9ucyRsb2NhbDIgPSBfZGVmYXVsdE9wdGlvbnMkbG9jYWwub3B0aW9ucykgPT09IG51bGwgfHwgX2RlZmF1bHRPcHRpb25zJGxvY2FsMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2RlZmF1bHRPcHRpb25zJGxvY2FsMi5maXJzdFdlZWtDb250YWluc0RhdGUpICE9PSBudWxsICYmIF9yZWYgIT09IHZvaWQgMCA/IF9yZWYgOiAxKTsgLy8gVGVzdCBpZiB3ZWVrU3RhcnRzT24gaXMgYmV0d2VlbiAxIGFuZCA3IF9hbmRfIGlzIG5vdCBOYU5cclxuXHJcbiAgaWYgKCEoZmlyc3RXZWVrQ29udGFpbnNEYXRlID49IDEgJiYgZmlyc3RXZWVrQ29udGFpbnNEYXRlIDw9IDcpKSB7XHJcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignZmlyc3RXZWVrQ29udGFpbnNEYXRlIG11c3QgYmUgYmV0d2VlbiAxIGFuZCA3IGluY2x1c2l2ZWx5Jyk7XHJcbiAgfVxyXG5cclxuICB2YXIgZmlyc3RXZWVrT2ZOZXh0WWVhciA9IG5ldyBEYXRlKDApO1xyXG4gIGZpcnN0V2Vla09mTmV4dFllYXIuc2V0VVRDRnVsbFllYXIoeWVhciArIDEsIDAsIGZpcnN0V2Vla0NvbnRhaW5zRGF0ZSk7XHJcbiAgZmlyc3RXZWVrT2ZOZXh0WWVhci5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcclxuICB2YXIgc3RhcnRPZk5leHRZZWFyID0gc3RhcnRPZlVUQ1dlZWsoZmlyc3RXZWVrT2ZOZXh0WWVhciwgb3B0aW9ucyk7XHJcbiAgdmFyIGZpcnN0V2Vla09mVGhpc1llYXIgPSBuZXcgRGF0ZSgwKTtcclxuICBmaXJzdFdlZWtPZlRoaXNZZWFyLnNldFVUQ0Z1bGxZZWFyKHllYXIsIDAsIGZpcnN0V2Vla0NvbnRhaW5zRGF0ZSk7XHJcbiAgZmlyc3RXZWVrT2ZUaGlzWWVhci5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcclxuICB2YXIgc3RhcnRPZlRoaXNZZWFyID0gc3RhcnRPZlVUQ1dlZWsoZmlyc3RXZWVrT2ZUaGlzWWVhciwgb3B0aW9ucyk7XHJcblxyXG4gIGlmIChkYXRlLmdldFRpbWUoKSA+PSBzdGFydE9mTmV4dFllYXIuZ2V0VGltZSgpKSB7XHJcbiAgICByZXR1cm4geWVhciArIDE7XHJcbiAgfSBlbHNlIGlmIChkYXRlLmdldFRpbWUoKSA+PSBzdGFydE9mVGhpc1llYXIuZ2V0VGltZSgpKSB7XHJcbiAgICByZXR1cm4geWVhcjtcclxuICB9IGVsc2Uge1xyXG4gICAgcmV0dXJuIHllYXIgLSAxO1xyXG4gIH1cclxufSIsImltcG9ydCB0b0RhdGUgZnJvbSBcIi4uLy4uL3RvRGF0ZS9pbmRleC5qc1wiO1xyXG5pbXBvcnQgc3RhcnRPZlVUQ1dlZWsgZnJvbSBcIi4uL3N0YXJ0T2ZVVENXZWVrL2luZGV4LmpzXCI7XHJcbmltcG9ydCBzdGFydE9mVVRDV2Vla1llYXIgZnJvbSBcIi4uL3N0YXJ0T2ZVVENXZWVrWWVhci9pbmRleC5qc1wiO1xyXG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcclxudmFyIE1JTExJU0VDT05EU19JTl9XRUVLID0gNjA0ODAwMDAwO1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRVVENXZWVrKGRpcnR5RGF0ZSwgb3B0aW9ucykge1xyXG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xyXG4gIHZhciBkYXRlID0gdG9EYXRlKGRpcnR5RGF0ZSk7XHJcbiAgdmFyIGRpZmYgPSBzdGFydE9mVVRDV2VlayhkYXRlLCBvcHRpb25zKS5nZXRUaW1lKCkgLSBzdGFydE9mVVRDV2Vla1llYXIoZGF0ZSwgb3B0aW9ucykuZ2V0VGltZSgpOyAvLyBSb3VuZCB0aGUgbnVtYmVyIG9mIGRheXMgdG8gdGhlIG5lYXJlc3QgaW50ZWdlclxyXG4gIC8vIGJlY2F1c2UgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgaW4gYSB3ZWVrIGlzIG5vdCBjb25zdGFudFxyXG4gIC8vIChlLmcuIGl0J3MgZGlmZmVyZW50IGluIHRoZSB3ZWVrIG9mIHRoZSBkYXlsaWdodCBzYXZpbmcgdGltZSBjbG9jayBzaGlmdClcclxuXHJcbiAgcmV0dXJuIE1hdGgucm91bmQoZGlmZiAvIE1JTExJU0VDT05EU19JTl9XRUVLKSArIDE7XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhZGRMZWFkaW5nWmVyb3MobnVtYmVyLCB0YXJnZXRMZW5ndGgpIHtcclxuICB2YXIgc2lnbiA9IG51bWJlciA8IDAgPyAnLScgOiAnJztcclxuICB2YXIgb3V0cHV0ID0gTWF0aC5hYnMobnVtYmVyKS50b1N0cmluZygpO1xyXG5cclxuICB3aGlsZSAob3V0cHV0Lmxlbmd0aCA8IHRhcmdldExlbmd0aCkge1xyXG4gICAgb3V0cHV0ID0gJzAnICsgb3V0cHV0O1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHNpZ24gKyBvdXRwdXQ7XHJcbn0iLCJpbXBvcnQgYWRkTGVhZGluZ1plcm9zIGZyb20gXCIuLi8uLi9hZGRMZWFkaW5nWmVyb3MvaW5kZXguanNcIjtcclxuLypcclxuICogfCAgICAgfCBVbml0ICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgfCBVbml0ICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxyXG4gKiB8LS0tLS18LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS18LS0tLS18LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS18XHJcbiAqIHwgIGEgIHwgQU0sIFBNICAgICAgICAgICAgICAgICAgICAgICAgIHwgIEEqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcclxuICogfCAgZCAgfCBEYXkgb2YgbW9udGggICAgICAgICAgICAgICAgICAgfCAgRCAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxyXG4gKiB8ICBoICB8IEhvdXIgWzEtMTJdICAgICAgICAgICAgICAgICAgICB8ICBIICB8IEhvdXIgWzAtMjNdICAgICAgICAgICAgICAgICAgICB8XHJcbiAqIHwgIG0gIHwgTWludXRlICAgICAgICAgICAgICAgICAgICAgICAgIHwgIE0gIHwgTW9udGggICAgICAgICAgICAgICAgICAgICAgICAgIHxcclxuICogfCAgcyAgfCBTZWNvbmQgICAgICAgICAgICAgICAgICAgICAgICAgfCAgUyAgfCBGcmFjdGlvbiBvZiBzZWNvbmQgICAgICAgICAgICAgfFxyXG4gKiB8ICB5ICB8IFllYXIgKGFicykgICAgICAgICAgICAgICAgICAgICB8ICBZICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XHJcbiAqXHJcbiAqIExldHRlcnMgbWFya2VkIGJ5ICogYXJlIG5vdCBpbXBsZW1lbnRlZCBidXQgcmVzZXJ2ZWQgYnkgVW5pY29kZSBzdGFuZGFyZC5cclxuICovXHJcblxyXG52YXIgZm9ybWF0dGVycyA9IHtcclxuICAvLyBZZWFyXHJcbiAgeTogZnVuY3Rpb24geShkYXRlLCB0b2tlbikge1xyXG4gICAgLy8gRnJvbSBodHRwOi8vd3d3LnVuaWNvZGUub3JnL3JlcG9ydHMvdHIzNS90cjM1LTMxL3RyMzUtZGF0ZXMuaHRtbCNEYXRlX0Zvcm1hdF90b2tlbnNcclxuICAgIC8vIHwgWWVhciAgICAgfCAgICAgeSB8IHl5IHwgICB5eXkgfCAgeXl5eSB8IHl5eXl5IHxcclxuICAgIC8vIHwtLS0tLS0tLS0tfC0tLS0tLS18LS0tLXwtLS0tLS0tfC0tLS0tLS18LS0tLS0tLXxcclxuICAgIC8vIHwgQUQgMSAgICAgfCAgICAgMSB8IDAxIHwgICAwMDEgfCAgMDAwMSB8IDAwMDAxIHxcclxuICAgIC8vIHwgQUQgMTIgICAgfCAgICAxMiB8IDEyIHwgICAwMTIgfCAgMDAxMiB8IDAwMDEyIHxcclxuICAgIC8vIHwgQUQgMTIzICAgfCAgIDEyMyB8IDIzIHwgICAxMjMgfCAgMDEyMyB8IDAwMTIzIHxcclxuICAgIC8vIHwgQUQgMTIzNCAgfCAgMTIzNCB8IDM0IHwgIDEyMzQgfCAgMTIzNCB8IDAxMjM0IHxcclxuICAgIC8vIHwgQUQgMTIzNDUgfCAxMjM0NSB8IDQ1IHwgMTIzNDUgfCAxMjM0NSB8IDEyMzQ1IHxcclxuICAgIHZhciBzaWduZWRZZWFyID0gZGF0ZS5nZXRVVENGdWxsWWVhcigpOyAvLyBSZXR1cm5zIDEgZm9yIDEgQkMgKHdoaWNoIGlzIHllYXIgMCBpbiBKYXZhU2NyaXB0KVxyXG5cclxuICAgIHZhciB5ZWFyID0gc2lnbmVkWWVhciA+IDAgPyBzaWduZWRZZWFyIDogMSAtIHNpZ25lZFllYXI7XHJcbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKHRva2VuID09PSAneXknID8geWVhciAlIDEwMCA6IHllYXIsIHRva2VuLmxlbmd0aCk7XHJcbiAgfSxcclxuICAvLyBNb250aFxyXG4gIE06IGZ1bmN0aW9uIE0oZGF0ZSwgdG9rZW4pIHtcclxuICAgIHZhciBtb250aCA9IGRhdGUuZ2V0VVRDTW9udGgoKTtcclxuICAgIHJldHVybiB0b2tlbiA9PT0gJ00nID8gU3RyaW5nKG1vbnRoICsgMSkgOiBhZGRMZWFkaW5nWmVyb3MobW9udGggKyAxLCAyKTtcclxuICB9LFxyXG4gIC8vIERheSBvZiB0aGUgbW9udGhcclxuICBkOiBmdW5jdGlvbiBkKGRhdGUsIHRva2VuKSB7XHJcbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKGRhdGUuZ2V0VVRDRGF0ZSgpLCB0b2tlbi5sZW5ndGgpO1xyXG4gIH0sXHJcbiAgLy8gQU0gb3IgUE1cclxuICBhOiBmdW5jdGlvbiBhKGRhdGUsIHRva2VuKSB7XHJcbiAgICB2YXIgZGF5UGVyaW9kRW51bVZhbHVlID0gZGF0ZS5nZXRVVENIb3VycygpIC8gMTIgPj0gMSA/ICdwbScgOiAnYW0nO1xyXG5cclxuICAgIHN3aXRjaCAodG9rZW4pIHtcclxuICAgICAgY2FzZSAnYSc6XHJcbiAgICAgIGNhc2UgJ2FhJzpcclxuICAgICAgICByZXR1cm4gZGF5UGVyaW9kRW51bVZhbHVlLnRvVXBwZXJDYXNlKCk7XHJcblxyXG4gICAgICBjYXNlICdhYWEnOlxyXG4gICAgICAgIHJldHVybiBkYXlQZXJpb2RFbnVtVmFsdWU7XHJcblxyXG4gICAgICBjYXNlICdhYWFhYSc6XHJcbiAgICAgICAgcmV0dXJuIGRheVBlcmlvZEVudW1WYWx1ZVswXTtcclxuXHJcbiAgICAgIGNhc2UgJ2FhYWEnOlxyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIHJldHVybiBkYXlQZXJpb2RFbnVtVmFsdWUgPT09ICdhbScgPyAnYS5tLicgOiAncC5tLic7XHJcbiAgICB9XHJcbiAgfSxcclxuICAvLyBIb3VyIFsxLTEyXVxyXG4gIGg6IGZ1bmN0aW9uIGgoZGF0ZSwgdG9rZW4pIHtcclxuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MoZGF0ZS5nZXRVVENIb3VycygpICUgMTIgfHwgMTIsIHRva2VuLmxlbmd0aCk7XHJcbiAgfSxcclxuICAvLyBIb3VyIFswLTIzXVxyXG4gIEg6IGZ1bmN0aW9uIEgoZGF0ZSwgdG9rZW4pIHtcclxuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MoZGF0ZS5nZXRVVENIb3VycygpLCB0b2tlbi5sZW5ndGgpO1xyXG4gIH0sXHJcbiAgLy8gTWludXRlXHJcbiAgbTogZnVuY3Rpb24gbShkYXRlLCB0b2tlbikge1xyXG4gICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhkYXRlLmdldFVUQ01pbnV0ZXMoKSwgdG9rZW4ubGVuZ3RoKTtcclxuICB9LFxyXG4gIC8vIFNlY29uZFxyXG4gIHM6IGZ1bmN0aW9uIHMoZGF0ZSwgdG9rZW4pIHtcclxuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MoZGF0ZS5nZXRVVENTZWNvbmRzKCksIHRva2VuLmxlbmd0aCk7XHJcbiAgfSxcclxuICAvLyBGcmFjdGlvbiBvZiBzZWNvbmRcclxuICBTOiBmdW5jdGlvbiBTKGRhdGUsIHRva2VuKSB7XHJcbiAgICB2YXIgbnVtYmVyT2ZEaWdpdHMgPSB0b2tlbi5sZW5ndGg7XHJcbiAgICB2YXIgbWlsbGlzZWNvbmRzID0gZGF0ZS5nZXRVVENNaWxsaXNlY29uZHMoKTtcclxuICAgIHZhciBmcmFjdGlvbmFsU2Vjb25kcyA9IE1hdGguZmxvb3IobWlsbGlzZWNvbmRzICogTWF0aC5wb3coMTAsIG51bWJlck9mRGlnaXRzIC0gMykpO1xyXG4gICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhmcmFjdGlvbmFsU2Vjb25kcywgdG9rZW4ubGVuZ3RoKTtcclxuICB9XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IGZvcm1hdHRlcnM7IiwiaW1wb3J0IGdldFVUQ0RheU9mWWVhciBmcm9tIFwiLi4vLi4vLi4vX2xpYi9nZXRVVENEYXlPZlllYXIvaW5kZXguanNcIjtcclxuaW1wb3J0IGdldFVUQ0lTT1dlZWsgZnJvbSBcIi4uLy4uLy4uL19saWIvZ2V0VVRDSVNPV2Vlay9pbmRleC5qc1wiO1xyXG5pbXBvcnQgZ2V0VVRDSVNPV2Vla1llYXIgZnJvbSBcIi4uLy4uLy4uL19saWIvZ2V0VVRDSVNPV2Vla1llYXIvaW5kZXguanNcIjtcclxuaW1wb3J0IGdldFVUQ1dlZWsgZnJvbSBcIi4uLy4uLy4uL19saWIvZ2V0VVRDV2Vlay9pbmRleC5qc1wiO1xyXG5pbXBvcnQgZ2V0VVRDV2Vla1llYXIgZnJvbSBcIi4uLy4uLy4uL19saWIvZ2V0VVRDV2Vla1llYXIvaW5kZXguanNcIjtcclxuaW1wb3J0IGFkZExlYWRpbmdaZXJvcyBmcm9tIFwiLi4vLi4vYWRkTGVhZGluZ1plcm9zL2luZGV4LmpzXCI7XHJcbmltcG9ydCBsaWdodEZvcm1hdHRlcnMgZnJvbSBcIi4uL2xpZ2h0Rm9ybWF0dGVycy9pbmRleC5qc1wiO1xyXG52YXIgZGF5UGVyaW9kRW51bSA9IHtcclxuICBhbTogJ2FtJyxcclxuICBwbTogJ3BtJyxcclxuICBtaWRuaWdodDogJ21pZG5pZ2h0JyxcclxuICBub29uOiAnbm9vbicsXHJcbiAgbW9ybmluZzogJ21vcm5pbmcnLFxyXG4gIGFmdGVybm9vbjogJ2FmdGVybm9vbicsXHJcbiAgZXZlbmluZzogJ2V2ZW5pbmcnLFxyXG4gIG5pZ2h0OiAnbmlnaHQnXHJcbn07XHJcblxyXG4vKlxyXG4gKiB8ICAgICB8IFVuaXQgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICB8IFVuaXQgICAgICAgICAgICAgICAgICAgICAgICAgICB8XHJcbiAqIHwtLS0tLXwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLXwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXxcclxuICogfCAgYSAgfCBBTSwgUE0gICAgICAgICAgICAgICAgICAgICAgICAgfCAgQSogfCBNaWxsaXNlY29uZHMgaW4gZGF5ICAgICAgICAgICAgfFxyXG4gKiB8ICBiICB8IEFNLCBQTSwgbm9vbiwgbWlkbmlnaHQgICAgICAgICB8ICBCICB8IEZsZXhpYmxlIGRheSBwZXJpb2QgICAgICAgICAgICB8XHJcbiAqIHwgIGMgIHwgU3RhbmQtYWxvbmUgbG9jYWwgZGF5IG9mIHdlZWsgIHwgIEMqIHwgTG9jYWxpemVkIGhvdXIgdy8gZGF5IHBlcmlvZCAgIHxcclxuICogfCAgZCAgfCBEYXkgb2YgbW9udGggICAgICAgICAgICAgICAgICAgfCAgRCAgfCBEYXkgb2YgeWVhciAgICAgICAgICAgICAgICAgICAgfFxyXG4gKiB8ICBlICB8IExvY2FsIGRheSBvZiB3ZWVrICAgICAgICAgICAgICB8ICBFICB8IERheSBvZiB3ZWVrICAgICAgICAgICAgICAgICAgICB8XHJcbiAqIHwgIGYgIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIEYqIHwgRGF5IG9mIHdlZWsgaW4gbW9udGggICAgICAgICAgIHxcclxuICogfCAgZyogfCBNb2RpZmllZCBKdWxpYW4gZGF5ICAgICAgICAgICAgfCAgRyAgfCBFcmEgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxyXG4gKiB8ICBoICB8IEhvdXIgWzEtMTJdICAgICAgICAgICAgICAgICAgICB8ICBIICB8IEhvdXIgWzAtMjNdICAgICAgICAgICAgICAgICAgICB8XHJcbiAqIHwgIGkhIHwgSVNPIGRheSBvZiB3ZWVrICAgICAgICAgICAgICAgIHwgIEkhIHwgSVNPIHdlZWsgb2YgeWVhciAgICAgICAgICAgICAgIHxcclxuICogfCAgaiogfCBMb2NhbGl6ZWQgaG91ciB3LyBkYXkgcGVyaW9kICAgfCAgSiogfCBMb2NhbGl6ZWQgaG91ciB3L28gZGF5IHBlcmlvZCAgfFxyXG4gKiB8ICBrICB8IEhvdXIgWzEtMjRdICAgICAgICAgICAgICAgICAgICB8ICBLICB8IEhvdXIgWzAtMTFdICAgICAgICAgICAgICAgICAgICB8XHJcbiAqIHwgIGwqIHwgKGRlcHJlY2F0ZWQpICAgICAgICAgICAgICAgICAgIHwgIEwgIHwgU3RhbmQtYWxvbmUgbW9udGggICAgICAgICAgICAgIHxcclxuICogfCAgbSAgfCBNaW51dGUgICAgICAgICAgICAgICAgICAgICAgICAgfCAgTSAgfCBNb250aCAgICAgICAgICAgICAgICAgICAgICAgICAgfFxyXG4gKiB8ICBuICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICBOICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XHJcbiAqIHwgIG8hIHwgT3JkaW5hbCBudW1iZXIgbW9kaWZpZXIgICAgICAgIHwgIE8gIHwgVGltZXpvbmUgKEdNVCkgICAgICAgICAgICAgICAgIHxcclxuICogfCAgcCEgfCBMb25nIGxvY2FsaXplZCB0aW1lICAgICAgICAgICAgfCAgUCEgfCBMb25nIGxvY2FsaXplZCBkYXRlICAgICAgICAgICAgfFxyXG4gKiB8ICBxICB8IFN0YW5kLWFsb25lIHF1YXJ0ZXIgICAgICAgICAgICB8ICBRICB8IFF1YXJ0ZXIgICAgICAgICAgICAgICAgICAgICAgICB8XHJcbiAqIHwgIHIqIHwgUmVsYXRlZCBHcmVnb3JpYW4geWVhciAgICAgICAgIHwgIFIhIHwgSVNPIHdlZWstbnVtYmVyaW5nIHllYXIgICAgICAgIHxcclxuICogfCAgcyAgfCBTZWNvbmQgICAgICAgICAgICAgICAgICAgICAgICAgfCAgUyAgfCBGcmFjdGlvbiBvZiBzZWNvbmQgICAgICAgICAgICAgfFxyXG4gKiB8ICB0ISB8IFNlY29uZHMgdGltZXN0YW1wICAgICAgICAgICAgICB8ICBUISB8IE1pbGxpc2Vjb25kcyB0aW1lc3RhbXAgICAgICAgICB8XHJcbiAqIHwgIHUgIHwgRXh0ZW5kZWQgeWVhciAgICAgICAgICAgICAgICAgIHwgIFUqIHwgQ3ljbGljIHllYXIgICAgICAgICAgICAgICAgICAgIHxcclxuICogfCAgdiogfCBUaW1lem9uZSAoZ2VuZXJpYyBub24tbG9jYXQuKSAgfCAgViogfCBUaW1lem9uZSAobG9jYXRpb24pICAgICAgICAgICAgfFxyXG4gKiB8ICB3ICB8IExvY2FsIHdlZWsgb2YgeWVhciAgICAgICAgICAgICB8ICBXKiB8IFdlZWsgb2YgbW9udGggICAgICAgICAgICAgICAgICB8XHJcbiAqIHwgIHggIHwgVGltZXpvbmUgKElTTy04NjAxIHcvbyBaKSAgICAgIHwgIFggIHwgVGltZXpvbmUgKElTTy04NjAxKSAgICAgICAgICAgIHxcclxuICogfCAgeSAgfCBZZWFyIChhYnMpICAgICAgICAgICAgICAgICAgICAgfCAgWSAgfCBMb2NhbCB3ZWVrLW51bWJlcmluZyB5ZWFyICAgICAgfFxyXG4gKiB8ICB6ICB8IFRpbWV6b25lIChzcGVjaWZpYyBub24tbG9jYXQuKSB8ICBaKiB8IFRpbWV6b25lIChhbGlhc2VzKSAgICAgICAgICAgICB8XHJcbiAqXHJcbiAqIExldHRlcnMgbWFya2VkIGJ5ICogYXJlIG5vdCBpbXBsZW1lbnRlZCBidXQgcmVzZXJ2ZWQgYnkgVW5pY29kZSBzdGFuZGFyZC5cclxuICpcclxuICogTGV0dGVycyBtYXJrZWQgYnkgISBhcmUgbm9uLXN0YW5kYXJkLCBidXQgaW1wbGVtZW50ZWQgYnkgZGF0ZS1mbnM6XHJcbiAqIC0gYG9gIG1vZGlmaWVzIHRoZSBwcmV2aW91cyB0b2tlbiB0byB0dXJuIGl0IGludG8gYW4gb3JkaW5hbCAoc2VlIGBmb3JtYXRgIGRvY3MpXHJcbiAqIC0gYGlgIGlzIElTTyBkYXkgb2Ygd2Vlay4gRm9yIGBpYCBhbmQgYGlpYCBpcyByZXR1cm5zIG51bWVyaWMgSVNPIHdlZWsgZGF5cyxcclxuICogICBpLmUuIDcgZm9yIFN1bmRheSwgMSBmb3IgTW9uZGF5LCBldGMuXHJcbiAqIC0gYElgIGlzIElTTyB3ZWVrIG9mIHllYXIsIGFzIG9wcG9zZWQgdG8gYHdgIHdoaWNoIGlzIGxvY2FsIHdlZWsgb2YgeWVhci5cclxuICogLSBgUmAgaXMgSVNPIHdlZWstbnVtYmVyaW5nIHllYXIsIGFzIG9wcG9zZWQgdG8gYFlgIHdoaWNoIGlzIGxvY2FsIHdlZWstbnVtYmVyaW5nIHllYXIuXHJcbiAqICAgYFJgIGlzIHN1cHBvc2VkIHRvIGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBgSWAgYW5kIGBpYFxyXG4gKiAgIGZvciB1bml2ZXJzYWwgSVNPIHdlZWstbnVtYmVyaW5nIGRhdGUsIHdoZXJlYXNcclxuICogICBgWWAgaXMgc3VwcG9zZWQgdG8gYmUgdXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIGB3YCBhbmQgYGVgXHJcbiAqICAgZm9yIHdlZWstbnVtYmVyaW5nIGRhdGUgc3BlY2lmaWMgdG8gdGhlIGxvY2FsZS5cclxuICogLSBgUGAgaXMgbG9uZyBsb2NhbGl6ZWQgZGF0ZSBmb3JtYXRcclxuICogLSBgcGAgaXMgbG9uZyBsb2NhbGl6ZWQgdGltZSBmb3JtYXRcclxuICovXHJcbnZhciBmb3JtYXR0ZXJzID0ge1xyXG4gIC8vIEVyYVxyXG4gIEc6IGZ1bmN0aW9uIEcoZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XHJcbiAgICB2YXIgZXJhID0gZGF0ZS5nZXRVVENGdWxsWWVhcigpID4gMCA/IDEgOiAwO1xyXG5cclxuICAgIHN3aXRjaCAodG9rZW4pIHtcclxuICAgICAgLy8gQUQsIEJDXHJcbiAgICAgIGNhc2UgJ0cnOlxyXG4gICAgICBjYXNlICdHRyc6XHJcbiAgICAgIGNhc2UgJ0dHRyc6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmVyYShlcmEsIHtcclxuICAgICAgICAgIHdpZHRoOiAnYWJicmV2aWF0ZWQnXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIC8vIEEsIEJcclxuXHJcbiAgICAgIGNhc2UgJ0dHR0dHJzpcclxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZXJhKGVyYSwge1xyXG4gICAgICAgICAgd2lkdGg6ICduYXJyb3cnXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIC8vIEFubm8gRG9taW5pLCBCZWZvcmUgQ2hyaXN0XHJcblxyXG4gICAgICBjYXNlICdHR0dHJzpcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZXJhKGVyYSwge1xyXG4gICAgICAgICAgd2lkdGg6ICd3aWRlJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgLy8gWWVhclxyXG4gIHk6IGZ1bmN0aW9uIHkoZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XHJcbiAgICAvLyBPcmRpbmFsIG51bWJlclxyXG4gICAgaWYgKHRva2VuID09PSAneW8nKSB7XHJcbiAgICAgIHZhciBzaWduZWRZZWFyID0gZGF0ZS5nZXRVVENGdWxsWWVhcigpOyAvLyBSZXR1cm5zIDEgZm9yIDEgQkMgKHdoaWNoIGlzIHllYXIgMCBpbiBKYXZhU2NyaXB0KVxyXG5cclxuICAgICAgdmFyIHllYXIgPSBzaWduZWRZZWFyID4gMCA/IHNpZ25lZFllYXIgOiAxIC0gc2lnbmVkWWVhcjtcclxuICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIoeWVhciwge1xyXG4gICAgICAgIHVuaXQ6ICd5ZWFyJ1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gbGlnaHRGb3JtYXR0ZXJzLnkoZGF0ZSwgdG9rZW4pO1xyXG4gIH0sXHJcbiAgLy8gTG9jYWwgd2Vlay1udW1iZXJpbmcgeWVhclxyXG4gIFk6IGZ1bmN0aW9uIFkoZGF0ZSwgdG9rZW4sIGxvY2FsaXplLCBvcHRpb25zKSB7XHJcbiAgICB2YXIgc2lnbmVkV2Vla1llYXIgPSBnZXRVVENXZWVrWWVhcihkYXRlLCBvcHRpb25zKTsgLy8gUmV0dXJucyAxIGZvciAxIEJDICh3aGljaCBpcyB5ZWFyIDAgaW4gSmF2YVNjcmlwdClcclxuXHJcbiAgICB2YXIgd2Vla1llYXIgPSBzaWduZWRXZWVrWWVhciA+IDAgPyBzaWduZWRXZWVrWWVhciA6IDEgLSBzaWduZWRXZWVrWWVhcjsgLy8gVHdvIGRpZ2l0IHllYXJcclxuXHJcbiAgICBpZiAodG9rZW4gPT09ICdZWScpIHtcclxuICAgICAgdmFyIHR3b0RpZ2l0WWVhciA9IHdlZWtZZWFyICUgMTAwO1xyXG4gICAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKHR3b0RpZ2l0WWVhciwgMik7XHJcbiAgICB9IC8vIE9yZGluYWwgbnVtYmVyXHJcblxyXG5cclxuICAgIGlmICh0b2tlbiA9PT0gJ1lvJykge1xyXG4gICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcih3ZWVrWWVhciwge1xyXG4gICAgICAgIHVuaXQ6ICd5ZWFyJ1xyXG4gICAgICB9KTtcclxuICAgIH0gLy8gUGFkZGluZ1xyXG5cclxuXHJcbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKHdlZWtZZWFyLCB0b2tlbi5sZW5ndGgpO1xyXG4gIH0sXHJcbiAgLy8gSVNPIHdlZWstbnVtYmVyaW5nIHllYXJcclxuICBSOiBmdW5jdGlvbiBSKGRhdGUsIHRva2VuKSB7XHJcbiAgICB2YXIgaXNvV2Vla1llYXIgPSBnZXRVVENJU09XZWVrWWVhcihkYXRlKTsgLy8gUGFkZGluZ1xyXG5cclxuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MoaXNvV2Vla1llYXIsIHRva2VuLmxlbmd0aCk7XHJcbiAgfSxcclxuICAvLyBFeHRlbmRlZCB5ZWFyLiBUaGlzIGlzIGEgc2luZ2xlIG51bWJlciBkZXNpZ25hdGluZyB0aGUgeWVhciBvZiB0aGlzIGNhbGVuZGFyIHN5c3RlbS5cclxuICAvLyBUaGUgbWFpbiBkaWZmZXJlbmNlIGJldHdlZW4gYHlgIGFuZCBgdWAgbG9jYWxpemVycyBhcmUgQi5DLiB5ZWFyczpcclxuICAvLyB8IFllYXIgfCBgeWAgfCBgdWAgfFxyXG4gIC8vIHwtLS0tLS18LS0tLS18LS0tLS18XHJcbiAgLy8gfCBBQyAxIHwgICAxIHwgICAxIHxcclxuICAvLyB8IEJDIDEgfCAgIDEgfCAgIDAgfFxyXG4gIC8vIHwgQkMgMiB8ICAgMiB8ICAtMSB8XHJcbiAgLy8gQWxzbyBgeXlgIGFsd2F5cyByZXR1cm5zIHRoZSBsYXN0IHR3byBkaWdpdHMgb2YgYSB5ZWFyLFxyXG4gIC8vIHdoaWxlIGB1dWAgcGFkcyBzaW5nbGUgZGlnaXQgeWVhcnMgdG8gMiBjaGFyYWN0ZXJzIGFuZCByZXR1cm5zIG90aGVyIHllYXJzIHVuY2hhbmdlZC5cclxuICB1OiBmdW5jdGlvbiB1KGRhdGUsIHRva2VuKSB7XHJcbiAgICB2YXIgeWVhciA9IGRhdGUuZ2V0VVRDRnVsbFllYXIoKTtcclxuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MoeWVhciwgdG9rZW4ubGVuZ3RoKTtcclxuICB9LFxyXG4gIC8vIFF1YXJ0ZXJcclxuICBROiBmdW5jdGlvbiBRKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xyXG4gICAgdmFyIHF1YXJ0ZXIgPSBNYXRoLmNlaWwoKGRhdGUuZ2V0VVRDTW9udGgoKSArIDEpIC8gMyk7XHJcblxyXG4gICAgc3dpdGNoICh0b2tlbikge1xyXG4gICAgICAvLyAxLCAyLCAzLCA0XHJcbiAgICAgIGNhc2UgJ1EnOlxyXG4gICAgICAgIHJldHVybiBTdHJpbmcocXVhcnRlcik7XHJcbiAgICAgIC8vIDAxLCAwMiwgMDMsIDA0XHJcblxyXG4gICAgICBjYXNlICdRUSc6XHJcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhxdWFydGVyLCAyKTtcclxuICAgICAgLy8gMXN0LCAybmQsIDNyZCwgNHRoXHJcblxyXG4gICAgICBjYXNlICdRbyc6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIocXVhcnRlciwge1xyXG4gICAgICAgICAgdW5pdDogJ3F1YXJ0ZXInXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIC8vIFExLCBRMiwgUTMsIFE0XHJcblxyXG4gICAgICBjYXNlICdRUVEnOlxyXG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5xdWFydGVyKHF1YXJ0ZXIsIHtcclxuICAgICAgICAgIHdpZHRoOiAnYWJicmV2aWF0ZWQnLFxyXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIC8vIDEsIDIsIDMsIDQgKG5hcnJvdyBxdWFydGVyOyBjb3VsZCBiZSBub3QgbnVtZXJpY2FsKVxyXG5cclxuICAgICAgY2FzZSAnUVFRUVEnOlxyXG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5xdWFydGVyKHF1YXJ0ZXIsIHtcclxuICAgICAgICAgIHdpZHRoOiAnbmFycm93JyxcclxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAvLyAxc3QgcXVhcnRlciwgMm5kIHF1YXJ0ZXIsIC4uLlxyXG5cclxuICAgICAgY2FzZSAnUVFRUSc6XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLnF1YXJ0ZXIocXVhcnRlciwge1xyXG4gICAgICAgICAgd2lkdGg6ICd3aWRlJyxcclxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgLy8gU3RhbmQtYWxvbmUgcXVhcnRlclxyXG4gIHE6IGZ1bmN0aW9uIHEoZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XHJcbiAgICB2YXIgcXVhcnRlciA9IE1hdGguY2VpbCgoZGF0ZS5nZXRVVENNb250aCgpICsgMSkgLyAzKTtcclxuXHJcbiAgICBzd2l0Y2ggKHRva2VuKSB7XHJcbiAgICAgIC8vIDEsIDIsIDMsIDRcclxuICAgICAgY2FzZSAncSc6XHJcbiAgICAgICAgcmV0dXJuIFN0cmluZyhxdWFydGVyKTtcclxuICAgICAgLy8gMDEsIDAyLCAwMywgMDRcclxuXHJcbiAgICAgIGNhc2UgJ3FxJzpcclxuICAgICAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKHF1YXJ0ZXIsIDIpO1xyXG4gICAgICAvLyAxc3QsIDJuZCwgM3JkLCA0dGhcclxuXHJcbiAgICAgIGNhc2UgJ3FvJzpcclxuICAgICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihxdWFydGVyLCB7XHJcbiAgICAgICAgICB1bml0OiAncXVhcnRlcidcclxuICAgICAgICB9KTtcclxuICAgICAgLy8gUTEsIFEyLCBRMywgUTRcclxuXHJcbiAgICAgIGNhc2UgJ3FxcSc6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLnF1YXJ0ZXIocXVhcnRlciwge1xyXG4gICAgICAgICAgd2lkdGg6ICdhYmJyZXZpYXRlZCcsXHJcbiAgICAgICAgICBjb250ZXh0OiAnc3RhbmRhbG9uZSdcclxuICAgICAgICB9KTtcclxuICAgICAgLy8gMSwgMiwgMywgNCAobmFycm93IHF1YXJ0ZXI7IGNvdWxkIGJlIG5vdCBudW1lcmljYWwpXHJcblxyXG4gICAgICBjYXNlICdxcXFxcSc6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLnF1YXJ0ZXIocXVhcnRlciwge1xyXG4gICAgICAgICAgd2lkdGg6ICduYXJyb3cnLFxyXG4gICAgICAgICAgY29udGV4dDogJ3N0YW5kYWxvbmUnXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIC8vIDFzdCBxdWFydGVyLCAybmQgcXVhcnRlciwgLi4uXHJcblxyXG4gICAgICBjYXNlICdxcXFxJzpcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICByZXR1cm4gbG9jYWxpemUucXVhcnRlcihxdWFydGVyLCB7XHJcbiAgICAgICAgICB3aWR0aDogJ3dpZGUnLFxyXG4gICAgICAgICAgY29udGV4dDogJ3N0YW5kYWxvbmUnXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfSxcclxuICAvLyBNb250aFxyXG4gIE06IGZ1bmN0aW9uIE0oZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XHJcbiAgICB2YXIgbW9udGggPSBkYXRlLmdldFVUQ01vbnRoKCk7XHJcblxyXG4gICAgc3dpdGNoICh0b2tlbikge1xyXG4gICAgICBjYXNlICdNJzpcclxuICAgICAgY2FzZSAnTU0nOlxyXG4gICAgICAgIHJldHVybiBsaWdodEZvcm1hdHRlcnMuTShkYXRlLCB0b2tlbik7XHJcbiAgICAgIC8vIDFzdCwgMm5kLCAuLi4sIDEydGhcclxuXHJcbiAgICAgIGNhc2UgJ01vJzpcclxuICAgICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihtb250aCArIDEsIHtcclxuICAgICAgICAgIHVuaXQ6ICdtb250aCdcclxuICAgICAgICB9KTtcclxuICAgICAgLy8gSmFuLCBGZWIsIC4uLiwgRGVjXHJcblxyXG4gICAgICBjYXNlICdNTU0nOlxyXG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5tb250aChtb250aCwge1xyXG4gICAgICAgICAgd2lkdGg6ICdhYmJyZXZpYXRlZCcsXHJcbiAgICAgICAgICBjb250ZXh0OiAnZm9ybWF0dGluZydcclxuICAgICAgICB9KTtcclxuICAgICAgLy8gSiwgRiwgLi4uLCBEXHJcblxyXG4gICAgICBjYXNlICdNTU1NTSc6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLm1vbnRoKG1vbnRoLCB7XHJcbiAgICAgICAgICB3aWR0aDogJ25hcnJvdycsXHJcbiAgICAgICAgICBjb250ZXh0OiAnZm9ybWF0dGluZydcclxuICAgICAgICB9KTtcclxuICAgICAgLy8gSmFudWFyeSwgRmVicnVhcnksIC4uLiwgRGVjZW1iZXJcclxuXHJcbiAgICAgIGNhc2UgJ01NTU0nOlxyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5tb250aChtb250aCwge1xyXG4gICAgICAgICAgd2lkdGg6ICd3aWRlJyxcclxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgLy8gU3RhbmQtYWxvbmUgbW9udGhcclxuICBMOiBmdW5jdGlvbiBMKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xyXG4gICAgdmFyIG1vbnRoID0gZGF0ZS5nZXRVVENNb250aCgpO1xyXG5cclxuICAgIHN3aXRjaCAodG9rZW4pIHtcclxuICAgICAgLy8gMSwgMiwgLi4uLCAxMlxyXG4gICAgICBjYXNlICdMJzpcclxuICAgICAgICByZXR1cm4gU3RyaW5nKG1vbnRoICsgMSk7XHJcbiAgICAgIC8vIDAxLCAwMiwgLi4uLCAxMlxyXG5cclxuICAgICAgY2FzZSAnTEwnOlxyXG4gICAgICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MobW9udGggKyAxLCAyKTtcclxuICAgICAgLy8gMXN0LCAybmQsIC4uLiwgMTJ0aFxyXG5cclxuICAgICAgY2FzZSAnTG8nOlxyXG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5vcmRpbmFsTnVtYmVyKG1vbnRoICsgMSwge1xyXG4gICAgICAgICAgdW5pdDogJ21vbnRoJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAvLyBKYW4sIEZlYiwgLi4uLCBEZWNcclxuXHJcbiAgICAgIGNhc2UgJ0xMTCc6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLm1vbnRoKG1vbnRoLCB7XHJcbiAgICAgICAgICB3aWR0aDogJ2FiYnJldmlhdGVkJyxcclxuICAgICAgICAgIGNvbnRleHQ6ICdzdGFuZGFsb25lJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAvLyBKLCBGLCAuLi4sIERcclxuXHJcbiAgICAgIGNhc2UgJ0xMTExMJzpcclxuICAgICAgICByZXR1cm4gbG9jYWxpemUubW9udGgobW9udGgsIHtcclxuICAgICAgICAgIHdpZHRoOiAnbmFycm93JyxcclxuICAgICAgICAgIGNvbnRleHQ6ICdzdGFuZGFsb25lJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAvLyBKYW51YXJ5LCBGZWJydWFyeSwgLi4uLCBEZWNlbWJlclxyXG5cclxuICAgICAgY2FzZSAnTExMTCc6XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLm1vbnRoKG1vbnRoLCB7XHJcbiAgICAgICAgICB3aWR0aDogJ3dpZGUnLFxyXG4gICAgICAgICAgY29udGV4dDogJ3N0YW5kYWxvbmUnXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfSxcclxuICAvLyBMb2NhbCB3ZWVrIG9mIHllYXJcclxuICB3OiBmdW5jdGlvbiB3KGRhdGUsIHRva2VuLCBsb2NhbGl6ZSwgb3B0aW9ucykge1xyXG4gICAgdmFyIHdlZWsgPSBnZXRVVENXZWVrKGRhdGUsIG9wdGlvbnMpO1xyXG5cclxuICAgIGlmICh0b2tlbiA9PT0gJ3dvJykge1xyXG4gICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcih3ZWVrLCB7XHJcbiAgICAgICAgdW5pdDogJ3dlZWsnXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3Mod2VlaywgdG9rZW4ubGVuZ3RoKTtcclxuICB9LFxyXG4gIC8vIElTTyB3ZWVrIG9mIHllYXJcclxuICBJOiBmdW5jdGlvbiBJKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xyXG4gICAgdmFyIGlzb1dlZWsgPSBnZXRVVENJU09XZWVrKGRhdGUpO1xyXG5cclxuICAgIGlmICh0b2tlbiA9PT0gJ0lvJykge1xyXG4gICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihpc29XZWVrLCB7XHJcbiAgICAgICAgdW5pdDogJ3dlZWsnXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MoaXNvV2VlaywgdG9rZW4ubGVuZ3RoKTtcclxuICB9LFxyXG4gIC8vIERheSBvZiB0aGUgbW9udGhcclxuICBkOiBmdW5jdGlvbiBkKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xyXG4gICAgaWYgKHRva2VuID09PSAnZG8nKSB7XHJcbiAgICAgIHJldHVybiBsb2NhbGl6ZS5vcmRpbmFsTnVtYmVyKGRhdGUuZ2V0VVRDRGF0ZSgpLCB7XHJcbiAgICAgICAgdW5pdDogJ2RhdGUnXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBsaWdodEZvcm1hdHRlcnMuZChkYXRlLCB0b2tlbik7XHJcbiAgfSxcclxuICAvLyBEYXkgb2YgeWVhclxyXG4gIEQ6IGZ1bmN0aW9uIEQoZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XHJcbiAgICB2YXIgZGF5T2ZZZWFyID0gZ2V0VVRDRGF5T2ZZZWFyKGRhdGUpO1xyXG5cclxuICAgIGlmICh0b2tlbiA9PT0gJ0RvJykge1xyXG4gICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihkYXlPZlllYXIsIHtcclxuICAgICAgICB1bml0OiAnZGF5T2ZZZWFyJ1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKGRheU9mWWVhciwgdG9rZW4ubGVuZ3RoKTtcclxuICB9LFxyXG4gIC8vIERheSBvZiB3ZWVrXHJcbiAgRTogZnVuY3Rpb24gRShkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcclxuICAgIHZhciBkYXlPZldlZWsgPSBkYXRlLmdldFVUQ0RheSgpO1xyXG5cclxuICAgIHN3aXRjaCAodG9rZW4pIHtcclxuICAgICAgLy8gVHVlXHJcbiAgICAgIGNhc2UgJ0UnOlxyXG4gICAgICBjYXNlICdFRSc6XHJcbiAgICAgIGNhc2UgJ0VFRSc6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheShkYXlPZldlZWssIHtcclxuICAgICAgICAgIHdpZHRoOiAnYWJicmV2aWF0ZWQnLFxyXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIC8vIFRcclxuXHJcbiAgICAgIGNhc2UgJ0VFRUVFJzpcclxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5KGRheU9mV2Vlaywge1xyXG4gICAgICAgICAgd2lkdGg6ICduYXJyb3cnLFxyXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIC8vIFR1XHJcblxyXG4gICAgICBjYXNlICdFRUVFRUUnOlxyXG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XHJcbiAgICAgICAgICB3aWR0aDogJ3Nob3J0JyxcclxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAvLyBUdWVzZGF5XHJcblxyXG4gICAgICBjYXNlICdFRUVFJzpcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5KGRheU9mV2Vlaywge1xyXG4gICAgICAgICAgd2lkdGg6ICd3aWRlJyxcclxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgLy8gTG9jYWwgZGF5IG9mIHdlZWtcclxuICBlOiBmdW5jdGlvbiBlKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSwgb3B0aW9ucykge1xyXG4gICAgdmFyIGRheU9mV2VlayA9IGRhdGUuZ2V0VVRDRGF5KCk7XHJcbiAgICB2YXIgbG9jYWxEYXlPZldlZWsgPSAoZGF5T2ZXZWVrIC0gb3B0aW9ucy53ZWVrU3RhcnRzT24gKyA4KSAlIDcgfHwgNztcclxuXHJcbiAgICBzd2l0Y2ggKHRva2VuKSB7XHJcbiAgICAgIC8vIE51bWVyaWNhbCB2YWx1ZSAoTnRoIGRheSBvZiB3ZWVrIHdpdGggY3VycmVudCBsb2NhbGUgb3Igd2Vla1N0YXJ0c09uKVxyXG4gICAgICBjYXNlICdlJzpcclxuICAgICAgICByZXR1cm4gU3RyaW5nKGxvY2FsRGF5T2ZXZWVrKTtcclxuICAgICAgLy8gUGFkZGVkIG51bWVyaWNhbCB2YWx1ZVxyXG5cclxuICAgICAgY2FzZSAnZWUnOlxyXG4gICAgICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MobG9jYWxEYXlPZldlZWssIDIpO1xyXG4gICAgICAvLyAxc3QsIDJuZCwgLi4uLCA3dGhcclxuXHJcbiAgICAgIGNhc2UgJ2VvJzpcclxuICAgICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihsb2NhbERheU9mV2Vlaywge1xyXG4gICAgICAgICAgdW5pdDogJ2RheSdcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgIGNhc2UgJ2VlZSc6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheShkYXlPZldlZWssIHtcclxuICAgICAgICAgIHdpZHRoOiAnYWJicmV2aWF0ZWQnLFxyXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIC8vIFRcclxuXHJcbiAgICAgIGNhc2UgJ2VlZWVlJzpcclxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5KGRheU9mV2Vlaywge1xyXG4gICAgICAgICAgd2lkdGg6ICduYXJyb3cnLFxyXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIC8vIFR1XHJcblxyXG4gICAgICBjYXNlICdlZWVlZWUnOlxyXG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XHJcbiAgICAgICAgICB3aWR0aDogJ3Nob3J0JyxcclxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAvLyBUdWVzZGF5XHJcblxyXG4gICAgICBjYXNlICdlZWVlJzpcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5KGRheU9mV2Vlaywge1xyXG4gICAgICAgICAgd2lkdGg6ICd3aWRlJyxcclxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgLy8gU3RhbmQtYWxvbmUgbG9jYWwgZGF5IG9mIHdlZWtcclxuICBjOiBmdW5jdGlvbiBjKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSwgb3B0aW9ucykge1xyXG4gICAgdmFyIGRheU9mV2VlayA9IGRhdGUuZ2V0VVRDRGF5KCk7XHJcbiAgICB2YXIgbG9jYWxEYXlPZldlZWsgPSAoZGF5T2ZXZWVrIC0gb3B0aW9ucy53ZWVrU3RhcnRzT24gKyA4KSAlIDcgfHwgNztcclxuXHJcbiAgICBzd2l0Y2ggKHRva2VuKSB7XHJcbiAgICAgIC8vIE51bWVyaWNhbCB2YWx1ZSAoc2FtZSBhcyBpbiBgZWApXHJcbiAgICAgIGNhc2UgJ2MnOlxyXG4gICAgICAgIHJldHVybiBTdHJpbmcobG9jYWxEYXlPZldlZWspO1xyXG4gICAgICAvLyBQYWRkZWQgbnVtZXJpY2FsIHZhbHVlXHJcblxyXG4gICAgICBjYXNlICdjYyc6XHJcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhsb2NhbERheU9mV2VlaywgdG9rZW4ubGVuZ3RoKTtcclxuICAgICAgLy8gMXN0LCAybmQsIC4uLiwgN3RoXHJcblxyXG4gICAgICBjYXNlICdjbyc6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIobG9jYWxEYXlPZldlZWssIHtcclxuICAgICAgICAgIHVuaXQ6ICdkYXknXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICBjYXNlICdjY2MnOlxyXG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XHJcbiAgICAgICAgICB3aWR0aDogJ2FiYnJldmlhdGVkJyxcclxuICAgICAgICAgIGNvbnRleHQ6ICdzdGFuZGFsb25lJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAvLyBUXHJcblxyXG4gICAgICBjYXNlICdjY2NjYyc6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheShkYXlPZldlZWssIHtcclxuICAgICAgICAgIHdpZHRoOiAnbmFycm93JyxcclxuICAgICAgICAgIGNvbnRleHQ6ICdzdGFuZGFsb25lJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAvLyBUdVxyXG5cclxuICAgICAgY2FzZSAnY2NjY2NjJzpcclxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5KGRheU9mV2Vlaywge1xyXG4gICAgICAgICAgd2lkdGg6ICdzaG9ydCcsXHJcbiAgICAgICAgICBjb250ZXh0OiAnc3RhbmRhbG9uZSdcclxuICAgICAgICB9KTtcclxuICAgICAgLy8gVHVlc2RheVxyXG5cclxuICAgICAgY2FzZSAnY2NjYyc6XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheShkYXlPZldlZWssIHtcclxuICAgICAgICAgIHdpZHRoOiAnd2lkZScsXHJcbiAgICAgICAgICBjb250ZXh0OiAnc3RhbmRhbG9uZSdcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICB9LFxyXG4gIC8vIElTTyBkYXkgb2Ygd2Vla1xyXG4gIGk6IGZ1bmN0aW9uIGkoZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XHJcbiAgICB2YXIgZGF5T2ZXZWVrID0gZGF0ZS5nZXRVVENEYXkoKTtcclxuICAgIHZhciBpc29EYXlPZldlZWsgPSBkYXlPZldlZWsgPT09IDAgPyA3IDogZGF5T2ZXZWVrO1xyXG5cclxuICAgIHN3aXRjaCAodG9rZW4pIHtcclxuICAgICAgLy8gMlxyXG4gICAgICBjYXNlICdpJzpcclxuICAgICAgICByZXR1cm4gU3RyaW5nKGlzb0RheU9mV2Vlayk7XHJcbiAgICAgIC8vIDAyXHJcblxyXG4gICAgICBjYXNlICdpaSc6XHJcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhpc29EYXlPZldlZWssIHRva2VuLmxlbmd0aCk7XHJcbiAgICAgIC8vIDJuZFxyXG5cclxuICAgICAgY2FzZSAnaW8nOlxyXG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5vcmRpbmFsTnVtYmVyKGlzb0RheU9mV2Vlaywge1xyXG4gICAgICAgICAgdW5pdDogJ2RheSdcclxuICAgICAgICB9KTtcclxuICAgICAgLy8gVHVlXHJcblxyXG4gICAgICBjYXNlICdpaWknOlxyXG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XHJcbiAgICAgICAgICB3aWR0aDogJ2FiYnJldmlhdGVkJyxcclxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAvLyBUXHJcblxyXG4gICAgICBjYXNlICdpaWlpaSc6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheShkYXlPZldlZWssIHtcclxuICAgICAgICAgIHdpZHRoOiAnbmFycm93JyxcclxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAvLyBUdVxyXG5cclxuICAgICAgY2FzZSAnaWlpaWlpJzpcclxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5KGRheU9mV2Vlaywge1xyXG4gICAgICAgICAgd2lkdGg6ICdzaG9ydCcsXHJcbiAgICAgICAgICBjb250ZXh0OiAnZm9ybWF0dGluZydcclxuICAgICAgICB9KTtcclxuICAgICAgLy8gVHVlc2RheVxyXG5cclxuICAgICAgY2FzZSAnaWlpaSc6XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheShkYXlPZldlZWssIHtcclxuICAgICAgICAgIHdpZHRoOiAnd2lkZScsXHJcbiAgICAgICAgICBjb250ZXh0OiAnZm9ybWF0dGluZydcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICB9LFxyXG4gIC8vIEFNIG9yIFBNXHJcbiAgYTogZnVuY3Rpb24gYShkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcclxuICAgIHZhciBob3VycyA9IGRhdGUuZ2V0VVRDSG91cnMoKTtcclxuICAgIHZhciBkYXlQZXJpb2RFbnVtVmFsdWUgPSBob3VycyAvIDEyID49IDEgPyAncG0nIDogJ2FtJztcclxuXHJcbiAgICBzd2l0Y2ggKHRva2VuKSB7XHJcbiAgICAgIGNhc2UgJ2EnOlxyXG4gICAgICBjYXNlICdhYSc6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheVBlcmlvZChkYXlQZXJpb2RFbnVtVmFsdWUsIHtcclxuICAgICAgICAgIHdpZHRoOiAnYWJicmV2aWF0ZWQnLFxyXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICBjYXNlICdhYWEnOlxyXG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXlQZXJpb2QoZGF5UGVyaW9kRW51bVZhbHVlLCB7XHJcbiAgICAgICAgICB3aWR0aDogJ2FiYnJldmlhdGVkJyxcclxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xyXG4gICAgICAgIH0pLnRvTG93ZXJDYXNlKCk7XHJcblxyXG4gICAgICBjYXNlICdhYWFhYSc6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheVBlcmlvZChkYXlQZXJpb2RFbnVtVmFsdWUsIHtcclxuICAgICAgICAgIHdpZHRoOiAnbmFycm93JyxcclxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgY2FzZSAnYWFhYSc6XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheVBlcmlvZChkYXlQZXJpb2RFbnVtVmFsdWUsIHtcclxuICAgICAgICAgIHdpZHRoOiAnd2lkZScsXHJcbiAgICAgICAgICBjb250ZXh0OiAnZm9ybWF0dGluZydcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICB9LFxyXG4gIC8vIEFNLCBQTSwgbWlkbmlnaHQsIG5vb25cclxuICBiOiBmdW5jdGlvbiBiKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xyXG4gICAgdmFyIGhvdXJzID0gZGF0ZS5nZXRVVENIb3VycygpO1xyXG4gICAgdmFyIGRheVBlcmlvZEVudW1WYWx1ZTtcclxuXHJcbiAgICBpZiAoaG91cnMgPT09IDEyKSB7XHJcbiAgICAgIGRheVBlcmlvZEVudW1WYWx1ZSA9IGRheVBlcmlvZEVudW0ubm9vbjtcclxuICAgIH0gZWxzZSBpZiAoaG91cnMgPT09IDApIHtcclxuICAgICAgZGF5UGVyaW9kRW51bVZhbHVlID0gZGF5UGVyaW9kRW51bS5taWRuaWdodDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGRheVBlcmlvZEVudW1WYWx1ZSA9IGhvdXJzIC8gMTIgPj0gMSA/ICdwbScgOiAnYW0nO1xyXG4gICAgfVxyXG5cclxuICAgIHN3aXRjaCAodG9rZW4pIHtcclxuICAgICAgY2FzZSAnYic6XHJcbiAgICAgIGNhc2UgJ2JiJzpcclxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5UGVyaW9kKGRheVBlcmlvZEVudW1WYWx1ZSwge1xyXG4gICAgICAgICAgd2lkdGg6ICdhYmJyZXZpYXRlZCcsXHJcbiAgICAgICAgICBjb250ZXh0OiAnZm9ybWF0dGluZydcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgIGNhc2UgJ2JiYic6XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheVBlcmlvZChkYXlQZXJpb2RFbnVtVmFsdWUsIHtcclxuICAgICAgICAgIHdpZHRoOiAnYWJicmV2aWF0ZWQnLFxyXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXHJcbiAgICAgICAgfSkudG9Mb3dlckNhc2UoKTtcclxuXHJcbiAgICAgIGNhc2UgJ2JiYmJiJzpcclxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5UGVyaW9kKGRheVBlcmlvZEVudW1WYWx1ZSwge1xyXG4gICAgICAgICAgd2lkdGg6ICduYXJyb3cnLFxyXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICBjYXNlICdiYmJiJzpcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5UGVyaW9kKGRheVBlcmlvZEVudW1WYWx1ZSwge1xyXG4gICAgICAgICAgd2lkdGg6ICd3aWRlJyxcclxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgLy8gaW4gdGhlIG1vcm5pbmcsIGluIHRoZSBhZnRlcm5vb24sIGluIHRoZSBldmVuaW5nLCBhdCBuaWdodFxyXG4gIEI6IGZ1bmN0aW9uIEIoZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XHJcbiAgICB2YXIgaG91cnMgPSBkYXRlLmdldFVUQ0hvdXJzKCk7XHJcbiAgICB2YXIgZGF5UGVyaW9kRW51bVZhbHVlO1xyXG5cclxuICAgIGlmIChob3VycyA+PSAxNykge1xyXG4gICAgICBkYXlQZXJpb2RFbnVtVmFsdWUgPSBkYXlQZXJpb2RFbnVtLmV2ZW5pbmc7XHJcbiAgICB9IGVsc2UgaWYgKGhvdXJzID49IDEyKSB7XHJcbiAgICAgIGRheVBlcmlvZEVudW1WYWx1ZSA9IGRheVBlcmlvZEVudW0uYWZ0ZXJub29uO1xyXG4gICAgfSBlbHNlIGlmIChob3VycyA+PSA0KSB7XHJcbiAgICAgIGRheVBlcmlvZEVudW1WYWx1ZSA9IGRheVBlcmlvZEVudW0ubW9ybmluZztcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGRheVBlcmlvZEVudW1WYWx1ZSA9IGRheVBlcmlvZEVudW0ubmlnaHQ7XHJcbiAgICB9XHJcblxyXG4gICAgc3dpdGNoICh0b2tlbikge1xyXG4gICAgICBjYXNlICdCJzpcclxuICAgICAgY2FzZSAnQkInOlxyXG4gICAgICBjYXNlICdCQkInOlxyXG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXlQZXJpb2QoZGF5UGVyaW9kRW51bVZhbHVlLCB7XHJcbiAgICAgICAgICB3aWR0aDogJ2FiYnJldmlhdGVkJyxcclxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgY2FzZSAnQkJCQkInOlxyXG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXlQZXJpb2QoZGF5UGVyaW9kRW51bVZhbHVlLCB7XHJcbiAgICAgICAgICB3aWR0aDogJ25hcnJvdycsXHJcbiAgICAgICAgICBjb250ZXh0OiAnZm9ybWF0dGluZydcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgIGNhc2UgJ0JCQkInOlxyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXlQZXJpb2QoZGF5UGVyaW9kRW51bVZhbHVlLCB7XHJcbiAgICAgICAgICB3aWR0aDogJ3dpZGUnLFxyXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfSxcclxuICAvLyBIb3VyIFsxLTEyXVxyXG4gIGg6IGZ1bmN0aW9uIGgoZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XHJcbiAgICBpZiAodG9rZW4gPT09ICdobycpIHtcclxuICAgICAgdmFyIGhvdXJzID0gZGF0ZS5nZXRVVENIb3VycygpICUgMTI7XHJcbiAgICAgIGlmIChob3VycyA9PT0gMCkgaG91cnMgPSAxMjtcclxuICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIoaG91cnMsIHtcclxuICAgICAgICB1bml0OiAnaG91cidcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGxpZ2h0Rm9ybWF0dGVycy5oKGRhdGUsIHRva2VuKTtcclxuICB9LFxyXG4gIC8vIEhvdXIgWzAtMjNdXHJcbiAgSDogZnVuY3Rpb24gSChkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcclxuICAgIGlmICh0b2tlbiA9PT0gJ0hvJykge1xyXG4gICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihkYXRlLmdldFVUQ0hvdXJzKCksIHtcclxuICAgICAgICB1bml0OiAnaG91cidcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGxpZ2h0Rm9ybWF0dGVycy5IKGRhdGUsIHRva2VuKTtcclxuICB9LFxyXG4gIC8vIEhvdXIgWzAtMTFdXHJcbiAgSzogZnVuY3Rpb24gSyhkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcclxuICAgIHZhciBob3VycyA9IGRhdGUuZ2V0VVRDSG91cnMoKSAlIDEyO1xyXG5cclxuICAgIGlmICh0b2tlbiA9PT0gJ0tvJykge1xyXG4gICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihob3Vycywge1xyXG4gICAgICAgIHVuaXQ6ICdob3VyJ1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKGhvdXJzLCB0b2tlbi5sZW5ndGgpO1xyXG4gIH0sXHJcbiAgLy8gSG91ciBbMS0yNF1cclxuICBrOiBmdW5jdGlvbiBrKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xyXG4gICAgdmFyIGhvdXJzID0gZGF0ZS5nZXRVVENIb3VycygpO1xyXG4gICAgaWYgKGhvdXJzID09PSAwKSBob3VycyA9IDI0O1xyXG5cclxuICAgIGlmICh0b2tlbiA9PT0gJ2tvJykge1xyXG4gICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihob3Vycywge1xyXG4gICAgICAgIHVuaXQ6ICdob3VyJ1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKGhvdXJzLCB0b2tlbi5sZW5ndGgpO1xyXG4gIH0sXHJcbiAgLy8gTWludXRlXHJcbiAgbTogZnVuY3Rpb24gbShkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcclxuICAgIGlmICh0b2tlbiA9PT0gJ21vJykge1xyXG4gICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihkYXRlLmdldFVUQ01pbnV0ZXMoKSwge1xyXG4gICAgICAgIHVuaXQ6ICdtaW51dGUnXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBsaWdodEZvcm1hdHRlcnMubShkYXRlLCB0b2tlbik7XHJcbiAgfSxcclxuICAvLyBTZWNvbmRcclxuICBzOiBmdW5jdGlvbiBzKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xyXG4gICAgaWYgKHRva2VuID09PSAnc28nKSB7XHJcbiAgICAgIHJldHVybiBsb2NhbGl6ZS5vcmRpbmFsTnVtYmVyKGRhdGUuZ2V0VVRDU2Vjb25kcygpLCB7XHJcbiAgICAgICAgdW5pdDogJ3NlY29uZCdcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGxpZ2h0Rm9ybWF0dGVycy5zKGRhdGUsIHRva2VuKTtcclxuICB9LFxyXG4gIC8vIEZyYWN0aW9uIG9mIHNlY29uZFxyXG4gIFM6IGZ1bmN0aW9uIFMoZGF0ZSwgdG9rZW4pIHtcclxuICAgIHJldHVybiBsaWdodEZvcm1hdHRlcnMuUyhkYXRlLCB0b2tlbik7XHJcbiAgfSxcclxuICAvLyBUaW1lem9uZSAoSVNPLTg2MDEuIElmIG9mZnNldCBpcyAwLCBvdXRwdXQgaXMgYWx3YXlzIGAnWidgKVxyXG4gIFg6IGZ1bmN0aW9uIFgoZGF0ZSwgdG9rZW4sIF9sb2NhbGl6ZSwgb3B0aW9ucykge1xyXG4gICAgdmFyIG9yaWdpbmFsRGF0ZSA9IG9wdGlvbnMuX29yaWdpbmFsRGF0ZSB8fCBkYXRlO1xyXG4gICAgdmFyIHRpbWV6b25lT2Zmc2V0ID0gb3JpZ2luYWxEYXRlLmdldFRpbWV6b25lT2Zmc2V0KCk7XHJcblxyXG4gICAgaWYgKHRpbWV6b25lT2Zmc2V0ID09PSAwKSB7XHJcbiAgICAgIHJldHVybiAnWic7XHJcbiAgICB9XHJcblxyXG4gICAgc3dpdGNoICh0b2tlbikge1xyXG4gICAgICAvLyBIb3VycyBhbmQgb3B0aW9uYWwgbWludXRlc1xyXG4gICAgICBjYXNlICdYJzpcclxuICAgICAgICByZXR1cm4gZm9ybWF0VGltZXpvbmVXaXRoT3B0aW9uYWxNaW51dGVzKHRpbWV6b25lT2Zmc2V0KTtcclxuICAgICAgLy8gSG91cnMsIG1pbnV0ZXMgYW5kIG9wdGlvbmFsIHNlY29uZHMgd2l0aG91dCBgOmAgZGVsaW1pdGVyXHJcbiAgICAgIC8vIE5vdGU6IG5laXRoZXIgSVNPLTg2MDEgbm9yIEphdmFTY3JpcHQgc3VwcG9ydHMgc2Vjb25kcyBpbiB0aW1lem9uZSBvZmZzZXRzXHJcbiAgICAgIC8vIHNvIHRoaXMgdG9rZW4gYWx3YXlzIGhhcyB0aGUgc2FtZSBvdXRwdXQgYXMgYFhYYFxyXG5cclxuICAgICAgY2FzZSAnWFhYWCc6XHJcbiAgICAgIGNhc2UgJ1hYJzpcclxuICAgICAgICAvLyBIb3VycyBhbmQgbWludXRlcyB3aXRob3V0IGA6YCBkZWxpbWl0ZXJcclxuICAgICAgICByZXR1cm4gZm9ybWF0VGltZXpvbmUodGltZXpvbmVPZmZzZXQpO1xyXG4gICAgICAvLyBIb3VycywgbWludXRlcyBhbmQgb3B0aW9uYWwgc2Vjb25kcyB3aXRoIGA6YCBkZWxpbWl0ZXJcclxuICAgICAgLy8gTm90ZTogbmVpdGhlciBJU08tODYwMSBub3IgSmF2YVNjcmlwdCBzdXBwb3J0cyBzZWNvbmRzIGluIHRpbWV6b25lIG9mZnNldHNcclxuICAgICAgLy8gc28gdGhpcyB0b2tlbiBhbHdheXMgaGFzIHRoZSBzYW1lIG91dHB1dCBhcyBgWFhYYFxyXG5cclxuICAgICAgY2FzZSAnWFhYWFgnOlxyXG4gICAgICBjYXNlICdYWFgnOiAvLyBIb3VycyBhbmQgbWludXRlcyB3aXRoIGA6YCBkZWxpbWl0ZXJcclxuXHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgcmV0dXJuIGZvcm1hdFRpbWV6b25lKHRpbWV6b25lT2Zmc2V0LCAnOicpO1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgLy8gVGltZXpvbmUgKElTTy04NjAxLiBJZiBvZmZzZXQgaXMgMCwgb3V0cHV0IGlzIGAnKzAwOjAwJ2Agb3IgZXF1aXZhbGVudClcclxuICB4OiBmdW5jdGlvbiB4KGRhdGUsIHRva2VuLCBfbG9jYWxpemUsIG9wdGlvbnMpIHtcclxuICAgIHZhciBvcmlnaW5hbERhdGUgPSBvcHRpb25zLl9vcmlnaW5hbERhdGUgfHwgZGF0ZTtcclxuICAgIHZhciB0aW1lem9uZU9mZnNldCA9IG9yaWdpbmFsRGF0ZS5nZXRUaW1lem9uZU9mZnNldCgpO1xyXG5cclxuICAgIHN3aXRjaCAodG9rZW4pIHtcclxuICAgICAgLy8gSG91cnMgYW5kIG9wdGlvbmFsIG1pbnV0ZXNcclxuICAgICAgY2FzZSAneCc6XHJcbiAgICAgICAgcmV0dXJuIGZvcm1hdFRpbWV6b25lV2l0aE9wdGlvbmFsTWludXRlcyh0aW1lem9uZU9mZnNldCk7XHJcbiAgICAgIC8vIEhvdXJzLCBtaW51dGVzIGFuZCBvcHRpb25hbCBzZWNvbmRzIHdpdGhvdXQgYDpgIGRlbGltaXRlclxyXG4gICAgICAvLyBOb3RlOiBuZWl0aGVyIElTTy04NjAxIG5vciBKYXZhU2NyaXB0IHN1cHBvcnRzIHNlY29uZHMgaW4gdGltZXpvbmUgb2Zmc2V0c1xyXG4gICAgICAvLyBzbyB0aGlzIHRva2VuIGFsd2F5cyBoYXMgdGhlIHNhbWUgb3V0cHV0IGFzIGB4eGBcclxuXHJcbiAgICAgIGNhc2UgJ3h4eHgnOlxyXG4gICAgICBjYXNlICd4eCc6XHJcbiAgICAgICAgLy8gSG91cnMgYW5kIG1pbnV0ZXMgd2l0aG91dCBgOmAgZGVsaW1pdGVyXHJcbiAgICAgICAgcmV0dXJuIGZvcm1hdFRpbWV6b25lKHRpbWV6b25lT2Zmc2V0KTtcclxuICAgICAgLy8gSG91cnMsIG1pbnV0ZXMgYW5kIG9wdGlvbmFsIHNlY29uZHMgd2l0aCBgOmAgZGVsaW1pdGVyXHJcbiAgICAgIC8vIE5vdGU6IG5laXRoZXIgSVNPLTg2MDEgbm9yIEphdmFTY3JpcHQgc3VwcG9ydHMgc2Vjb25kcyBpbiB0aW1lem9uZSBvZmZzZXRzXHJcbiAgICAgIC8vIHNvIHRoaXMgdG9rZW4gYWx3YXlzIGhhcyB0aGUgc2FtZSBvdXRwdXQgYXMgYHh4eGBcclxuXHJcbiAgICAgIGNhc2UgJ3h4eHh4JzpcclxuICAgICAgY2FzZSAneHh4JzogLy8gSG91cnMgYW5kIG1pbnV0ZXMgd2l0aCBgOmAgZGVsaW1pdGVyXHJcblxyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIHJldHVybiBmb3JtYXRUaW1lem9uZSh0aW1lem9uZU9mZnNldCwgJzonKTtcclxuICAgIH1cclxuICB9LFxyXG4gIC8vIFRpbWV6b25lIChHTVQpXHJcbiAgTzogZnVuY3Rpb24gTyhkYXRlLCB0b2tlbiwgX2xvY2FsaXplLCBvcHRpb25zKSB7XHJcbiAgICB2YXIgb3JpZ2luYWxEYXRlID0gb3B0aW9ucy5fb3JpZ2luYWxEYXRlIHx8IGRhdGU7XHJcbiAgICB2YXIgdGltZXpvbmVPZmZzZXQgPSBvcmlnaW5hbERhdGUuZ2V0VGltZXpvbmVPZmZzZXQoKTtcclxuXHJcbiAgICBzd2l0Y2ggKHRva2VuKSB7XHJcbiAgICAgIC8vIFNob3J0XHJcbiAgICAgIGNhc2UgJ08nOlxyXG4gICAgICBjYXNlICdPTyc6XHJcbiAgICAgIGNhc2UgJ09PTyc6XHJcbiAgICAgICAgcmV0dXJuICdHTVQnICsgZm9ybWF0VGltZXpvbmVTaG9ydCh0aW1lem9uZU9mZnNldCwgJzonKTtcclxuICAgICAgLy8gTG9uZ1xyXG5cclxuICAgICAgY2FzZSAnT09PTyc6XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgcmV0dXJuICdHTVQnICsgZm9ybWF0VGltZXpvbmUodGltZXpvbmVPZmZzZXQsICc6Jyk7XHJcbiAgICB9XHJcbiAgfSxcclxuICAvLyBUaW1lem9uZSAoc3BlY2lmaWMgbm9uLWxvY2F0aW9uKVxyXG4gIHo6IGZ1bmN0aW9uIHooZGF0ZSwgdG9rZW4sIF9sb2NhbGl6ZSwgb3B0aW9ucykge1xyXG4gICAgdmFyIG9yaWdpbmFsRGF0ZSA9IG9wdGlvbnMuX29yaWdpbmFsRGF0ZSB8fCBkYXRlO1xyXG4gICAgdmFyIHRpbWV6b25lT2Zmc2V0ID0gb3JpZ2luYWxEYXRlLmdldFRpbWV6b25lT2Zmc2V0KCk7XHJcblxyXG4gICAgc3dpdGNoICh0b2tlbikge1xyXG4gICAgICAvLyBTaG9ydFxyXG4gICAgICBjYXNlICd6JzpcclxuICAgICAgY2FzZSAnenonOlxyXG4gICAgICBjYXNlICd6enonOlxyXG4gICAgICAgIHJldHVybiAnR01UJyArIGZvcm1hdFRpbWV6b25lU2hvcnQodGltZXpvbmVPZmZzZXQsICc6Jyk7XHJcbiAgICAgIC8vIExvbmdcclxuXHJcbiAgICAgIGNhc2UgJ3p6enonOlxyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIHJldHVybiAnR01UJyArIGZvcm1hdFRpbWV6b25lKHRpbWV6b25lT2Zmc2V0LCAnOicpO1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgLy8gU2Vjb25kcyB0aW1lc3RhbXBcclxuICB0OiBmdW5jdGlvbiB0KGRhdGUsIHRva2VuLCBfbG9jYWxpemUsIG9wdGlvbnMpIHtcclxuICAgIHZhciBvcmlnaW5hbERhdGUgPSBvcHRpb25zLl9vcmlnaW5hbERhdGUgfHwgZGF0ZTtcclxuICAgIHZhciB0aW1lc3RhbXAgPSBNYXRoLmZsb29yKG9yaWdpbmFsRGF0ZS5nZXRUaW1lKCkgLyAxMDAwKTtcclxuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3ModGltZXN0YW1wLCB0b2tlbi5sZW5ndGgpO1xyXG4gIH0sXHJcbiAgLy8gTWlsbGlzZWNvbmRzIHRpbWVzdGFtcFxyXG4gIFQ6IGZ1bmN0aW9uIFQoZGF0ZSwgdG9rZW4sIF9sb2NhbGl6ZSwgb3B0aW9ucykge1xyXG4gICAgdmFyIG9yaWdpbmFsRGF0ZSA9IG9wdGlvbnMuX29yaWdpbmFsRGF0ZSB8fCBkYXRlO1xyXG4gICAgdmFyIHRpbWVzdGFtcCA9IG9yaWdpbmFsRGF0ZS5nZXRUaW1lKCk7XHJcbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKHRpbWVzdGFtcCwgdG9rZW4ubGVuZ3RoKTtcclxuICB9XHJcbn07XHJcblxyXG5mdW5jdGlvbiBmb3JtYXRUaW1lem9uZVNob3J0KG9mZnNldCwgZGlydHlEZWxpbWl0ZXIpIHtcclxuICB2YXIgc2lnbiA9IG9mZnNldCA+IDAgPyAnLScgOiAnKyc7XHJcbiAgdmFyIGFic09mZnNldCA9IE1hdGguYWJzKG9mZnNldCk7XHJcbiAgdmFyIGhvdXJzID0gTWF0aC5mbG9vcihhYnNPZmZzZXQgLyA2MCk7XHJcbiAgdmFyIG1pbnV0ZXMgPSBhYnNPZmZzZXQgJSA2MDtcclxuXHJcbiAgaWYgKG1pbnV0ZXMgPT09IDApIHtcclxuICAgIHJldHVybiBzaWduICsgU3RyaW5nKGhvdXJzKTtcclxuICB9XHJcblxyXG4gIHZhciBkZWxpbWl0ZXIgPSBkaXJ0eURlbGltaXRlciB8fCAnJztcclxuICByZXR1cm4gc2lnbiArIFN0cmluZyhob3VycykgKyBkZWxpbWl0ZXIgKyBhZGRMZWFkaW5nWmVyb3MobWludXRlcywgMik7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZvcm1hdFRpbWV6b25lV2l0aE9wdGlvbmFsTWludXRlcyhvZmZzZXQsIGRpcnR5RGVsaW1pdGVyKSB7XHJcbiAgaWYgKG9mZnNldCAlIDYwID09PSAwKSB7XHJcbiAgICB2YXIgc2lnbiA9IG9mZnNldCA+IDAgPyAnLScgOiAnKyc7XHJcbiAgICByZXR1cm4gc2lnbiArIGFkZExlYWRpbmdaZXJvcyhNYXRoLmFicyhvZmZzZXQpIC8gNjAsIDIpO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGZvcm1hdFRpbWV6b25lKG9mZnNldCwgZGlydHlEZWxpbWl0ZXIpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBmb3JtYXRUaW1lem9uZShvZmZzZXQsIGRpcnR5RGVsaW1pdGVyKSB7XHJcbiAgdmFyIGRlbGltaXRlciA9IGRpcnR5RGVsaW1pdGVyIHx8ICcnO1xyXG4gIHZhciBzaWduID0gb2Zmc2V0ID4gMCA/ICctJyA6ICcrJztcclxuICB2YXIgYWJzT2Zmc2V0ID0gTWF0aC5hYnMob2Zmc2V0KTtcclxuICB2YXIgaG91cnMgPSBhZGRMZWFkaW5nWmVyb3MoTWF0aC5mbG9vcihhYnNPZmZzZXQgLyA2MCksIDIpO1xyXG4gIHZhciBtaW51dGVzID0gYWRkTGVhZGluZ1plcm9zKGFic09mZnNldCAlIDYwLCAyKTtcclxuICByZXR1cm4gc2lnbiArIGhvdXJzICsgZGVsaW1pdGVyICsgbWludXRlcztcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZm9ybWF0dGVyczsiLCJpbXBvcnQgZ2V0VVRDV2Vla1llYXIgZnJvbSBcIi4uL2dldFVUQ1dlZWtZZWFyL2luZGV4LmpzXCI7XHJcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xyXG5pbXBvcnQgc3RhcnRPZlVUQ1dlZWsgZnJvbSBcIi4uL3N0YXJ0T2ZVVENXZWVrL2luZGV4LmpzXCI7XHJcbmltcG9ydCB0b0ludGVnZXIgZnJvbSBcIi4uL3RvSW50ZWdlci9pbmRleC5qc1wiO1xyXG5pbXBvcnQgeyBnZXREZWZhdWx0T3B0aW9ucyB9IGZyb20gXCIuLi9kZWZhdWx0T3B0aW9ucy9pbmRleC5qc1wiO1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzdGFydE9mVVRDV2Vla1llYXIoZGlydHlEYXRlLCBvcHRpb25zKSB7XHJcbiAgdmFyIF9yZWYsIF9yZWYyLCBfcmVmMywgX29wdGlvbnMkZmlyc3RXZWVrQ29uLCBfb3B0aW9ucyRsb2NhbGUsIF9vcHRpb25zJGxvY2FsZSRvcHRpbywgX2RlZmF1bHRPcHRpb25zJGxvY2FsLCBfZGVmYXVsdE9wdGlvbnMkbG9jYWwyO1xyXG5cclxuICByZXF1aXJlZEFyZ3MoMSwgYXJndW1lbnRzKTtcclxuICB2YXIgZGVmYXVsdE9wdGlvbnMgPSBnZXREZWZhdWx0T3B0aW9ucygpO1xyXG4gIHZhciBmaXJzdFdlZWtDb250YWluc0RhdGUgPSB0b0ludGVnZXIoKF9yZWYgPSAoX3JlZjIgPSAoX3JlZjMgPSAoX29wdGlvbnMkZmlyc3RXZWVrQ29uID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSkgIT09IG51bGwgJiYgX29wdGlvbnMkZmlyc3RXZWVrQ29uICE9PSB2b2lkIDAgPyBfb3B0aW9ucyRmaXJzdFdlZWtDb24gOiBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfb3B0aW9ucyRsb2NhbGUgPSBvcHRpb25zLmxvY2FsZSkgPT09IG51bGwgfHwgX29wdGlvbnMkbG9jYWxlID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX29wdGlvbnMkbG9jYWxlJG9wdGlvID0gX29wdGlvbnMkbG9jYWxlLm9wdGlvbnMpID09PSBudWxsIHx8IF9vcHRpb25zJGxvY2FsZSRvcHRpbyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX29wdGlvbnMkbG9jYWxlJG9wdGlvLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSkgIT09IG51bGwgJiYgX3JlZjMgIT09IHZvaWQgMCA/IF9yZWYzIDogZGVmYXVsdE9wdGlvbnMuZmlyc3RXZWVrQ29udGFpbnNEYXRlKSAhPT0gbnVsbCAmJiBfcmVmMiAhPT0gdm9pZCAwID8gX3JlZjIgOiAoX2RlZmF1bHRPcHRpb25zJGxvY2FsID0gZGVmYXVsdE9wdGlvbnMubG9jYWxlKSA9PT0gbnVsbCB8fCBfZGVmYXVsdE9wdGlvbnMkbG9jYWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfZGVmYXVsdE9wdGlvbnMkbG9jYWwyID0gX2RlZmF1bHRPcHRpb25zJGxvY2FsLm9wdGlvbnMpID09PSBudWxsIHx8IF9kZWZhdWx0T3B0aW9ucyRsb2NhbDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kZWZhdWx0T3B0aW9ucyRsb2NhbDIuZmlyc3RXZWVrQ29udGFpbnNEYXRlKSAhPT0gbnVsbCAmJiBfcmVmICE9PSB2b2lkIDAgPyBfcmVmIDogMSk7XHJcbiAgdmFyIHllYXIgPSBnZXRVVENXZWVrWWVhcihkaXJ0eURhdGUsIG9wdGlvbnMpO1xyXG4gIHZhciBmaXJzdFdlZWsgPSBuZXcgRGF0ZSgwKTtcclxuICBmaXJzdFdlZWsuc2V0VVRDRnVsbFllYXIoeWVhciwgMCwgZmlyc3RXZWVrQ29udGFpbnNEYXRlKTtcclxuICBmaXJzdFdlZWsuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XHJcbiAgdmFyIGRhdGUgPSBzdGFydE9mVVRDV2VlayhmaXJzdFdlZWssIG9wdGlvbnMpO1xyXG4gIHJldHVybiBkYXRlO1xyXG59IiwiaW1wb3J0IGdldFVUQ0lTT1dlZWtZZWFyIGZyb20gXCIuLi9nZXRVVENJU09XZWVrWWVhci9pbmRleC5qc1wiO1xyXG5pbXBvcnQgc3RhcnRPZlVUQ0lTT1dlZWsgZnJvbSBcIi4uL3N0YXJ0T2ZVVENJU09XZWVrL2luZGV4LmpzXCI7XHJcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzdGFydE9mVVRDSVNPV2Vla1llYXIoZGlydHlEYXRlKSB7XHJcbiAgcmVxdWlyZWRBcmdzKDEsIGFyZ3VtZW50cyk7XHJcbiAgdmFyIHllYXIgPSBnZXRVVENJU09XZWVrWWVhcihkaXJ0eURhdGUpO1xyXG4gIHZhciBmb3VydGhPZkphbnVhcnkgPSBuZXcgRGF0ZSgwKTtcclxuICBmb3VydGhPZkphbnVhcnkuc2V0VVRDRnVsbFllYXIoeWVhciwgMCwgNCk7XHJcbiAgZm91cnRoT2ZKYW51YXJ5LnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApO1xyXG4gIHZhciBkYXRlID0gc3RhcnRPZlVUQ0lTT1dlZWsoZm91cnRoT2ZKYW51YXJ5KTtcclxuICByZXR1cm4gZGF0ZTtcclxufSIsImltcG9ydCB0b0RhdGUgZnJvbSBcIi4uLy4uL3RvRGF0ZS9pbmRleC5qc1wiO1xyXG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcclxudmFyIE1JTExJU0VDT05EU19JTl9EQVkgPSA4NjQwMDAwMDtcclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0VVRDRGF5T2ZZZWFyKGRpcnR5RGF0ZSkge1xyXG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xyXG4gIHZhciBkYXRlID0gdG9EYXRlKGRpcnR5RGF0ZSk7XHJcbiAgdmFyIHRpbWVzdGFtcCA9IGRhdGUuZ2V0VGltZSgpO1xyXG4gIGRhdGUuc2V0VVRDTW9udGgoMCwgMSk7XHJcbiAgZGF0ZS5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcclxuICB2YXIgc3RhcnRPZlllYXJUaW1lc3RhbXAgPSBkYXRlLmdldFRpbWUoKTtcclxuICB2YXIgZGlmZmVyZW5jZSA9IHRpbWVzdGFtcCAtIHN0YXJ0T2ZZZWFyVGltZXN0YW1wO1xyXG4gIHJldHVybiBNYXRoLmZsb29yKGRpZmZlcmVuY2UgLyBNSUxMSVNFQ09ORFNfSU5fREFZKSArIDE7XHJcbn0iLCJ2YXIgZGF0ZUxvbmdGb3JtYXR0ZXIgPSBmdW5jdGlvbiBkYXRlTG9uZ0Zvcm1hdHRlcihwYXR0ZXJuLCBmb3JtYXRMb25nKSB7XHJcbiAgc3dpdGNoIChwYXR0ZXJuKSB7XHJcbiAgICBjYXNlICdQJzpcclxuICAgICAgcmV0dXJuIGZvcm1hdExvbmcuZGF0ZSh7XHJcbiAgICAgICAgd2lkdGg6ICdzaG9ydCdcclxuICAgICAgfSk7XHJcblxyXG4gICAgY2FzZSAnUFAnOlxyXG4gICAgICByZXR1cm4gZm9ybWF0TG9uZy5kYXRlKHtcclxuICAgICAgICB3aWR0aDogJ21lZGl1bSdcclxuICAgICAgfSk7XHJcblxyXG4gICAgY2FzZSAnUFBQJzpcclxuICAgICAgcmV0dXJuIGZvcm1hdExvbmcuZGF0ZSh7XHJcbiAgICAgICAgd2lkdGg6ICdsb25nJ1xyXG4gICAgICB9KTtcclxuXHJcbiAgICBjYXNlICdQUFBQJzpcclxuICAgIGRlZmF1bHQ6XHJcbiAgICAgIHJldHVybiBmb3JtYXRMb25nLmRhdGUoe1xyXG4gICAgICAgIHdpZHRoOiAnZnVsbCdcclxuICAgICAgfSk7XHJcbiAgfVxyXG59O1xyXG5cclxudmFyIHRpbWVMb25nRm9ybWF0dGVyID0gZnVuY3Rpb24gdGltZUxvbmdGb3JtYXR0ZXIocGF0dGVybiwgZm9ybWF0TG9uZykge1xyXG4gIHN3aXRjaCAocGF0dGVybikge1xyXG4gICAgY2FzZSAncCc6XHJcbiAgICAgIHJldHVybiBmb3JtYXRMb25nLnRpbWUoe1xyXG4gICAgICAgIHdpZHRoOiAnc2hvcnQnXHJcbiAgICAgIH0pO1xyXG5cclxuICAgIGNhc2UgJ3BwJzpcclxuICAgICAgcmV0dXJuIGZvcm1hdExvbmcudGltZSh7XHJcbiAgICAgICAgd2lkdGg6ICdtZWRpdW0nXHJcbiAgICAgIH0pO1xyXG5cclxuICAgIGNhc2UgJ3BwcCc6XHJcbiAgICAgIHJldHVybiBmb3JtYXRMb25nLnRpbWUoe1xyXG4gICAgICAgIHdpZHRoOiAnbG9uZydcclxuICAgICAgfSk7XHJcblxyXG4gICAgY2FzZSAncHBwcCc6XHJcbiAgICBkZWZhdWx0OlxyXG4gICAgICByZXR1cm4gZm9ybWF0TG9uZy50aW1lKHtcclxuICAgICAgICB3aWR0aDogJ2Z1bGwnXHJcbiAgICAgIH0pO1xyXG4gIH1cclxufTtcclxuXHJcbnZhciBkYXRlVGltZUxvbmdGb3JtYXR0ZXIgPSBmdW5jdGlvbiBkYXRlVGltZUxvbmdGb3JtYXR0ZXIocGF0dGVybiwgZm9ybWF0TG9uZykge1xyXG4gIHZhciBtYXRjaFJlc3VsdCA9IHBhdHRlcm4ubWF0Y2goLyhQKykocCspPy8pIHx8IFtdO1xyXG4gIHZhciBkYXRlUGF0dGVybiA9IG1hdGNoUmVzdWx0WzFdO1xyXG4gIHZhciB0aW1lUGF0dGVybiA9IG1hdGNoUmVzdWx0WzJdO1xyXG5cclxuICBpZiAoIXRpbWVQYXR0ZXJuKSB7XHJcbiAgICByZXR1cm4gZGF0ZUxvbmdGb3JtYXR0ZXIocGF0dGVybiwgZm9ybWF0TG9uZyk7XHJcbiAgfVxyXG5cclxuICB2YXIgZGF0ZVRpbWVGb3JtYXQ7XHJcblxyXG4gIHN3aXRjaCAoZGF0ZVBhdHRlcm4pIHtcclxuICAgIGNhc2UgJ1AnOlxyXG4gICAgICBkYXRlVGltZUZvcm1hdCA9IGZvcm1hdExvbmcuZGF0ZVRpbWUoe1xyXG4gICAgICAgIHdpZHRoOiAnc2hvcnQnXHJcbiAgICAgIH0pO1xyXG4gICAgICBicmVhaztcclxuXHJcbiAgICBjYXNlICdQUCc6XHJcbiAgICAgIGRhdGVUaW1lRm9ybWF0ID0gZm9ybWF0TG9uZy5kYXRlVGltZSh7XHJcbiAgICAgICAgd2lkdGg6ICdtZWRpdW0nXHJcbiAgICAgIH0pO1xyXG4gICAgICBicmVhaztcclxuXHJcbiAgICBjYXNlICdQUFAnOlxyXG4gICAgICBkYXRlVGltZUZvcm1hdCA9IGZvcm1hdExvbmcuZGF0ZVRpbWUoe1xyXG4gICAgICAgIHdpZHRoOiAnbG9uZydcclxuICAgICAgfSk7XHJcbiAgICAgIGJyZWFrO1xyXG5cclxuICAgIGNhc2UgJ1BQUFAnOlxyXG4gICAgZGVmYXVsdDpcclxuICAgICAgZGF0ZVRpbWVGb3JtYXQgPSBmb3JtYXRMb25nLmRhdGVUaW1lKHtcclxuICAgICAgICB3aWR0aDogJ2Z1bGwnXHJcbiAgICAgIH0pO1xyXG4gICAgICBicmVhaztcclxuICB9XHJcblxyXG4gIHJldHVybiBkYXRlVGltZUZvcm1hdC5yZXBsYWNlKCd7e2RhdGV9fScsIGRhdGVMb25nRm9ybWF0dGVyKGRhdGVQYXR0ZXJuLCBmb3JtYXRMb25nKSkucmVwbGFjZSgne3t0aW1lfX0nLCB0aW1lTG9uZ0Zvcm1hdHRlcih0aW1lUGF0dGVybiwgZm9ybWF0TG9uZykpO1xyXG59O1xyXG5cclxudmFyIGxvbmdGb3JtYXR0ZXJzID0ge1xyXG4gIHA6IHRpbWVMb25nRm9ybWF0dGVyLFxyXG4gIFA6IGRhdGVUaW1lTG9uZ0Zvcm1hdHRlclxyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBsb25nRm9ybWF0dGVyczsiLCJ2YXIgcHJvdGVjdGVkRGF5T2ZZZWFyVG9rZW5zID0gWydEJywgJ0REJ107XHJcbnZhciBwcm90ZWN0ZWRXZWVrWWVhclRva2VucyA9IFsnWVknLCAnWVlZWSddO1xyXG5leHBvcnQgZnVuY3Rpb24gaXNQcm90ZWN0ZWREYXlPZlllYXJUb2tlbih0b2tlbikge1xyXG4gIHJldHVybiBwcm90ZWN0ZWREYXlPZlllYXJUb2tlbnMuaW5kZXhPZih0b2tlbikgIT09IC0xO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBpc1Byb3RlY3RlZFdlZWtZZWFyVG9rZW4odG9rZW4pIHtcclxuICByZXR1cm4gcHJvdGVjdGVkV2Vla1llYXJUb2tlbnMuaW5kZXhPZih0b2tlbikgIT09IC0xO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiB0aHJvd1Byb3RlY3RlZEVycm9yKHRva2VuLCBmb3JtYXQsIGlucHV0KSB7XHJcbiAgaWYgKHRva2VuID09PSAnWVlZWScpIHtcclxuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKFwiVXNlIGB5eXl5YCBpbnN0ZWFkIG9mIGBZWVlZYCAoaW4gYFwiLmNvbmNhdChmb3JtYXQsIFwiYCkgZm9yIGZvcm1hdHRpbmcgeWVhcnMgdG8gdGhlIGlucHV0IGBcIikuY29uY2F0KGlucHV0LCBcImA7IHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdW5pY29kZVRva2Vucy5tZFwiKSk7XHJcbiAgfSBlbHNlIGlmICh0b2tlbiA9PT0gJ1lZJykge1xyXG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJVc2UgYHl5YCBpbnN0ZWFkIG9mIGBZWWAgKGluIGBcIi5jb25jYXQoZm9ybWF0LCBcImApIGZvciBmb3JtYXR0aW5nIHllYXJzIHRvIHRoZSBpbnB1dCBgXCIpLmNvbmNhdChpbnB1dCwgXCJgOyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VuaWNvZGVUb2tlbnMubWRcIikpO1xyXG4gIH0gZWxzZSBpZiAodG9rZW4gPT09ICdEJykge1xyXG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJVc2UgYGRgIGluc3RlYWQgb2YgYERgIChpbiBgXCIuY29uY2F0KGZvcm1hdCwgXCJgKSBmb3IgZm9ybWF0dGluZyBkYXlzIG9mIHRoZSBtb250aCB0byB0aGUgaW5wdXQgYFwiKS5jb25jYXQoaW5wdXQsIFwiYDsgc2VlOiBodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91bmljb2RlVG9rZW5zLm1kXCIpKTtcclxuICB9IGVsc2UgaWYgKHRva2VuID09PSAnREQnKSB7XHJcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlVzZSBgZGRgIGluc3RlYWQgb2YgYEREYCAoaW4gYFwiLmNvbmNhdChmb3JtYXQsIFwiYCkgZm9yIGZvcm1hdHRpbmcgZGF5cyBvZiB0aGUgbW9udGggdG8gdGhlIGlucHV0IGBcIikuY29uY2F0KGlucHV0LCBcImA7IHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdW5pY29kZVRva2Vucy5tZFwiKSk7XHJcbiAgfVxyXG59IiwidmFyIGZvcm1hdERpc3RhbmNlTG9jYWxlID0ge1xyXG4gIGxlc3NUaGFuWFNlY29uZHM6IHtcclxuICAgIG9uZTogJ2xlc3MgdGhhbiBhIHNlY29uZCcsXHJcbiAgICBvdGhlcjogJ2xlc3MgdGhhbiB7e2NvdW50fX0gc2Vjb25kcydcclxuICB9LFxyXG4gIHhTZWNvbmRzOiB7XHJcbiAgICBvbmU6ICcxIHNlY29uZCcsXHJcbiAgICBvdGhlcjogJ3t7Y291bnR9fSBzZWNvbmRzJ1xyXG4gIH0sXHJcbiAgaGFsZkFNaW51dGU6ICdoYWxmIGEgbWludXRlJyxcclxuICBsZXNzVGhhblhNaW51dGVzOiB7XHJcbiAgICBvbmU6ICdsZXNzIHRoYW4gYSBtaW51dGUnLFxyXG4gICAgb3RoZXI6ICdsZXNzIHRoYW4ge3tjb3VudH19IG1pbnV0ZXMnXHJcbiAgfSxcclxuICB4TWludXRlczoge1xyXG4gICAgb25lOiAnMSBtaW51dGUnLFxyXG4gICAgb3RoZXI6ICd7e2NvdW50fX0gbWludXRlcydcclxuICB9LFxyXG4gIGFib3V0WEhvdXJzOiB7XHJcbiAgICBvbmU6ICdhYm91dCAxIGhvdXInLFxyXG4gICAgb3RoZXI6ICdhYm91dCB7e2NvdW50fX0gaG91cnMnXHJcbiAgfSxcclxuICB4SG91cnM6IHtcclxuICAgIG9uZTogJzEgaG91cicsXHJcbiAgICBvdGhlcjogJ3t7Y291bnR9fSBob3VycydcclxuICB9LFxyXG4gIHhEYXlzOiB7XHJcbiAgICBvbmU6ICcxIGRheScsXHJcbiAgICBvdGhlcjogJ3t7Y291bnR9fSBkYXlzJ1xyXG4gIH0sXHJcbiAgYWJvdXRYV2Vla3M6IHtcclxuICAgIG9uZTogJ2Fib3V0IDEgd2VlaycsXHJcbiAgICBvdGhlcjogJ2Fib3V0IHt7Y291bnR9fSB3ZWVrcydcclxuICB9LFxyXG4gIHhXZWVrczoge1xyXG4gICAgb25lOiAnMSB3ZWVrJyxcclxuICAgIG90aGVyOiAne3tjb3VudH19IHdlZWtzJ1xyXG4gIH0sXHJcbiAgYWJvdXRYTW9udGhzOiB7XHJcbiAgICBvbmU6ICdhYm91dCAxIG1vbnRoJyxcclxuICAgIG90aGVyOiAnYWJvdXQge3tjb3VudH19IG1vbnRocydcclxuICB9LFxyXG4gIHhNb250aHM6IHtcclxuICAgIG9uZTogJzEgbW9udGgnLFxyXG4gICAgb3RoZXI6ICd7e2NvdW50fX0gbW9udGhzJ1xyXG4gIH0sXHJcbiAgYWJvdXRYWWVhcnM6IHtcclxuICAgIG9uZTogJ2Fib3V0IDEgeWVhcicsXHJcbiAgICBvdGhlcjogJ2Fib3V0IHt7Y291bnR9fSB5ZWFycydcclxuICB9LFxyXG4gIHhZZWFyczoge1xyXG4gICAgb25lOiAnMSB5ZWFyJyxcclxuICAgIG90aGVyOiAne3tjb3VudH19IHllYXJzJ1xyXG4gIH0sXHJcbiAgb3ZlclhZZWFyczoge1xyXG4gICAgb25lOiAnb3ZlciAxIHllYXInLFxyXG4gICAgb3RoZXI6ICdvdmVyIHt7Y291bnR9fSB5ZWFycydcclxuICB9LFxyXG4gIGFsbW9zdFhZZWFyczoge1xyXG4gICAgb25lOiAnYWxtb3N0IDEgeWVhcicsXHJcbiAgICBvdGhlcjogJ2FsbW9zdCB7e2NvdW50fX0geWVhcnMnXHJcbiAgfVxyXG59O1xyXG5cclxudmFyIGZvcm1hdERpc3RhbmNlID0gZnVuY3Rpb24gZm9ybWF0RGlzdGFuY2UodG9rZW4sIGNvdW50LCBvcHRpb25zKSB7XHJcbiAgdmFyIHJlc3VsdDtcclxuICB2YXIgdG9rZW5WYWx1ZSA9IGZvcm1hdERpc3RhbmNlTG9jYWxlW3Rva2VuXTtcclxuXHJcbiAgaWYgKHR5cGVvZiB0b2tlblZhbHVlID09PSAnc3RyaW5nJykge1xyXG4gICAgcmVzdWx0ID0gdG9rZW5WYWx1ZTtcclxuICB9IGVsc2UgaWYgKGNvdW50ID09PSAxKSB7XHJcbiAgICByZXN1bHQgPSB0b2tlblZhbHVlLm9uZTtcclxuICB9IGVsc2Uge1xyXG4gICAgcmVzdWx0ID0gdG9rZW5WYWx1ZS5vdGhlci5yZXBsYWNlKCd7e2NvdW50fX0nLCBjb3VudC50b1N0cmluZygpKTtcclxuICB9XHJcblxyXG4gIGlmIChvcHRpb25zICE9PSBudWxsICYmIG9wdGlvbnMgIT09IHZvaWQgMCAmJiBvcHRpb25zLmFkZFN1ZmZpeCkge1xyXG4gICAgaWYgKG9wdGlvbnMuY29tcGFyaXNvbiAmJiBvcHRpb25zLmNvbXBhcmlzb24gPiAwKSB7XHJcbiAgICAgIHJldHVybiAnaW4gJyArIHJlc3VsdDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiByZXN1bHQgKyAnIGFnbyc7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXR1cm4gcmVzdWx0O1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZm9ybWF0RGlzdGFuY2U7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYnVpbGRGb3JtYXRMb25nRm4oYXJncykge1xyXG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XHJcbiAgICAvLyBUT0RPOiBSZW1vdmUgU3RyaW5nKClcclxuICAgIHZhciB3aWR0aCA9IG9wdGlvbnMud2lkdGggPyBTdHJpbmcob3B0aW9ucy53aWR0aCkgOiBhcmdzLmRlZmF1bHRXaWR0aDtcclxuICAgIHZhciBmb3JtYXQgPSBhcmdzLmZvcm1hdHNbd2lkdGhdIHx8IGFyZ3MuZm9ybWF0c1thcmdzLmRlZmF1bHRXaWR0aF07XHJcbiAgICByZXR1cm4gZm9ybWF0O1xyXG4gIH07XHJcbn0iLCJpbXBvcnQgYnVpbGRGb3JtYXRMb25nRm4gZnJvbSBcIi4uLy4uLy4uL19saWIvYnVpbGRGb3JtYXRMb25nRm4vaW5kZXguanNcIjtcclxudmFyIGRhdGVGb3JtYXRzID0ge1xyXG4gIGZ1bGw6ICdFRUVFLCBNTU1NIGRvLCB5JyxcclxuICBsb25nOiAnTU1NTSBkbywgeScsXHJcbiAgbWVkaXVtOiAnTU1NIGQsIHknLFxyXG4gIHNob3J0OiAnTU0vZGQveXl5eSdcclxufTtcclxudmFyIHRpbWVGb3JtYXRzID0ge1xyXG4gIGZ1bGw6ICdoOm1tOnNzIGEgenp6eicsXHJcbiAgbG9uZzogJ2g6bW06c3MgYSB6JyxcclxuICBtZWRpdW06ICdoOm1tOnNzIGEnLFxyXG4gIHNob3J0OiAnaDptbSBhJ1xyXG59O1xyXG52YXIgZGF0ZVRpbWVGb3JtYXRzID0ge1xyXG4gIGZ1bGw6IFwie3tkYXRlfX0gJ2F0JyB7e3RpbWV9fVwiLFxyXG4gIGxvbmc6IFwie3tkYXRlfX0gJ2F0JyB7e3RpbWV9fVwiLFxyXG4gIG1lZGl1bTogJ3t7ZGF0ZX19LCB7e3RpbWV9fScsXHJcbiAgc2hvcnQ6ICd7e2RhdGV9fSwge3t0aW1lfX0nXHJcbn07XHJcbnZhciBmb3JtYXRMb25nID0ge1xyXG4gIGRhdGU6IGJ1aWxkRm9ybWF0TG9uZ0ZuKHtcclxuICAgIGZvcm1hdHM6IGRhdGVGb3JtYXRzLFxyXG4gICAgZGVmYXVsdFdpZHRoOiAnZnVsbCdcclxuICB9KSxcclxuICB0aW1lOiBidWlsZEZvcm1hdExvbmdGbih7XHJcbiAgICBmb3JtYXRzOiB0aW1lRm9ybWF0cyxcclxuICAgIGRlZmF1bHRXaWR0aDogJ2Z1bGwnXHJcbiAgfSksXHJcbiAgZGF0ZVRpbWU6IGJ1aWxkRm9ybWF0TG9uZ0ZuKHtcclxuICAgIGZvcm1hdHM6IGRhdGVUaW1lRm9ybWF0cyxcclxuICAgIGRlZmF1bHRXaWR0aDogJ2Z1bGwnXHJcbiAgfSlcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgZm9ybWF0TG9uZzsiLCJ2YXIgZm9ybWF0UmVsYXRpdmVMb2NhbGUgPSB7XHJcbiAgbGFzdFdlZWs6IFwiJ2xhc3QnIGVlZWUgJ2F0JyBwXCIsXHJcbiAgeWVzdGVyZGF5OiBcIid5ZXN0ZXJkYXkgYXQnIHBcIixcclxuICB0b2RheTogXCIndG9kYXkgYXQnIHBcIixcclxuICB0b21vcnJvdzogXCIndG9tb3Jyb3cgYXQnIHBcIixcclxuICBuZXh0V2VlazogXCJlZWVlICdhdCcgcFwiLFxyXG4gIG90aGVyOiAnUCdcclxufTtcclxuXHJcbnZhciBmb3JtYXRSZWxhdGl2ZSA9IGZ1bmN0aW9uIGZvcm1hdFJlbGF0aXZlKHRva2VuLCBfZGF0ZSwgX2Jhc2VEYXRlLCBfb3B0aW9ucykge1xyXG4gIHJldHVybiBmb3JtYXRSZWxhdGl2ZUxvY2FsZVt0b2tlbl07XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmb3JtYXRSZWxhdGl2ZTsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBidWlsZExvY2FsaXplRm4oYXJncykge1xyXG4gIHJldHVybiBmdW5jdGlvbiAoZGlydHlJbmRleCwgb3B0aW9ucykge1xyXG4gICAgdmFyIGNvbnRleHQgPSBvcHRpb25zICE9PSBudWxsICYmIG9wdGlvbnMgIT09IHZvaWQgMCAmJiBvcHRpb25zLmNvbnRleHQgPyBTdHJpbmcob3B0aW9ucy5jb250ZXh0KSA6ICdzdGFuZGFsb25lJztcclxuICAgIHZhciB2YWx1ZXNBcnJheTtcclxuXHJcbiAgICBpZiAoY29udGV4dCA9PT0gJ2Zvcm1hdHRpbmcnICYmIGFyZ3MuZm9ybWF0dGluZ1ZhbHVlcykge1xyXG4gICAgICB2YXIgZGVmYXVsdFdpZHRoID0gYXJncy5kZWZhdWx0Rm9ybWF0dGluZ1dpZHRoIHx8IGFyZ3MuZGVmYXVsdFdpZHRoO1xyXG4gICAgICB2YXIgd2lkdGggPSBvcHRpb25zICE9PSBudWxsICYmIG9wdGlvbnMgIT09IHZvaWQgMCAmJiBvcHRpb25zLndpZHRoID8gU3RyaW5nKG9wdGlvbnMud2lkdGgpIDogZGVmYXVsdFdpZHRoO1xyXG4gICAgICB2YWx1ZXNBcnJheSA9IGFyZ3MuZm9ybWF0dGluZ1ZhbHVlc1t3aWR0aF0gfHwgYXJncy5mb3JtYXR0aW5nVmFsdWVzW2RlZmF1bHRXaWR0aF07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB2YXIgX2RlZmF1bHRXaWR0aCA9IGFyZ3MuZGVmYXVsdFdpZHRoO1xyXG5cclxuICAgICAgdmFyIF93aWR0aCA9IG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwICYmIG9wdGlvbnMud2lkdGggPyBTdHJpbmcob3B0aW9ucy53aWR0aCkgOiBhcmdzLmRlZmF1bHRXaWR0aDtcclxuXHJcbiAgICAgIHZhbHVlc0FycmF5ID0gYXJncy52YWx1ZXNbX3dpZHRoXSB8fCBhcmdzLnZhbHVlc1tfZGVmYXVsdFdpZHRoXTtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgaW5kZXggPSBhcmdzLmFyZ3VtZW50Q2FsbGJhY2sgPyBhcmdzLmFyZ3VtZW50Q2FsbGJhY2soZGlydHlJbmRleCkgOiBkaXJ0eUluZGV4OyAvLyBAdHMtaWdub3JlOiBGb3Igc29tZSByZWFzb24gVHlwZVNjcmlwdCBqdXN0IGRvbid0IHdhbnQgdG8gbWF0Y2ggaXQsIG5vIG1hdHRlciBob3cgaGFyZCB3ZSB0cnkuIEkgY2hhbGxlbmdlIHlvdSB0byB0cnkgdG8gcmVtb3ZlIGl0IVxyXG5cclxuICAgIHJldHVybiB2YWx1ZXNBcnJheVtpbmRleF07XHJcbiAgfTtcclxufSIsImltcG9ydCBidWlsZExvY2FsaXplRm4gZnJvbSBcIi4uLy4uLy4uL19saWIvYnVpbGRMb2NhbGl6ZUZuL2luZGV4LmpzXCI7XHJcbnZhciBlcmFWYWx1ZXMgPSB7XHJcbiAgbmFycm93OiBbJ0InLCAnQSddLFxyXG4gIGFiYnJldmlhdGVkOiBbJ0JDJywgJ0FEJ10sXHJcbiAgd2lkZTogWydCZWZvcmUgQ2hyaXN0JywgJ0Fubm8gRG9taW5pJ11cclxufTtcclxudmFyIHF1YXJ0ZXJWYWx1ZXMgPSB7XHJcbiAgbmFycm93OiBbJzEnLCAnMicsICczJywgJzQnXSxcclxuICBhYmJyZXZpYXRlZDogWydRMScsICdRMicsICdRMycsICdRNCddLFxyXG4gIHdpZGU6IFsnMXN0IHF1YXJ0ZXInLCAnMm5kIHF1YXJ0ZXInLCAnM3JkIHF1YXJ0ZXInLCAnNHRoIHF1YXJ0ZXInXVxyXG59OyAvLyBOb3RlOiBpbiBFbmdsaXNoLCB0aGUgbmFtZXMgb2YgZGF5cyBvZiB0aGUgd2VlayBhbmQgbW9udGhzIGFyZSBjYXBpdGFsaXplZC5cclxuLy8gSWYgeW91IGFyZSBtYWtpbmcgYSBuZXcgbG9jYWxlIGJhc2VkIG9uIHRoaXMgb25lLCBjaGVjayBpZiB0aGUgc2FtZSBpcyB0cnVlIGZvciB0aGUgbGFuZ3VhZ2UgeW91J3JlIHdvcmtpbmcgb24uXHJcbi8vIEdlbmVyYWxseSwgZm9ybWF0dGVkIGRhdGVzIHNob3VsZCBsb29rIGxpa2UgdGhleSBhcmUgaW4gdGhlIG1pZGRsZSBvZiBhIHNlbnRlbmNlLFxyXG4vLyBlLmcuIGluIFNwYW5pc2ggbGFuZ3VhZ2UgdGhlIHdlZWtkYXlzIGFuZCBtb250aHMgc2hvdWxkIGJlIGluIHRoZSBsb3dlcmNhc2UuXHJcblxyXG52YXIgbW9udGhWYWx1ZXMgPSB7XHJcbiAgbmFycm93OiBbJ0onLCAnRicsICdNJywgJ0EnLCAnTScsICdKJywgJ0onLCAnQScsICdTJywgJ08nLCAnTicsICdEJ10sXHJcbiAgYWJicmV2aWF0ZWQ6IFsnSmFuJywgJ0ZlYicsICdNYXInLCAnQXByJywgJ01heScsICdKdW4nLCAnSnVsJywgJ0F1ZycsICdTZXAnLCAnT2N0JywgJ05vdicsICdEZWMnXSxcclxuICB3aWRlOiBbJ0phbnVhcnknLCAnRmVicnVhcnknLCAnTWFyY2gnLCAnQXByaWwnLCAnTWF5JywgJ0p1bmUnLCAnSnVseScsICdBdWd1c3QnLCAnU2VwdGVtYmVyJywgJ09jdG9iZXInLCAnTm92ZW1iZXInLCAnRGVjZW1iZXInXVxyXG59O1xyXG52YXIgZGF5VmFsdWVzID0ge1xyXG4gIG5hcnJvdzogWydTJywgJ00nLCAnVCcsICdXJywgJ1QnLCAnRicsICdTJ10sXHJcbiAgc2hvcnQ6IFsnU3UnLCAnTW8nLCAnVHUnLCAnV2UnLCAnVGgnLCAnRnInLCAnU2EnXSxcclxuICBhYmJyZXZpYXRlZDogWydTdW4nLCAnTW9uJywgJ1R1ZScsICdXZWQnLCAnVGh1JywgJ0ZyaScsICdTYXQnXSxcclxuICB3aWRlOiBbJ1N1bmRheScsICdNb25kYXknLCAnVHVlc2RheScsICdXZWRuZXNkYXknLCAnVGh1cnNkYXknLCAnRnJpZGF5JywgJ1NhdHVyZGF5J11cclxufTtcclxudmFyIGRheVBlcmlvZFZhbHVlcyA9IHtcclxuICBuYXJyb3c6IHtcclxuICAgIGFtOiAnYScsXHJcbiAgICBwbTogJ3AnLFxyXG4gICAgbWlkbmlnaHQ6ICdtaScsXHJcbiAgICBub29uOiAnbicsXHJcbiAgICBtb3JuaW5nOiAnbW9ybmluZycsXHJcbiAgICBhZnRlcm5vb246ICdhZnRlcm5vb24nLFxyXG4gICAgZXZlbmluZzogJ2V2ZW5pbmcnLFxyXG4gICAgbmlnaHQ6ICduaWdodCdcclxuICB9LFxyXG4gIGFiYnJldmlhdGVkOiB7XHJcbiAgICBhbTogJ0FNJyxcclxuICAgIHBtOiAnUE0nLFxyXG4gICAgbWlkbmlnaHQ6ICdtaWRuaWdodCcsXHJcbiAgICBub29uOiAnbm9vbicsXHJcbiAgICBtb3JuaW5nOiAnbW9ybmluZycsXHJcbiAgICBhZnRlcm5vb246ICdhZnRlcm5vb24nLFxyXG4gICAgZXZlbmluZzogJ2V2ZW5pbmcnLFxyXG4gICAgbmlnaHQ6ICduaWdodCdcclxuICB9LFxyXG4gIHdpZGU6IHtcclxuICAgIGFtOiAnYS5tLicsXHJcbiAgICBwbTogJ3AubS4nLFxyXG4gICAgbWlkbmlnaHQ6ICdtaWRuaWdodCcsXHJcbiAgICBub29uOiAnbm9vbicsXHJcbiAgICBtb3JuaW5nOiAnbW9ybmluZycsXHJcbiAgICBhZnRlcm5vb246ICdhZnRlcm5vb24nLFxyXG4gICAgZXZlbmluZzogJ2V2ZW5pbmcnLFxyXG4gICAgbmlnaHQ6ICduaWdodCdcclxuICB9XHJcbn07XHJcbnZhciBmb3JtYXR0aW5nRGF5UGVyaW9kVmFsdWVzID0ge1xyXG4gIG5hcnJvdzoge1xyXG4gICAgYW06ICdhJyxcclxuICAgIHBtOiAncCcsXHJcbiAgICBtaWRuaWdodDogJ21pJyxcclxuICAgIG5vb246ICduJyxcclxuICAgIG1vcm5pbmc6ICdpbiB0aGUgbW9ybmluZycsXHJcbiAgICBhZnRlcm5vb246ICdpbiB0aGUgYWZ0ZXJub29uJyxcclxuICAgIGV2ZW5pbmc6ICdpbiB0aGUgZXZlbmluZycsXHJcbiAgICBuaWdodDogJ2F0IG5pZ2h0J1xyXG4gIH0sXHJcbiAgYWJicmV2aWF0ZWQ6IHtcclxuICAgIGFtOiAnQU0nLFxyXG4gICAgcG06ICdQTScsXHJcbiAgICBtaWRuaWdodDogJ21pZG5pZ2h0JyxcclxuICAgIG5vb246ICdub29uJyxcclxuICAgIG1vcm5pbmc6ICdpbiB0aGUgbW9ybmluZycsXHJcbiAgICBhZnRlcm5vb246ICdpbiB0aGUgYWZ0ZXJub29uJyxcclxuICAgIGV2ZW5pbmc6ICdpbiB0aGUgZXZlbmluZycsXHJcbiAgICBuaWdodDogJ2F0IG5pZ2h0J1xyXG4gIH0sXHJcbiAgd2lkZToge1xyXG4gICAgYW06ICdhLm0uJyxcclxuICAgIHBtOiAncC5tLicsXHJcbiAgICBtaWRuaWdodDogJ21pZG5pZ2h0JyxcclxuICAgIG5vb246ICdub29uJyxcclxuICAgIG1vcm5pbmc6ICdpbiB0aGUgbW9ybmluZycsXHJcbiAgICBhZnRlcm5vb246ICdpbiB0aGUgYWZ0ZXJub29uJyxcclxuICAgIGV2ZW5pbmc6ICdpbiB0aGUgZXZlbmluZycsXHJcbiAgICBuaWdodDogJ2F0IG5pZ2h0J1xyXG4gIH1cclxufTtcclxuXHJcbnZhciBvcmRpbmFsTnVtYmVyID0gZnVuY3Rpb24gb3JkaW5hbE51bWJlcihkaXJ0eU51bWJlciwgX29wdGlvbnMpIHtcclxuICB2YXIgbnVtYmVyID0gTnVtYmVyKGRpcnR5TnVtYmVyKTsgLy8gSWYgb3JkaW5hbCBudW1iZXJzIGRlcGVuZCBvbiBjb250ZXh0LCBmb3IgZXhhbXBsZSxcclxuICAvLyBpZiB0aGV5IGFyZSBkaWZmZXJlbnQgZm9yIGRpZmZlcmVudCBncmFtbWF0aWNhbCBnZW5kZXJzLFxyXG4gIC8vIHVzZSBgb3B0aW9ucy51bml0YC5cclxuICAvL1xyXG4gIC8vIGB1bml0YCBjYW4gYmUgJ3llYXInLCAncXVhcnRlcicsICdtb250aCcsICd3ZWVrJywgJ2RhdGUnLCAnZGF5T2ZZZWFyJyxcclxuICAvLyAnZGF5JywgJ2hvdXInLCAnbWludXRlJywgJ3NlY29uZCcuXHJcblxyXG4gIHZhciByZW0xMDAgPSBudW1iZXIgJSAxMDA7XHJcblxyXG4gIGlmIChyZW0xMDAgPiAyMCB8fCByZW0xMDAgPCAxMCkge1xyXG4gICAgc3dpdGNoIChyZW0xMDAgJSAxMCkge1xyXG4gICAgICBjYXNlIDE6XHJcbiAgICAgICAgcmV0dXJuIG51bWJlciArICdzdCc7XHJcblxyXG4gICAgICBjYXNlIDI6XHJcbiAgICAgICAgcmV0dXJuIG51bWJlciArICduZCc7XHJcblxyXG4gICAgICBjYXNlIDM6XHJcbiAgICAgICAgcmV0dXJuIG51bWJlciArICdyZCc7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXR1cm4gbnVtYmVyICsgJ3RoJztcclxufTtcclxuXHJcbnZhciBsb2NhbGl6ZSA9IHtcclxuICBvcmRpbmFsTnVtYmVyOiBvcmRpbmFsTnVtYmVyLFxyXG4gIGVyYTogYnVpbGRMb2NhbGl6ZUZuKHtcclxuICAgIHZhbHVlczogZXJhVmFsdWVzLFxyXG4gICAgZGVmYXVsdFdpZHRoOiAnd2lkZSdcclxuICB9KSxcclxuICBxdWFydGVyOiBidWlsZExvY2FsaXplRm4oe1xyXG4gICAgdmFsdWVzOiBxdWFydGVyVmFsdWVzLFxyXG4gICAgZGVmYXVsdFdpZHRoOiAnd2lkZScsXHJcbiAgICBhcmd1bWVudENhbGxiYWNrOiBmdW5jdGlvbiBhcmd1bWVudENhbGxiYWNrKHF1YXJ0ZXIpIHtcclxuICAgICAgcmV0dXJuIHF1YXJ0ZXIgLSAxO1xyXG4gICAgfVxyXG4gIH0pLFxyXG4gIG1vbnRoOiBidWlsZExvY2FsaXplRm4oe1xyXG4gICAgdmFsdWVzOiBtb250aFZhbHVlcyxcclxuICAgIGRlZmF1bHRXaWR0aDogJ3dpZGUnXHJcbiAgfSksXHJcbiAgZGF5OiBidWlsZExvY2FsaXplRm4oe1xyXG4gICAgdmFsdWVzOiBkYXlWYWx1ZXMsXHJcbiAgICBkZWZhdWx0V2lkdGg6ICd3aWRlJ1xyXG4gIH0pLFxyXG4gIGRheVBlcmlvZDogYnVpbGRMb2NhbGl6ZUZuKHtcclxuICAgIHZhbHVlczogZGF5UGVyaW9kVmFsdWVzLFxyXG4gICAgZGVmYXVsdFdpZHRoOiAnd2lkZScsXHJcbiAgICBmb3JtYXR0aW5nVmFsdWVzOiBmb3JtYXR0aW5nRGF5UGVyaW9kVmFsdWVzLFxyXG4gICAgZGVmYXVsdEZvcm1hdHRpbmdXaWR0aDogJ3dpZGUnXHJcbiAgfSlcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgbG9jYWxpemU7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYnVpbGRNYXRjaEZuKGFyZ3MpIHtcclxuICByZXR1cm4gZnVuY3Rpb24gKHN0cmluZykge1xyXG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xyXG4gICAgdmFyIHdpZHRoID0gb3B0aW9ucy53aWR0aDtcclxuICAgIHZhciBtYXRjaFBhdHRlcm4gPSB3aWR0aCAmJiBhcmdzLm1hdGNoUGF0dGVybnNbd2lkdGhdIHx8IGFyZ3MubWF0Y2hQYXR0ZXJuc1thcmdzLmRlZmF1bHRNYXRjaFdpZHRoXTtcclxuICAgIHZhciBtYXRjaFJlc3VsdCA9IHN0cmluZy5tYXRjaChtYXRjaFBhdHRlcm4pO1xyXG5cclxuICAgIGlmICghbWF0Y2hSZXN1bHQpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIG1hdGNoZWRTdHJpbmcgPSBtYXRjaFJlc3VsdFswXTtcclxuICAgIHZhciBwYXJzZVBhdHRlcm5zID0gd2lkdGggJiYgYXJncy5wYXJzZVBhdHRlcm5zW3dpZHRoXSB8fCBhcmdzLnBhcnNlUGF0dGVybnNbYXJncy5kZWZhdWx0UGFyc2VXaWR0aF07XHJcbiAgICB2YXIga2V5ID0gQXJyYXkuaXNBcnJheShwYXJzZVBhdHRlcm5zKSA/IGZpbmRJbmRleChwYXJzZVBhdHRlcm5zLCBmdW5jdGlvbiAocGF0dGVybikge1xyXG4gICAgICByZXR1cm4gcGF0dGVybi50ZXN0KG1hdGNoZWRTdHJpbmcpO1xyXG4gICAgfSkgOiBmaW5kS2V5KHBhcnNlUGF0dGVybnMsIGZ1bmN0aW9uIChwYXR0ZXJuKSB7XHJcbiAgICAgIHJldHVybiBwYXR0ZXJuLnRlc3QobWF0Y2hlZFN0cmluZyk7XHJcbiAgICB9KTtcclxuICAgIHZhciB2YWx1ZTtcclxuICAgIHZhbHVlID0gYXJncy52YWx1ZUNhbGxiYWNrID8gYXJncy52YWx1ZUNhbGxiYWNrKGtleSkgOiBrZXk7XHJcbiAgICB2YWx1ZSA9IG9wdGlvbnMudmFsdWVDYWxsYmFjayA/IG9wdGlvbnMudmFsdWVDYWxsYmFjayh2YWx1ZSkgOiB2YWx1ZTtcclxuICAgIHZhciByZXN0ID0gc3RyaW5nLnNsaWNlKG1hdGNoZWRTdHJpbmcubGVuZ3RoKTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHZhbHVlOiB2YWx1ZSxcclxuICAgICAgcmVzdDogcmVzdFxyXG4gICAgfTtcclxuICB9O1xyXG59XHJcblxyXG5mdW5jdGlvbiBmaW5kS2V5KG9iamVjdCwgcHJlZGljYXRlKSB7XHJcbiAgZm9yICh2YXIga2V5IGluIG9iamVjdCkge1xyXG4gICAgaWYgKG9iamVjdC5oYXNPd25Qcm9wZXJ0eShrZXkpICYmIHByZWRpY2F0ZShvYmplY3Rba2V5XSkpIHtcclxuICAgICAgcmV0dXJuIGtleTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiB1bmRlZmluZWQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZpbmRJbmRleChhcnJheSwgcHJlZGljYXRlKSB7XHJcbiAgZm9yICh2YXIga2V5ID0gMDsga2V5IDwgYXJyYXkubGVuZ3RoOyBrZXkrKykge1xyXG4gICAgaWYgKHByZWRpY2F0ZShhcnJheVtrZXldKSkge1xyXG4gICAgICByZXR1cm4ga2V5O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHVuZGVmaW5lZDtcclxufSIsImltcG9ydCBidWlsZE1hdGNoRm4gZnJvbSBcIi4uLy4uLy4uL19saWIvYnVpbGRNYXRjaEZuL2luZGV4LmpzXCI7XHJcbmltcG9ydCBidWlsZE1hdGNoUGF0dGVybkZuIGZyb20gXCIuLi8uLi8uLi9fbGliL2J1aWxkTWF0Y2hQYXR0ZXJuRm4vaW5kZXguanNcIjtcclxudmFyIG1hdGNoT3JkaW5hbE51bWJlclBhdHRlcm4gPSAvXihcXGQrKSh0aHxzdHxuZHxyZCk/L2k7XHJcbnZhciBwYXJzZU9yZGluYWxOdW1iZXJQYXR0ZXJuID0gL1xcZCsvaTtcclxudmFyIG1hdGNoRXJhUGF0dGVybnMgPSB7XHJcbiAgbmFycm93OiAvXihifGEpL2ksXHJcbiAgYWJicmV2aWF0ZWQ6IC9eKGJcXC4/XFxzP2NcXC4/fGJcXC4/XFxzP2NcXC4/XFxzP2VcXC4/fGFcXC4/XFxzP2RcXC4/fGNcXC4/XFxzP2VcXC4/KS9pLFxyXG4gIHdpZGU6IC9eKGJlZm9yZSBjaHJpc3R8YmVmb3JlIGNvbW1vbiBlcmF8YW5ubyBkb21pbml8Y29tbW9uIGVyYSkvaVxyXG59O1xyXG52YXIgcGFyc2VFcmFQYXR0ZXJucyA9IHtcclxuICBhbnk6IFsvXmIvaSwgL14oYXxjKS9pXVxyXG59O1xyXG52YXIgbWF0Y2hRdWFydGVyUGF0dGVybnMgPSB7XHJcbiAgbmFycm93OiAvXlsxMjM0XS9pLFxyXG4gIGFiYnJldmlhdGVkOiAvXnFbMTIzNF0vaSxcclxuICB3aWRlOiAvXlsxMjM0XSh0aHxzdHxuZHxyZCk/IHF1YXJ0ZXIvaVxyXG59O1xyXG52YXIgcGFyc2VRdWFydGVyUGF0dGVybnMgPSB7XHJcbiAgYW55OiBbLzEvaSwgLzIvaSwgLzMvaSwgLzQvaV1cclxufTtcclxudmFyIG1hdGNoTW9udGhQYXR0ZXJucyA9IHtcclxuICBuYXJyb3c6IC9eW2pmbWFzb25kXS9pLFxyXG4gIGFiYnJldmlhdGVkOiAvXihqYW58ZmVifG1hcnxhcHJ8bWF5fGp1bnxqdWx8YXVnfHNlcHxvY3R8bm92fGRlYykvaSxcclxuICB3aWRlOiAvXihqYW51YXJ5fGZlYnJ1YXJ5fG1hcmNofGFwcmlsfG1heXxqdW5lfGp1bHl8YXVndXN0fHNlcHRlbWJlcnxvY3RvYmVyfG5vdmVtYmVyfGRlY2VtYmVyKS9pXHJcbn07XHJcbnZhciBwYXJzZU1vbnRoUGF0dGVybnMgPSB7XHJcbiAgbmFycm93OiBbL15qL2ksIC9eZi9pLCAvXm0vaSwgL15hL2ksIC9ebS9pLCAvXmovaSwgL15qL2ksIC9eYS9pLCAvXnMvaSwgL15vL2ksIC9ebi9pLCAvXmQvaV0sXHJcbiAgYW55OiBbL15qYS9pLCAvXmYvaSwgL15tYXIvaSwgL15hcC9pLCAvXm1heS9pLCAvXmp1bi9pLCAvXmp1bC9pLCAvXmF1L2ksIC9ecy9pLCAvXm8vaSwgL15uL2ksIC9eZC9pXVxyXG59O1xyXG52YXIgbWF0Y2hEYXlQYXR0ZXJucyA9IHtcclxuICBuYXJyb3c6IC9eW3NtdHdmXS9pLFxyXG4gIHNob3J0OiAvXihzdXxtb3x0dXx3ZXx0aHxmcnxzYSkvaSxcclxuICBhYmJyZXZpYXRlZDogL14oc3VufG1vbnx0dWV8d2VkfHRodXxmcml8c2F0KS9pLFxyXG4gIHdpZGU6IC9eKHN1bmRheXxtb25kYXl8dHVlc2RheXx3ZWRuZXNkYXl8dGh1cnNkYXl8ZnJpZGF5fHNhdHVyZGF5KS9pXHJcbn07XHJcbnZhciBwYXJzZURheVBhdHRlcm5zID0ge1xyXG4gIG5hcnJvdzogWy9ecy9pLCAvXm0vaSwgL150L2ksIC9edy9pLCAvXnQvaSwgL15mL2ksIC9ecy9pXSxcclxuICBhbnk6IFsvXnN1L2ksIC9ebS9pLCAvXnR1L2ksIC9edy9pLCAvXnRoL2ksIC9eZi9pLCAvXnNhL2ldXHJcbn07XHJcbnZhciBtYXRjaERheVBlcmlvZFBhdHRlcm5zID0ge1xyXG4gIG5hcnJvdzogL14oYXxwfG1pfG58KGluIHRoZXxhdCkgKG1vcm5pbmd8YWZ0ZXJub29ufGV2ZW5pbmd8bmlnaHQpKS9pLFxyXG4gIGFueTogL14oW2FwXVxcLj9cXHM/bVxcLj98bWlkbmlnaHR8bm9vbnwoaW4gdGhlfGF0KSAobW9ybmluZ3xhZnRlcm5vb258ZXZlbmluZ3xuaWdodCkpL2lcclxufTtcclxudmFyIHBhcnNlRGF5UGVyaW9kUGF0dGVybnMgPSB7XHJcbiAgYW55OiB7XHJcbiAgICBhbTogL15hL2ksXHJcbiAgICBwbTogL15wL2ksXHJcbiAgICBtaWRuaWdodDogL15taS9pLFxyXG4gICAgbm9vbjogL15uby9pLFxyXG4gICAgbW9ybmluZzogL21vcm5pbmcvaSxcclxuICAgIGFmdGVybm9vbjogL2FmdGVybm9vbi9pLFxyXG4gICAgZXZlbmluZzogL2V2ZW5pbmcvaSxcclxuICAgIG5pZ2h0OiAvbmlnaHQvaVxyXG4gIH1cclxufTtcclxudmFyIG1hdGNoID0ge1xyXG4gIG9yZGluYWxOdW1iZXI6IGJ1aWxkTWF0Y2hQYXR0ZXJuRm4oe1xyXG4gICAgbWF0Y2hQYXR0ZXJuOiBtYXRjaE9yZGluYWxOdW1iZXJQYXR0ZXJuLFxyXG4gICAgcGFyc2VQYXR0ZXJuOiBwYXJzZU9yZGluYWxOdW1iZXJQYXR0ZXJuLFxyXG4gICAgdmFsdWVDYWxsYmFjazogZnVuY3Rpb24gdmFsdWVDYWxsYmFjayh2YWx1ZSkge1xyXG4gICAgICByZXR1cm4gcGFyc2VJbnQodmFsdWUsIDEwKTtcclxuICAgIH1cclxuICB9KSxcclxuICBlcmE6IGJ1aWxkTWF0Y2hGbih7XHJcbiAgICBtYXRjaFBhdHRlcm5zOiBtYXRjaEVyYVBhdHRlcm5zLFxyXG4gICAgZGVmYXVsdE1hdGNoV2lkdGg6ICd3aWRlJyxcclxuICAgIHBhcnNlUGF0dGVybnM6IHBhcnNlRXJhUGF0dGVybnMsXHJcbiAgICBkZWZhdWx0UGFyc2VXaWR0aDogJ2FueSdcclxuICB9KSxcclxuICBxdWFydGVyOiBidWlsZE1hdGNoRm4oe1xyXG4gICAgbWF0Y2hQYXR0ZXJuczogbWF0Y2hRdWFydGVyUGF0dGVybnMsXHJcbiAgICBkZWZhdWx0TWF0Y2hXaWR0aDogJ3dpZGUnLFxyXG4gICAgcGFyc2VQYXR0ZXJuczogcGFyc2VRdWFydGVyUGF0dGVybnMsXHJcbiAgICBkZWZhdWx0UGFyc2VXaWR0aDogJ2FueScsXHJcbiAgICB2YWx1ZUNhbGxiYWNrOiBmdW5jdGlvbiB2YWx1ZUNhbGxiYWNrKGluZGV4KSB7XHJcbiAgICAgIHJldHVybiBpbmRleCArIDE7XHJcbiAgICB9XHJcbiAgfSksXHJcbiAgbW9udGg6IGJ1aWxkTWF0Y2hGbih7XHJcbiAgICBtYXRjaFBhdHRlcm5zOiBtYXRjaE1vbnRoUGF0dGVybnMsXHJcbiAgICBkZWZhdWx0TWF0Y2hXaWR0aDogJ3dpZGUnLFxyXG4gICAgcGFyc2VQYXR0ZXJuczogcGFyc2VNb250aFBhdHRlcm5zLFxyXG4gICAgZGVmYXVsdFBhcnNlV2lkdGg6ICdhbnknXHJcbiAgfSksXHJcbiAgZGF5OiBidWlsZE1hdGNoRm4oe1xyXG4gICAgbWF0Y2hQYXR0ZXJuczogbWF0Y2hEYXlQYXR0ZXJucyxcclxuICAgIGRlZmF1bHRNYXRjaFdpZHRoOiAnd2lkZScsXHJcbiAgICBwYXJzZVBhdHRlcm5zOiBwYXJzZURheVBhdHRlcm5zLFxyXG4gICAgZGVmYXVsdFBhcnNlV2lkdGg6ICdhbnknXHJcbiAgfSksXHJcbiAgZGF5UGVyaW9kOiBidWlsZE1hdGNoRm4oe1xyXG4gICAgbWF0Y2hQYXR0ZXJuczogbWF0Y2hEYXlQZXJpb2RQYXR0ZXJucyxcclxuICAgIGRlZmF1bHRNYXRjaFdpZHRoOiAnYW55JyxcclxuICAgIHBhcnNlUGF0dGVybnM6IHBhcnNlRGF5UGVyaW9kUGF0dGVybnMsXHJcbiAgICBkZWZhdWx0UGFyc2VXaWR0aDogJ2FueSdcclxuICB9KVxyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBtYXRjaDsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBidWlsZE1hdGNoUGF0dGVybkZuKGFyZ3MpIHtcclxuICByZXR1cm4gZnVuY3Rpb24gKHN0cmluZykge1xyXG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xyXG4gICAgdmFyIG1hdGNoUmVzdWx0ID0gc3RyaW5nLm1hdGNoKGFyZ3MubWF0Y2hQYXR0ZXJuKTtcclxuICAgIGlmICghbWF0Y2hSZXN1bHQpIHJldHVybiBudWxsO1xyXG4gICAgdmFyIG1hdGNoZWRTdHJpbmcgPSBtYXRjaFJlc3VsdFswXTtcclxuICAgIHZhciBwYXJzZVJlc3VsdCA9IHN0cmluZy5tYXRjaChhcmdzLnBhcnNlUGF0dGVybik7XHJcbiAgICBpZiAoIXBhcnNlUmVzdWx0KSByZXR1cm4gbnVsbDtcclxuICAgIHZhciB2YWx1ZSA9IGFyZ3MudmFsdWVDYWxsYmFjayA/IGFyZ3MudmFsdWVDYWxsYmFjayhwYXJzZVJlc3VsdFswXSkgOiBwYXJzZVJlc3VsdFswXTtcclxuICAgIHZhbHVlID0gb3B0aW9ucy52YWx1ZUNhbGxiYWNrID8gb3B0aW9ucy52YWx1ZUNhbGxiYWNrKHZhbHVlKSA6IHZhbHVlO1xyXG4gICAgdmFyIHJlc3QgPSBzdHJpbmcuc2xpY2UobWF0Y2hlZFN0cmluZy5sZW5ndGgpO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgdmFsdWU6IHZhbHVlLFxyXG4gICAgICByZXN0OiByZXN0XHJcbiAgICB9O1xyXG4gIH07XHJcbn0iLCJpbXBvcnQgZm9ybWF0RGlzdGFuY2UgZnJvbSBcIi4vX2xpYi9mb3JtYXREaXN0YW5jZS9pbmRleC5qc1wiO1xyXG5pbXBvcnQgZm9ybWF0TG9uZyBmcm9tIFwiLi9fbGliL2Zvcm1hdExvbmcvaW5kZXguanNcIjtcclxuaW1wb3J0IGZvcm1hdFJlbGF0aXZlIGZyb20gXCIuL19saWIvZm9ybWF0UmVsYXRpdmUvaW5kZXguanNcIjtcclxuaW1wb3J0IGxvY2FsaXplIGZyb20gXCIuL19saWIvbG9jYWxpemUvaW5kZXguanNcIjtcclxuaW1wb3J0IG1hdGNoIGZyb20gXCIuL19saWIvbWF0Y2gvaW5kZXguanNcIjtcclxuXHJcbi8qKlxyXG4gKiBAdHlwZSB7TG9jYWxlfVxyXG4gKiBAY2F0ZWdvcnkgTG9jYWxlc1xyXG4gKiBAc3VtbWFyeSBFbmdsaXNoIGxvY2FsZSAoVW5pdGVkIFN0YXRlcykuXHJcbiAqIEBsYW5ndWFnZSBFbmdsaXNoXHJcbiAqIEBpc28tNjM5LTIgZW5nXHJcbiAqIEBhdXRob3IgU2FzaGEgS29zcyBbQGtvc3Nub2NvcnBde0BsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9rb3Nzbm9jb3JwfVxyXG4gKiBAYXV0aG9yIExlc2hhIEtvc3MgW0BsZXNoYWtvc3Nde0BsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9sZXNoYWtvc3N9XHJcbiAqL1xyXG52YXIgbG9jYWxlID0ge1xyXG4gIGNvZGU6ICdlbi1VUycsXHJcbiAgZm9ybWF0RGlzdGFuY2U6IGZvcm1hdERpc3RhbmNlLFxyXG4gIGZvcm1hdExvbmc6IGZvcm1hdExvbmcsXHJcbiAgZm9ybWF0UmVsYXRpdmU6IGZvcm1hdFJlbGF0aXZlLFxyXG4gIGxvY2FsaXplOiBsb2NhbGl6ZSxcclxuICBtYXRjaDogbWF0Y2gsXHJcbiAgb3B0aW9uczoge1xyXG4gICAgd2Vla1N0YXJ0c09uOiAwXHJcbiAgICAvKiBTdW5kYXkgKi9cclxuICAgICxcclxuICAgIGZpcnN0V2Vla0NvbnRhaW5zRGF0ZTogMVxyXG4gIH1cclxufTtcclxuZXhwb3J0IGRlZmF1bHQgbG9jYWxlOyIsImltcG9ydCBkZWZhdWx0TG9jYWxlIGZyb20gXCIuLi8uLi9sb2NhbGUvZW4tVVMvaW5kZXguanNcIjtcclxuZXhwb3J0IGRlZmF1bHQgZGVmYXVsdExvY2FsZTsiLCJpbXBvcnQgaXNWYWxpZCBmcm9tIFwiLi4vaXNWYWxpZC9pbmRleC5qc1wiO1xyXG5pbXBvcnQgc3ViTWlsbGlzZWNvbmRzIGZyb20gXCIuLi9zdWJNaWxsaXNlY29uZHMvaW5kZXguanNcIjtcclxuaW1wb3J0IHRvRGF0ZSBmcm9tIFwiLi4vdG9EYXRlL2luZGV4LmpzXCI7XHJcbmltcG9ydCBmb3JtYXR0ZXJzIGZyb20gXCIuLi9fbGliL2Zvcm1hdC9mb3JtYXR0ZXJzL2luZGV4LmpzXCI7XHJcbmltcG9ydCBsb25nRm9ybWF0dGVycyBmcm9tIFwiLi4vX2xpYi9mb3JtYXQvbG9uZ0Zvcm1hdHRlcnMvaW5kZXguanNcIjtcclxuaW1wb3J0IGdldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMgZnJvbSBcIi4uL19saWIvZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcy9pbmRleC5qc1wiO1xyXG5pbXBvcnQgeyBpc1Byb3RlY3RlZERheU9mWWVhclRva2VuLCBpc1Byb3RlY3RlZFdlZWtZZWFyVG9rZW4sIHRocm93UHJvdGVjdGVkRXJyb3IgfSBmcm9tIFwiLi4vX2xpYi9wcm90ZWN0ZWRUb2tlbnMvaW5kZXguanNcIjtcclxuaW1wb3J0IHRvSW50ZWdlciBmcm9tIFwiLi4vX2xpYi90b0ludGVnZXIvaW5kZXguanNcIjtcclxuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcclxuaW1wb3J0IHsgZ2V0RGVmYXVsdE9wdGlvbnMgfSBmcm9tIFwiLi4vX2xpYi9kZWZhdWx0T3B0aW9ucy9pbmRleC5qc1wiO1xyXG5pbXBvcnQgZGVmYXVsdExvY2FsZSBmcm9tIFwiLi4vX2xpYi9kZWZhdWx0TG9jYWxlL2luZGV4LmpzXCI7IC8vIFRoaXMgUmVnRXhwIGNvbnNpc3RzIG9mIHRocmVlIHBhcnRzIHNlcGFyYXRlZCBieSBgfGA6XHJcbi8vIC0gW3lZUXFNTHdJZERlY2loSEtrbXNdbyBtYXRjaGVzIGFueSBhdmFpbGFibGUgb3JkaW5hbCBudW1iZXIgdG9rZW5cclxuLy8gICAob25lIG9mIHRoZSBjZXJ0YWluIGxldHRlcnMgZm9sbG93ZWQgYnkgYG9gKVxyXG4vLyAtIChcXHcpXFwxKiBtYXRjaGVzIGFueSBzZXF1ZW5jZXMgb2YgdGhlIHNhbWUgbGV0dGVyXHJcbi8vIC0gJycgbWF0Y2hlcyB0d28gcXVvdGUgY2hhcmFjdGVycyBpbiBhIHJvd1xyXG4vLyAtICcoJyd8W14nXSkrKCd8JCkgbWF0Y2hlcyBhbnl0aGluZyBzdXJyb3VuZGVkIGJ5IHR3byBxdW90ZSBjaGFyYWN0ZXJzICgnKSxcclxuLy8gICBleGNlcHQgYSBzaW5nbGUgcXVvdGUgc3ltYm9sLCB3aGljaCBlbmRzIHRoZSBzZXF1ZW5jZS5cclxuLy8gICBUd28gcXVvdGUgY2hhcmFjdGVycyBkbyBub3QgZW5kIHRoZSBzZXF1ZW5jZS5cclxuLy8gICBJZiB0aGVyZSBpcyBubyBtYXRjaGluZyBzaW5nbGUgcXVvdGVcclxuLy8gICB0aGVuIHRoZSBzZXF1ZW5jZSB3aWxsIGNvbnRpbnVlIHVudGlsIHRoZSBlbmQgb2YgdGhlIHN0cmluZy5cclxuLy8gLSAuIG1hdGNoZXMgYW55IHNpbmdsZSBjaGFyYWN0ZXIgdW5tYXRjaGVkIGJ5IHByZXZpb3VzIHBhcnRzIG9mIHRoZSBSZWdFeHBzXHJcblxyXG52YXIgZm9ybWF0dGluZ1Rva2Vuc1JlZ0V4cCA9IC9beVlRcU1Md0lkRGVjaWhIS2ttc11vfChcXHcpXFwxKnwnJ3wnKCcnfFteJ10pKygnfCQpfC4vZzsgLy8gVGhpcyBSZWdFeHAgY2F0Y2hlcyBzeW1ib2xzIGVzY2FwZWQgYnkgcXVvdGVzLCBhbmQgYWxzb1xyXG4vLyBzZXF1ZW5jZXMgb2Ygc3ltYm9scyBQLCBwLCBhbmQgdGhlIGNvbWJpbmF0aW9ucyBsaWtlIGBQUFBQUFBQcHBwcHBgXHJcblxyXG52YXIgbG9uZ0Zvcm1hdHRpbmdUb2tlbnNSZWdFeHAgPSAvUCtwK3xQK3xwK3wnJ3wnKCcnfFteJ10pKygnfCQpfC4vZztcclxudmFyIGVzY2FwZWRTdHJpbmdSZWdFeHAgPSAvXicoW15dKj8pJz8kLztcclxudmFyIGRvdWJsZVF1b3RlUmVnRXhwID0gLycnL2c7XHJcbnZhciB1bmVzY2FwZWRMYXRpbkNoYXJhY3RlclJlZ0V4cCA9IC9bYS16QS1aXS87XHJcbi8qKlxyXG4gKiBAbmFtZSBmb3JtYXRcclxuICogQGNhdGVnb3J5IENvbW1vbiBIZWxwZXJzXHJcbiAqIEBzdW1tYXJ5IEZvcm1hdCB0aGUgZGF0ZS5cclxuICpcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqIFJldHVybiB0aGUgZm9ybWF0dGVkIGRhdGUgc3RyaW5nIGluIHRoZSBnaXZlbiBmb3JtYXQuIFRoZSByZXN1bHQgbWF5IHZhcnkgYnkgbG9jYWxlLlxyXG4gKlxyXG4gKiA+IOKaoO+4jyBQbGVhc2Ugbm90ZSB0aGF0IHRoZSBgZm9ybWF0YCB0b2tlbnMgZGlmZmVyIGZyb20gTW9tZW50LmpzIGFuZCBvdGhlciBsaWJyYXJpZXMuXHJcbiAqID4gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91bmljb2RlVG9rZW5zLm1kXHJcbiAqXHJcbiAqIFRoZSBjaGFyYWN0ZXJzIHdyYXBwZWQgYmV0d2VlbiB0d28gc2luZ2xlIHF1b3RlcyBjaGFyYWN0ZXJzICgnKSBhcmUgZXNjYXBlZC5cclxuICogVHdvIHNpbmdsZSBxdW90ZXMgaW4gYSByb3csIHdoZXRoZXIgaW5zaWRlIG9yIG91dHNpZGUgYSBxdW90ZWQgc2VxdWVuY2UsIHJlcHJlc2VudCBhICdyZWFsJyBzaW5nbGUgcXVvdGUuXHJcbiAqIChzZWUgdGhlIGxhc3QgZXhhbXBsZSlcclxuICpcclxuICogRm9ybWF0IG9mIHRoZSBzdHJpbmcgaXMgYmFzZWQgb24gVW5pY29kZSBUZWNobmljYWwgU3RhbmRhcmQgIzM1OlxyXG4gKiBodHRwczovL3d3dy51bmljb2RlLm9yZy9yZXBvcnRzL3RyMzUvdHIzNS1kYXRlcy5odG1sI0RhdGVfRmllbGRfU3ltYm9sX1RhYmxlXHJcbiAqIHdpdGggYSBmZXcgYWRkaXRpb25zIChzZWUgbm90ZSA3IGJlbG93IHRoZSB0YWJsZSkuXHJcbiAqXHJcbiAqIEFjY2VwdGVkIHBhdHRlcm5zOlxyXG4gKiB8IFVuaXQgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBQYXR0ZXJuIHwgUmVzdWx0IGV4YW1wbGVzICAgICAgICAgICAgICAgICAgIHwgTm90ZXMgfFxyXG4gKiB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tfFxyXG4gKiB8IEVyYSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBHLi5HR0cgIHwgQUQsIEJDICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBHR0dHICAgIHwgQW5ubyBEb21pbmksIEJlZm9yZSBDaHJpc3QgICAgICAgIHwgMiAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBHR0dHRyAgIHwgQSwgQiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8IENhbGVuZGFyIHllYXIgICAgICAgICAgICAgICAgICAgfCB5ICAgICAgIHwgNDQsIDEsIDE5MDAsIDIwMTcgICAgICAgICAgICAgICAgIHwgNSAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB5byAgICAgIHwgNDR0aCwgMXN0LCAwdGgsIDE3dGggICAgICAgICAgICAgIHwgNSw3ICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB5eSAgICAgIHwgNDQsIDAxLCAwMCwgMTcgICAgICAgICAgICAgICAgICAgIHwgNSAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB5eXkgICAgIHwgMDQ0LCAwMDEsIDE5MDAsIDIwMTcgICAgICAgICAgICAgIHwgNSAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB5eXl5ICAgIHwgMDA0NCwgMDAwMSwgMTkwMCwgMjAxNyAgICAgICAgICAgIHwgNSAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB5eXl5eSAgIHwgLi4uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMyw1ICAgfFxyXG4gKiB8IExvY2FsIHdlZWstbnVtYmVyaW5nIHllYXIgICAgICAgfCBZICAgICAgIHwgNDQsIDEsIDE5MDAsIDIwMTcgICAgICAgICAgICAgICAgIHwgNSAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBZbyAgICAgIHwgNDR0aCwgMXN0LCAxOTAwdGgsIDIwMTd0aCAgICAgICAgIHwgNSw3ICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBZWSAgICAgIHwgNDQsIDAxLCAwMCwgMTcgICAgICAgICAgICAgICAgICAgIHwgNSw4ICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBZWVkgICAgIHwgMDQ0LCAwMDEsIDE5MDAsIDIwMTcgICAgICAgICAgICAgIHwgNSAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBZWVlZICAgIHwgMDA0NCwgMDAwMSwgMTkwMCwgMjAxNyAgICAgICAgICAgIHwgNSw4ICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBZWVlZWSAgIHwgLi4uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMyw1ICAgfFxyXG4gKiB8IElTTyB3ZWVrLW51bWJlcmluZyB5ZWFyICAgICAgICAgfCBSICAgICAgIHwgLTQzLCAwLCAxLCAxOTAwLCAyMDE3ICAgICAgICAgICAgIHwgNSw3ICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBSUiAgICAgIHwgLTQzLCAwMCwgMDEsIDE5MDAsIDIwMTcgICAgICAgICAgIHwgNSw3ICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBSUlIgICAgIHwgLTA0MywgMDAwLCAwMDEsIDE5MDAsIDIwMTcgICAgICAgIHwgNSw3ICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBSUlJSICAgIHwgLTAwNDMsIDAwMDAsIDAwMDEsIDE5MDAsIDIwMTcgICAgIHwgNSw3ICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBSUlJSUiAgIHwgLi4uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMyw1LDcgfFxyXG4gKiB8IEV4dGVuZGVkIHllYXIgICAgICAgICAgICAgICAgICAgfCB1ICAgICAgIHwgLTQzLCAwLCAxLCAxOTAwLCAyMDE3ICAgICAgICAgICAgIHwgNSAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB1dSAgICAgIHwgLTQzLCAwMSwgMTkwMCwgMjAxNyAgICAgICAgICAgICAgIHwgNSAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB1dXUgICAgIHwgLTA0MywgMDAxLCAxOTAwLCAyMDE3ICAgICAgICAgICAgIHwgNSAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB1dXV1ICAgIHwgLTAwNDMsIDAwMDEsIDE5MDAsIDIwMTcgICAgICAgICAgIHwgNSAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB1dXV1dSAgIHwgLi4uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMyw1ICAgfFxyXG4gKiB8IFF1YXJ0ZXIgKGZvcm1hdHRpbmcpICAgICAgICAgICAgfCBRICAgICAgIHwgMSwgMiwgMywgNCAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBRbyAgICAgIHwgMXN0LCAybmQsIDNyZCwgNHRoICAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBRUSAgICAgIHwgMDEsIDAyLCAwMywgMDQgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBRUVEgICAgIHwgUTEsIFEyLCBRMywgUTQgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBRUVFRICAgIHwgMXN0IHF1YXJ0ZXIsIDJuZCBxdWFydGVyLCAuLi4gICAgIHwgMiAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBRUVFRUSAgIHwgMSwgMiwgMywgNCAgICAgICAgICAgICAgICAgICAgICAgIHwgNCAgICAgfFxyXG4gKiB8IFF1YXJ0ZXIgKHN0YW5kLWFsb25lKSAgICAgICAgICAgfCBxICAgICAgIHwgMSwgMiwgMywgNCAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBxbyAgICAgIHwgMXN0LCAybmQsIDNyZCwgNHRoICAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBxcSAgICAgIHwgMDEsIDAyLCAwMywgMDQgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBxcXEgICAgIHwgUTEsIFEyLCBRMywgUTQgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBxcXFxICAgIHwgMXN0IHF1YXJ0ZXIsIDJuZCBxdWFydGVyLCAuLi4gICAgIHwgMiAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBxcXFxcSAgIHwgMSwgMiwgMywgNCAgICAgICAgICAgICAgICAgICAgICAgIHwgNCAgICAgfFxyXG4gKiB8IE1vbnRoIChmb3JtYXR0aW5nKSAgICAgICAgICAgICAgfCBNICAgICAgIHwgMSwgMiwgLi4uLCAxMiAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBNbyAgICAgIHwgMXN0LCAybmQsIC4uLiwgMTJ0aCAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBNTSAgICAgIHwgMDEsIDAyLCAuLi4sIDEyICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBNTU0gICAgIHwgSmFuLCBGZWIsIC4uLiwgRGVjICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBNTU1NICAgIHwgSmFudWFyeSwgRmVicnVhcnksIC4uLiwgRGVjZW1iZXIgIHwgMiAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBNTU1NTSAgIHwgSiwgRiwgLi4uLCBEICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8IE1vbnRoIChzdGFuZC1hbG9uZSkgICAgICAgICAgICAgfCBMICAgICAgIHwgMSwgMiwgLi4uLCAxMiAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBMbyAgICAgIHwgMXN0LCAybmQsIC4uLiwgMTJ0aCAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBMTCAgICAgIHwgMDEsIDAyLCAuLi4sIDEyICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBMTEwgICAgIHwgSmFuLCBGZWIsIC4uLiwgRGVjICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBMTExMICAgIHwgSmFudWFyeSwgRmVicnVhcnksIC4uLiwgRGVjZW1iZXIgIHwgMiAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBMTExMTCAgIHwgSiwgRiwgLi4uLCBEICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8IExvY2FsIHdlZWsgb2YgeWVhciAgICAgICAgICAgICAgfCB3ICAgICAgIHwgMSwgMiwgLi4uLCA1MyAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB3byAgICAgIHwgMXN0LCAybmQsIC4uLiwgNTN0aCAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB3dyAgICAgIHwgMDEsIDAyLCAuLi4sIDUzICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8IElTTyB3ZWVrIG9mIHllYXIgICAgICAgICAgICAgICAgfCBJICAgICAgIHwgMSwgMiwgLi4uLCA1MyAgICAgICAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBJbyAgICAgIHwgMXN0LCAybmQsIC4uLiwgNTN0aCAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBJSSAgICAgIHwgMDEsIDAyLCAuLi4sIDUzICAgICAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8IERheSBvZiBtb250aCAgICAgICAgICAgICAgICAgICAgfCBkICAgICAgIHwgMSwgMiwgLi4uLCAzMSAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBkbyAgICAgIHwgMXN0LCAybmQsIC4uLiwgMzFzdCAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBkZCAgICAgIHwgMDEsIDAyLCAuLi4sIDMxICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8IERheSBvZiB5ZWFyICAgICAgICAgICAgICAgICAgICAgfCBEICAgICAgIHwgMSwgMiwgLi4uLCAzNjUsIDM2NiAgICAgICAgICAgICAgIHwgOSAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBEbyAgICAgIHwgMXN0LCAybmQsIC4uLiwgMzY1dGgsIDM2NnRoICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBERCAgICAgIHwgMDEsIDAyLCAuLi4sIDM2NSwgMzY2ICAgICAgICAgICAgIHwgOSAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBEREQgICAgIHwgMDAxLCAwMDIsIC4uLiwgMzY1LCAzNjYgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBEREREICAgIHwgLi4uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMyAgICAgfFxyXG4gKiB8IERheSBvZiB3ZWVrIChmb3JtYXR0aW5nKSAgICAgICAgfCBFLi5FRUUgIHwgTW9uLCBUdWUsIFdlZCwgLi4uLCBTdW4gICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBFRUVFICAgIHwgTW9uZGF5LCBUdWVzZGF5LCAuLi4sIFN1bmRheSAgICAgIHwgMiAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBFRUVFRSAgIHwgTSwgVCwgVywgVCwgRiwgUywgUyAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBFRUVFRUUgIHwgTW8sIFR1LCBXZSwgVGgsIEZyLCBTYSwgU3UgICAgICAgIHwgICAgICAgfFxyXG4gKiB8IElTTyBkYXkgb2Ygd2VlayAoZm9ybWF0dGluZykgICAgfCBpICAgICAgIHwgMSwgMiwgMywgLi4uLCA3ICAgICAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBpbyAgICAgIHwgMXN0LCAybmQsIC4uLiwgN3RoICAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBpaSAgICAgIHwgMDEsIDAyLCAuLi4sIDA3ICAgICAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBpaWkgICAgIHwgTW9uLCBUdWUsIFdlZCwgLi4uLCBTdW4gICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBpaWlpICAgIHwgTW9uZGF5LCBUdWVzZGF5LCAuLi4sIFN1bmRheSAgICAgIHwgMiw3ICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBpaWlpaSAgIHwgTSwgVCwgVywgVCwgRiwgUywgUyAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBpaWlpaWkgIHwgTW8sIFR1LCBXZSwgVGgsIEZyLCBTYSwgU3UgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8IExvY2FsIGRheSBvZiB3ZWVrIChmb3JtYXR0aW5nKSAgfCBlICAgICAgIHwgMiwgMywgNCwgLi4uLCAxICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBlbyAgICAgIHwgMm5kLCAzcmQsIC4uLiwgMXN0ICAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBlZSAgICAgIHwgMDIsIDAzLCAuLi4sIDAxICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBlZWUgICAgIHwgTW9uLCBUdWUsIFdlZCwgLi4uLCBTdW4gICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBlZWVlICAgIHwgTW9uZGF5LCBUdWVzZGF5LCAuLi4sIFN1bmRheSAgICAgIHwgMiAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBlZWVlZSAgIHwgTSwgVCwgVywgVCwgRiwgUywgUyAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBlZWVlZWUgIHwgTW8sIFR1LCBXZSwgVGgsIEZyLCBTYSwgU3UgICAgICAgIHwgICAgICAgfFxyXG4gKiB8IExvY2FsIGRheSBvZiB3ZWVrIChzdGFuZC1hbG9uZSkgfCBjICAgICAgIHwgMiwgMywgNCwgLi4uLCAxICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBjbyAgICAgIHwgMm5kLCAzcmQsIC4uLiwgMXN0ICAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBjYyAgICAgIHwgMDIsIDAzLCAuLi4sIDAxICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBjY2MgICAgIHwgTW9uLCBUdWUsIFdlZCwgLi4uLCBTdW4gICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBjY2NjICAgIHwgTW9uZGF5LCBUdWVzZGF5LCAuLi4sIFN1bmRheSAgICAgIHwgMiAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBjY2NjYyAgIHwgTSwgVCwgVywgVCwgRiwgUywgUyAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBjY2NjY2MgIHwgTW8sIFR1LCBXZSwgVGgsIEZyLCBTYSwgU3UgICAgICAgIHwgICAgICAgfFxyXG4gKiB8IEFNLCBQTSAgICAgICAgICAgICAgICAgICAgICAgICAgfCBhLi5hYSAgIHwgQU0sIFBNICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBhYWEgICAgIHwgYW0sIHBtICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBhYWFhICAgIHwgYS5tLiwgcC5tLiAgICAgICAgICAgICAgICAgICAgICAgIHwgMiAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBhYWFhYSAgIHwgYSwgcCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8IEFNLCBQTSwgbm9vbiwgbWlkbmlnaHQgICAgICAgICAgfCBiLi5iYiAgIHwgQU0sIFBNLCBub29uLCBtaWRuaWdodCAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBiYmIgICAgIHwgYW0sIHBtLCBub29uLCBtaWRuaWdodCAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBiYmJiICAgIHwgYS5tLiwgcC5tLiwgbm9vbiwgbWlkbmlnaHQgICAgICAgIHwgMiAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBiYmJiYiAgIHwgYSwgcCwgbiwgbWkgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8IEZsZXhpYmxlIGRheSBwZXJpb2QgICAgICAgICAgICAgfCBCLi5CQkIgIHwgYXQgbmlnaHQsIGluIHRoZSBtb3JuaW5nLCAuLi4gICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBCQkJCICAgIHwgYXQgbmlnaHQsIGluIHRoZSBtb3JuaW5nLCAuLi4gICAgIHwgMiAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBCQkJCQiAgIHwgYXQgbmlnaHQsIGluIHRoZSBtb3JuaW5nLCAuLi4gICAgIHwgICAgICAgfFxyXG4gKiB8IEhvdXIgWzEtMTJdICAgICAgICAgICAgICAgICAgICAgfCBoICAgICAgIHwgMSwgMiwgLi4uLCAxMSwgMTIgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBobyAgICAgIHwgMXN0LCAybmQsIC4uLiwgMTF0aCwgMTJ0aCAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBoaCAgICAgIHwgMDEsIDAyLCAuLi4sIDExLCAxMiAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8IEhvdXIgWzAtMjNdICAgICAgICAgICAgICAgICAgICAgfCBIICAgICAgIHwgMCwgMSwgMiwgLi4uLCAyMyAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBIbyAgICAgIHwgMHRoLCAxc3QsIDJuZCwgLi4uLCAyM3JkICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBISCAgICAgIHwgMDAsIDAxLCAwMiwgLi4uLCAyMyAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8IEhvdXIgWzAtMTFdICAgICAgICAgICAgICAgICAgICAgfCBLICAgICAgIHwgMSwgMiwgLi4uLCAxMSwgMCAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBLbyAgICAgIHwgMXN0LCAybmQsIC4uLiwgMTF0aCwgMHRoICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBLSyAgICAgIHwgMDEsIDAyLCAuLi4sIDExLCAwMCAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8IEhvdXIgWzEtMjRdICAgICAgICAgICAgICAgICAgICAgfCBrICAgICAgIHwgMjQsIDEsIDIsIC4uLiwgMjMgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBrbyAgICAgIHwgMjR0aCwgMXN0LCAybmQsIC4uLiwgMjNyZCAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBrayAgICAgIHwgMjQsIDAxLCAwMiwgLi4uLCAyMyAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8IE1pbnV0ZSAgICAgICAgICAgICAgICAgICAgICAgICAgfCBtICAgICAgIHwgMCwgMSwgLi4uLCA1OSAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBtbyAgICAgIHwgMHRoLCAxc3QsIC4uLiwgNTl0aCAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBtbSAgICAgIHwgMDAsIDAxLCAuLi4sIDU5ICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8IFNlY29uZCAgICAgICAgICAgICAgICAgICAgICAgICAgfCBzICAgICAgIHwgMCwgMSwgLi4uLCA1OSAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBzbyAgICAgIHwgMHRoLCAxc3QsIC4uLiwgNTl0aCAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBzcyAgICAgIHwgMDAsIDAxLCAuLi4sIDU5ICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8IEZyYWN0aW9uIG9mIHNlY29uZCAgICAgICAgICAgICAgfCBTICAgICAgIHwgMCwgMSwgLi4uLCA5ICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBTUyAgICAgIHwgMDAsIDAxLCAuLi4sIDk5ICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBTU1MgICAgIHwgMDAwLCAwMDEsIC4uLiwgOTk5ICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBTU1NTICAgIHwgLi4uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMyAgICAgfFxyXG4gKiB8IFRpbWV6b25lIChJU08tODYwMSB3LyBaKSAgICAgICAgfCBYICAgICAgIHwgLTA4LCArMDUzMCwgWiAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBYWCAgICAgIHwgLTA4MDAsICswNTMwLCBaICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBYWFggICAgIHwgLTA4OjAwLCArMDU6MzAsIFogICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBYWFhYICAgIHwgLTA4MDAsICswNTMwLCBaLCArMTIzNDU2ICAgICAgICAgIHwgMiAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBYWFhYWCAgIHwgLTA4OjAwLCArMDU6MzAsIFosICsxMjozNDo1NiAgICAgIHwgICAgICAgfFxyXG4gKiB8IFRpbWV6b25lIChJU08tODYwMSB3L28gWikgICAgICAgfCB4ICAgICAgIHwgLTA4LCArMDUzMCwgKzAwICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB4eCAgICAgIHwgLTA4MDAsICswNTMwLCArMDAwMCAgICAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB4eHggICAgIHwgLTA4OjAwLCArMDU6MzAsICswMDowMCAgICAgICAgICAgIHwgMiAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB4eHh4ICAgIHwgLTA4MDAsICswNTMwLCArMDAwMCwgKzEyMzQ1NiAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB4eHh4eCAgIHwgLTA4OjAwLCArMDU6MzAsICswMDowMCwgKzEyOjM0OjU2IHwgICAgICAgfFxyXG4gKiB8IFRpbWV6b25lIChHTVQpICAgICAgICAgICAgICAgICAgfCBPLi4uT09PIHwgR01ULTgsIEdNVCs1OjMwLCBHTVQrMCAgICAgICAgICAgIHwgICAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBPT09PICAgIHwgR01ULTA4OjAwLCBHTVQrMDU6MzAsIEdNVCswMDowMCAgIHwgMiAgICAgfFxyXG4gKiB8IFRpbWV6b25lIChzcGVjaWZpYyBub24tbG9jYXQuKSAgfCB6Li4uenp6IHwgR01ULTgsIEdNVCs1OjMwLCBHTVQrMCAgICAgICAgICAgIHwgNiAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB6enp6ICAgIHwgR01ULTA4OjAwLCBHTVQrMDU6MzAsIEdNVCswMDowMCAgIHwgMiw2ICAgfFxyXG4gKiB8IFNlY29uZHMgdGltZXN0YW1wICAgICAgICAgICAgICAgfCB0ICAgICAgIHwgNTEyOTY5NTIwICAgICAgICAgICAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB0dCAgICAgIHwgLi4uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMyw3ICAgfFxyXG4gKiB8IE1pbGxpc2Vjb25kcyB0aW1lc3RhbXAgICAgICAgICAgfCBUICAgICAgIHwgNTEyOTY5NTIwOTAwICAgICAgICAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBUVCAgICAgIHwgLi4uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMyw3ICAgfFxyXG4gKiB8IExvbmcgbG9jYWxpemVkIGRhdGUgICAgICAgICAgICAgfCBQICAgICAgIHwgMDQvMjkvMTQ1MyAgICAgICAgICAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBQUCAgICAgIHwgQXByIDI5LCAxNDUzICAgICAgICAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBQUFAgICAgIHwgQXByaWwgMjl0aCwgMTQ1MyAgICAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBQUFBQICAgIHwgRnJpZGF5LCBBcHJpbCAyOXRoLCAxNDUzICAgICAgICAgIHwgMiw3ICAgfFxyXG4gKiB8IExvbmcgbG9jYWxpemVkIHRpbWUgICAgICAgICAgICAgfCBwICAgICAgIHwgMTI6MDAgQU0gICAgICAgICAgICAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBwcCAgICAgIHwgMTI6MDA6MDAgQU0gICAgICAgICAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBwcHAgICAgIHwgMTI6MDA6MDAgQU0gR01UKzIgICAgICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBwcHBwICAgIHwgMTI6MDA6MDAgQU0gR01UKzAyOjAwICAgICAgICAgICAgIHwgMiw3ICAgfFxyXG4gKiB8IENvbWJpbmF0aW9uIG9mIGRhdGUgYW5kIHRpbWUgICAgfCBQcCAgICAgIHwgMDQvMjkvMTQ1MywgMTI6MDAgQU0gICAgICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBQUHBwICAgIHwgQXByIDI5LCAxNDUzLCAxMjowMDowMCBBTSAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBQUFBwcHAgIHwgQXByaWwgMjl0aCwgMTQ1MyBhdCAuLi4gICAgICAgICAgIHwgNyAgICAgfFxyXG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBQUFBQcHBwcHwgRnJpZGF5LCBBcHJpbCAyOXRoLCAxNDUzIGF0IC4uLiAgIHwgMiw3ICAgfFxyXG4gKiBOb3RlczpcclxuICogMS4gXCJGb3JtYXR0aW5nXCIgdW5pdHMgKGUuZy4gZm9ybWF0dGluZyBxdWFydGVyKSBpbiB0aGUgZGVmYXVsdCBlbi1VUyBsb2NhbGVcclxuICogICAgYXJlIHRoZSBzYW1lIGFzIFwic3RhbmQtYWxvbmVcIiB1bml0cywgYnV0IGFyZSBkaWZmZXJlbnQgaW4gc29tZSBsYW5ndWFnZXMuXHJcbiAqICAgIFwiRm9ybWF0dGluZ1wiIHVuaXRzIGFyZSBkZWNsaW5lZCBhY2NvcmRpbmcgdG8gdGhlIHJ1bGVzIG9mIHRoZSBsYW5ndWFnZVxyXG4gKiAgICBpbiB0aGUgY29udGV4dCBvZiBhIGRhdGUuIFwiU3RhbmQtYWxvbmVcIiB1bml0cyBhcmUgYWx3YXlzIG5vbWluYXRpdmUgc2luZ3VsYXI6XHJcbiAqXHJcbiAqICAgIGBmb3JtYXQobmV3IERhdGUoMjAxNywgMTAsIDYpLCAnZG8gTExMTCcsIHtsb2NhbGU6IGNzfSkgLy89PiAnNi4gbGlzdG9wYWQnYFxyXG4gKlxyXG4gKiAgICBgZm9ybWF0KG5ldyBEYXRlKDIwMTcsIDEwLCA2KSwgJ2RvIE1NTU0nLCB7bG9jYWxlOiBjc30pIC8vPT4gJzYuIGxpc3RvcGFkdSdgXHJcbiAqXHJcbiAqIDIuIEFueSBzZXF1ZW5jZSBvZiB0aGUgaWRlbnRpY2FsIGxldHRlcnMgaXMgYSBwYXR0ZXJuLCB1bmxlc3MgaXQgaXMgZXNjYXBlZCBieVxyXG4gKiAgICB0aGUgc2luZ2xlIHF1b3RlIGNoYXJhY3RlcnMgKHNlZSBiZWxvdykuXHJcbiAqICAgIElmIHRoZSBzZXF1ZW5jZSBpcyBsb25nZXIgdGhhbiBsaXN0ZWQgaW4gdGFibGUgKGUuZy4gYEVFRUVFRUVFRUVFYClcclxuICogICAgdGhlIG91dHB1dCB3aWxsIGJlIHRoZSBzYW1lIGFzIGRlZmF1bHQgcGF0dGVybiBmb3IgdGhpcyB1bml0LCB1c3VhbGx5XHJcbiAqICAgIHRoZSBsb25nZXN0IG9uZSAoaW4gY2FzZSBvZiBJU08gd2Vla2RheXMsIGBFRUVFYCkuIERlZmF1bHQgcGF0dGVybnMgZm9yIHVuaXRzXHJcbiAqICAgIGFyZSBtYXJrZWQgd2l0aCBcIjJcIiBpbiB0aGUgbGFzdCBjb2x1bW4gb2YgdGhlIHRhYmxlLlxyXG4gKlxyXG4gKiAgICBgZm9ybWF0KG5ldyBEYXRlKDIwMTcsIDEwLCA2KSwgJ01NTScpIC8vPT4gJ05vdidgXHJcbiAqXHJcbiAqICAgIGBmb3JtYXQobmV3IERhdGUoMjAxNywgMTAsIDYpLCAnTU1NTScpIC8vPT4gJ05vdmVtYmVyJ2BcclxuICpcclxuICogICAgYGZvcm1hdChuZXcgRGF0ZSgyMDE3LCAxMCwgNiksICdNTU1NTScpIC8vPT4gJ04nYFxyXG4gKlxyXG4gKiAgICBgZm9ybWF0KG5ldyBEYXRlKDIwMTcsIDEwLCA2KSwgJ01NTU1NTScpIC8vPT4gJ05vdmVtYmVyJ2BcclxuICpcclxuICogICAgYGZvcm1hdChuZXcgRGF0ZSgyMDE3LCAxMCwgNiksICdNTU1NTU1NJykgLy89PiAnTm92ZW1iZXInYFxyXG4gKlxyXG4gKiAzLiBTb21lIHBhdHRlcm5zIGNvdWxkIGJlIHVubGltaXRlZCBsZW5ndGggKHN1Y2ggYXMgYHl5eXl5eXl5YCkuXHJcbiAqICAgIFRoZSBvdXRwdXQgd2lsbCBiZSBwYWRkZWQgd2l0aCB6ZXJvcyB0byBtYXRjaCB0aGUgbGVuZ3RoIG9mIHRoZSBwYXR0ZXJuLlxyXG4gKlxyXG4gKiAgICBgZm9ybWF0KG5ldyBEYXRlKDIwMTcsIDEwLCA2KSwgJ3l5eXl5eXl5JykgLy89PiAnMDAwMDIwMTcnYFxyXG4gKlxyXG4gKiA0LiBgUVFRUVFgIGFuZCBgcXFxcXFgIGNvdWxkIGJlIG5vdCBzdHJpY3RseSBudW1lcmljYWwgaW4gc29tZSBsb2NhbGVzLlxyXG4gKiAgICBUaGVzZSB0b2tlbnMgcmVwcmVzZW50IHRoZSBzaG9ydGVzdCBmb3JtIG9mIHRoZSBxdWFydGVyLlxyXG4gKlxyXG4gKiA1LiBUaGUgbWFpbiBkaWZmZXJlbmNlIGJldHdlZW4gYHlgIGFuZCBgdWAgcGF0dGVybnMgYXJlIEIuQy4geWVhcnM6XHJcbiAqXHJcbiAqICAgIHwgWWVhciB8IGB5YCB8IGB1YCB8XHJcbiAqICAgIHwtLS0tLS18LS0tLS18LS0tLS18XHJcbiAqICAgIHwgQUMgMSB8ICAgMSB8ICAgMSB8XHJcbiAqICAgIHwgQkMgMSB8ICAgMSB8ICAgMCB8XHJcbiAqICAgIHwgQkMgMiB8ICAgMiB8ICAtMSB8XHJcbiAqXHJcbiAqICAgIEFsc28gYHl5YCBhbHdheXMgcmV0dXJucyB0aGUgbGFzdCB0d28gZGlnaXRzIG9mIGEgeWVhcixcclxuICogICAgd2hpbGUgYHV1YCBwYWRzIHNpbmdsZSBkaWdpdCB5ZWFycyB0byAyIGNoYXJhY3RlcnMgYW5kIHJldHVybnMgb3RoZXIgeWVhcnMgdW5jaGFuZ2VkOlxyXG4gKlxyXG4gKiAgICB8IFllYXIgfCBgeXlgIHwgYHV1YCB8XHJcbiAqICAgIHwtLS0tLS18LS0tLS0tfC0tLS0tLXxcclxuICogICAgfCAxICAgIHwgICAwMSB8ICAgMDEgfFxyXG4gKiAgICB8IDE0ICAgfCAgIDE0IHwgICAxNCB8XHJcbiAqICAgIHwgMzc2ICB8ICAgNzYgfCAgMzc2IHxcclxuICogICAgfCAxNDUzIHwgICA1MyB8IDE0NTMgfFxyXG4gKlxyXG4gKiAgICBUaGUgc2FtZSBkaWZmZXJlbmNlIGlzIHRydWUgZm9yIGxvY2FsIGFuZCBJU08gd2Vlay1udW1iZXJpbmcgeWVhcnMgKGBZYCBhbmQgYFJgKSxcclxuICogICAgZXhjZXB0IGxvY2FsIHdlZWstbnVtYmVyaW5nIHllYXJzIGFyZSBkZXBlbmRlbnQgb24gYG9wdGlvbnMud2Vla1N0YXJ0c09uYFxyXG4gKiAgICBhbmQgYG9wdGlvbnMuZmlyc3RXZWVrQ29udGFpbnNEYXRlYCAoY29tcGFyZSBbZ2V0SVNPV2Vla1llYXJde0BsaW5rIGh0dHBzOi8vZGF0ZS1mbnMub3JnL2RvY3MvZ2V0SVNPV2Vla1llYXJ9XHJcbiAqICAgIGFuZCBbZ2V0V2Vla1llYXJde0BsaW5rIGh0dHBzOi8vZGF0ZS1mbnMub3JnL2RvY3MvZ2V0V2Vla1llYXJ9KS5cclxuICpcclxuICogNi4gU3BlY2lmaWMgbm9uLWxvY2F0aW9uIHRpbWV6b25lcyBhcmUgY3VycmVudGx5IHVuYXZhaWxhYmxlIGluIGBkYXRlLWZuc2AsXHJcbiAqICAgIHNvIHJpZ2h0IG5vdyB0aGVzZSB0b2tlbnMgZmFsbCBiYWNrIHRvIEdNVCB0aW1lem9uZXMuXHJcbiAqXHJcbiAqIDcuIFRoZXNlIHBhdHRlcm5zIGFyZSBub3QgaW4gdGhlIFVuaWNvZGUgVGVjaG5pY2FsIFN0YW5kYXJkICMzNTpcclxuICogICAgLSBgaWA6IElTTyBkYXkgb2Ygd2Vla1xyXG4gKiAgICAtIGBJYDogSVNPIHdlZWsgb2YgeWVhclxyXG4gKiAgICAtIGBSYDogSVNPIHdlZWstbnVtYmVyaW5nIHllYXJcclxuICogICAgLSBgdGA6IHNlY29uZHMgdGltZXN0YW1wXHJcbiAqICAgIC0gYFRgOiBtaWxsaXNlY29uZHMgdGltZXN0YW1wXHJcbiAqICAgIC0gYG9gOiBvcmRpbmFsIG51bWJlciBtb2RpZmllclxyXG4gKiAgICAtIGBQYDogbG9uZyBsb2NhbGl6ZWQgZGF0ZVxyXG4gKiAgICAtIGBwYDogbG9uZyBsb2NhbGl6ZWQgdGltZVxyXG4gKlxyXG4gKiA4LiBgWVlgIGFuZCBgWVlZWWAgdG9rZW5zIHJlcHJlc2VudCB3ZWVrLW51bWJlcmluZyB5ZWFycyBidXQgdGhleSBhcmUgb2Z0ZW4gY29uZnVzZWQgd2l0aCB5ZWFycy5cclxuICogICAgWW91IHNob3VsZCBlbmFibGUgYG9wdGlvbnMudXNlQWRkaXRpb25hbFdlZWtZZWFyVG9rZW5zYCB0byB1c2UgdGhlbS4gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91bmljb2RlVG9rZW5zLm1kXHJcbiAqXHJcbiAqIDkuIGBEYCBhbmQgYEREYCB0b2tlbnMgcmVwcmVzZW50IGRheXMgb2YgdGhlIHllYXIgYnV0IHRoZXkgYXJlIG9mdGVuIGNvbmZ1c2VkIHdpdGggZGF5cyBvZiB0aGUgbW9udGguXHJcbiAqICAgIFlvdSBzaG91bGQgZW5hYmxlIGBvcHRpb25zLnVzZUFkZGl0aW9uYWxEYXlPZlllYXJUb2tlbnNgIHRvIHVzZSB0aGVtLiBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VuaWNvZGVUb2tlbnMubWRcclxuICpcclxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZSAtIHRoZSBvcmlnaW5hbCBkYXRlXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBmb3JtYXQgLSB0aGUgc3RyaW5nIG9mIHRva2Vuc1xyXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gYW4gb2JqZWN0IHdpdGggb3B0aW9ucy5cclxuICogQHBhcmFtIHtMb2NhbGV9IFtvcHRpb25zLmxvY2FsZT1kZWZhdWx0TG9jYWxlXSAtIHRoZSBsb2NhbGUgb2JqZWN0LiBTZWUgW0xvY2FsZV17QGxpbmsgaHR0cHM6Ly9kYXRlLWZucy5vcmcvZG9jcy9Mb2NhbGV9XHJcbiAqIEBwYXJhbSB7MHwxfDJ8M3w0fDV8Nn0gW29wdGlvbnMud2Vla1N0YXJ0c09uPTBdIC0gdGhlIGluZGV4IG9mIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsgKDAgLSBTdW5kYXkpXHJcbiAqIEBwYXJhbSB7TnVtYmVyfSBbb3B0aW9ucy5maXJzdFdlZWtDb250YWluc0RhdGU9MV0gLSB0aGUgZGF5IG9mIEphbnVhcnksIHdoaWNoIGlzXHJcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMudXNlQWRkaXRpb25hbFdlZWtZZWFyVG9rZW5zPWZhbHNlXSAtIGlmIHRydWUsIGFsbG93cyB1c2FnZSBvZiB0aGUgd2Vlay1udW1iZXJpbmcgeWVhciB0b2tlbnMgYFlZYCBhbmQgYFlZWVlgO1xyXG4gKiAgIHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdW5pY29kZVRva2Vucy5tZFxyXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLnVzZUFkZGl0aW9uYWxEYXlPZlllYXJUb2tlbnM9ZmFsc2VdIC0gaWYgdHJ1ZSwgYWxsb3dzIHVzYWdlIG9mIHRoZSBkYXkgb2YgeWVhciB0b2tlbnMgYERgIGFuZCBgRERgO1xyXG4gKiAgIHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdW5pY29kZVRva2Vucy5tZFxyXG4gKiBAcmV0dXJucyB7U3RyaW5nfSB0aGUgZm9ybWF0dGVkIGRhdGUgc3RyaW5nXHJcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMiBhcmd1bWVudHMgcmVxdWlyZWRcclxuICogQHRocm93cyB7UmFuZ2VFcnJvcn0gYGRhdGVgIG11c3Qgbm90IGJlIEludmFsaWQgRGF0ZVxyXG4gKiBAdGhyb3dzIHtSYW5nZUVycm9yfSBgb3B0aW9ucy5sb2NhbGVgIG11c3QgY29udGFpbiBgbG9jYWxpemVgIHByb3BlcnR5XHJcbiAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IGBvcHRpb25zLmxvY2FsZWAgbXVzdCBjb250YWluIGBmb3JtYXRMb25nYCBwcm9wZXJ0eVxyXG4gKiBAdGhyb3dzIHtSYW5nZUVycm9yfSBgb3B0aW9ucy53ZWVrU3RhcnRzT25gIG11c3QgYmUgYmV0d2VlbiAwIGFuZCA2XHJcbiAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IGBvcHRpb25zLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZWAgbXVzdCBiZSBiZXR3ZWVuIDEgYW5kIDdcclxuICogQHRocm93cyB7UmFuZ2VFcnJvcn0gdXNlIGB5eXl5YCBpbnN0ZWFkIG9mIGBZWVlZYCBmb3IgZm9ybWF0dGluZyB5ZWFycyB1c2luZyBbZm9ybWF0IHByb3ZpZGVkXSB0byB0aGUgaW5wdXQgW2lucHV0IHByb3ZpZGVkXTsgc2VlOiBodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91bmljb2RlVG9rZW5zLm1kXHJcbiAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IHVzZSBgeXlgIGluc3RlYWQgb2YgYFlZYCBmb3IgZm9ybWF0dGluZyB5ZWFycyB1c2luZyBbZm9ybWF0IHByb3ZpZGVkXSB0byB0aGUgaW5wdXQgW2lucHV0IHByb3ZpZGVkXTsgc2VlOiBodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91bmljb2RlVG9rZW5zLm1kXHJcbiAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IHVzZSBgZGAgaW5zdGVhZCBvZiBgRGAgZm9yIGZvcm1hdHRpbmcgZGF5cyBvZiB0aGUgbW9udGggdXNpbmcgW2Zvcm1hdCBwcm92aWRlZF0gdG8gdGhlIGlucHV0IFtpbnB1dCBwcm92aWRlZF07IHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdW5pY29kZVRva2Vucy5tZFxyXG4gKiBAdGhyb3dzIHtSYW5nZUVycm9yfSB1c2UgYGRkYCBpbnN0ZWFkIG9mIGBERGAgZm9yIGZvcm1hdHRpbmcgZGF5cyBvZiB0aGUgbW9udGggdXNpbmcgW2Zvcm1hdCBwcm92aWRlZF0gdG8gdGhlIGlucHV0IFtpbnB1dCBwcm92aWRlZF07IHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdW5pY29kZVRva2Vucy5tZFxyXG4gKiBAdGhyb3dzIHtSYW5nZUVycm9yfSBmb3JtYXQgc3RyaW5nIGNvbnRhaW5zIGFuIHVuZXNjYXBlZCBsYXRpbiBhbHBoYWJldCBjaGFyYWN0ZXJcclxuICpcclxuICogQGV4YW1wbGVcclxuICogLy8gUmVwcmVzZW50IDExIEZlYnJ1YXJ5IDIwMTQgaW4gbWlkZGxlLWVuZGlhbiBmb3JtYXQ6XHJcbiAqIGNvbnN0IHJlc3VsdCA9IGZvcm1hdChuZXcgRGF0ZSgyMDE0LCAxLCAxMSksICdNTS9kZC95eXl5JylcclxuICogLy89PiAnMDIvMTEvMjAxNCdcclxuICpcclxuICogQGV4YW1wbGVcclxuICogLy8gUmVwcmVzZW50IDIgSnVseSAyMDE0IGluIEVzcGVyYW50bzpcclxuICogaW1wb3J0IHsgZW9Mb2NhbGUgfSBmcm9tICdkYXRlLWZucy9sb2NhbGUvZW8nXHJcbiAqIGNvbnN0IHJlc3VsdCA9IGZvcm1hdChuZXcgRGF0ZSgyMDE0LCA2LCAyKSwgXCJkbyAnZGUnIE1NTU0geXl5eVwiLCB7XHJcbiAqICAgbG9jYWxlOiBlb0xvY2FsZVxyXG4gKiB9KVxyXG4gKiAvLz0+ICcyLWEgZGUganVsaW8gMjAxNCdcclxuICpcclxuICogQGV4YW1wbGVcclxuICogLy8gRXNjYXBlIHN0cmluZyBieSBzaW5nbGUgcXVvdGUgY2hhcmFjdGVyczpcclxuICogY29uc3QgcmVzdWx0ID0gZm9ybWF0KG5ldyBEYXRlKDIwMTQsIDYsIDIsIDE1KSwgXCJoICdvJydjbG9jaydcIilcclxuICogLy89PiBcIjMgbydjbG9ja1wiXHJcbiAqL1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZm9ybWF0KGRpcnR5RGF0ZSwgZGlydHlGb3JtYXRTdHIsIG9wdGlvbnMpIHtcclxuICB2YXIgX3JlZiwgX29wdGlvbnMkbG9jYWxlLCBfcmVmMiwgX3JlZjMsIF9yZWY0LCBfb3B0aW9ucyRmaXJzdFdlZWtDb24sIF9vcHRpb25zJGxvY2FsZTIsIF9vcHRpb25zJGxvY2FsZTIkb3B0aSwgX2RlZmF1bHRPcHRpb25zJGxvY2FsLCBfZGVmYXVsdE9wdGlvbnMkbG9jYWwyLCBfcmVmNSwgX3JlZjYsIF9yZWY3LCBfb3B0aW9ucyR3ZWVrU3RhcnRzT24sIF9vcHRpb25zJGxvY2FsZTMsIF9vcHRpb25zJGxvY2FsZTMkb3B0aSwgX2RlZmF1bHRPcHRpb25zJGxvY2FsMywgX2RlZmF1bHRPcHRpb25zJGxvY2FsNDtcclxuXHJcbiAgcmVxdWlyZWRBcmdzKDIsIGFyZ3VtZW50cyk7XHJcbiAgdmFyIGZvcm1hdFN0ciA9IFN0cmluZyhkaXJ0eUZvcm1hdFN0cik7XHJcbiAgdmFyIGRlZmF1bHRPcHRpb25zID0gZ2V0RGVmYXVsdE9wdGlvbnMoKTtcclxuICB2YXIgbG9jYWxlID0gKF9yZWYgPSAoX29wdGlvbnMkbG9jYWxlID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmxvY2FsZSkgIT09IG51bGwgJiYgX29wdGlvbnMkbG9jYWxlICE9PSB2b2lkIDAgPyBfb3B0aW9ucyRsb2NhbGUgOiBkZWZhdWx0T3B0aW9ucy5sb2NhbGUpICE9PSBudWxsICYmIF9yZWYgIT09IHZvaWQgMCA/IF9yZWYgOiBkZWZhdWx0TG9jYWxlO1xyXG4gIHZhciBmaXJzdFdlZWtDb250YWluc0RhdGUgPSB0b0ludGVnZXIoKF9yZWYyID0gKF9yZWYzID0gKF9yZWY0ID0gKF9vcHRpb25zJGZpcnN0V2Vla0NvbiA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5maXJzdFdlZWtDb250YWluc0RhdGUpICE9PSBudWxsICYmIF9vcHRpb25zJGZpcnN0V2Vla0NvbiAhPT0gdm9pZCAwID8gX29wdGlvbnMkZmlyc3RXZWVrQ29uIDogb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX29wdGlvbnMkbG9jYWxlMiA9IG9wdGlvbnMubG9jYWxlKSA9PT0gbnVsbCB8fCBfb3B0aW9ucyRsb2NhbGUyID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX29wdGlvbnMkbG9jYWxlMiRvcHRpID0gX29wdGlvbnMkbG9jYWxlMi5vcHRpb25zKSA9PT0gbnVsbCB8fCBfb3B0aW9ucyRsb2NhbGUyJG9wdGkgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9vcHRpb25zJGxvY2FsZTIkb3B0aS5maXJzdFdlZWtDb250YWluc0RhdGUpICE9PSBudWxsICYmIF9yZWY0ICE9PSB2b2lkIDAgPyBfcmVmNCA6IGRlZmF1bHRPcHRpb25zLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSkgIT09IG51bGwgJiYgX3JlZjMgIT09IHZvaWQgMCA/IF9yZWYzIDogKF9kZWZhdWx0T3B0aW9ucyRsb2NhbCA9IGRlZmF1bHRPcHRpb25zLmxvY2FsZSkgPT09IG51bGwgfHwgX2RlZmF1bHRPcHRpb25zJGxvY2FsID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX2RlZmF1bHRPcHRpb25zJGxvY2FsMiA9IF9kZWZhdWx0T3B0aW9ucyRsb2NhbC5vcHRpb25zKSA9PT0gbnVsbCB8fCBfZGVmYXVsdE9wdGlvbnMkbG9jYWwyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZGVmYXVsdE9wdGlvbnMkbG9jYWwyLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSkgIT09IG51bGwgJiYgX3JlZjIgIT09IHZvaWQgMCA/IF9yZWYyIDogMSk7IC8vIFRlc3QgaWYgd2Vla1N0YXJ0c09uIGlzIGJldHdlZW4gMSBhbmQgNyBfYW5kXyBpcyBub3QgTmFOXHJcblxyXG4gIGlmICghKGZpcnN0V2Vla0NvbnRhaW5zRGF0ZSA+PSAxICYmIGZpcnN0V2Vla0NvbnRhaW5zRGF0ZSA8PSA3KSkge1xyXG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ2ZpcnN0V2Vla0NvbnRhaW5zRGF0ZSBtdXN0IGJlIGJldHdlZW4gMSBhbmQgNyBpbmNsdXNpdmVseScpO1xyXG4gIH1cclxuXHJcbiAgdmFyIHdlZWtTdGFydHNPbiA9IHRvSW50ZWdlcigoX3JlZjUgPSAoX3JlZjYgPSAoX3JlZjcgPSAoX29wdGlvbnMkd2Vla1N0YXJ0c09uID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLndlZWtTdGFydHNPbikgIT09IG51bGwgJiYgX29wdGlvbnMkd2Vla1N0YXJ0c09uICE9PSB2b2lkIDAgPyBfb3B0aW9ucyR3ZWVrU3RhcnRzT24gOiBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfb3B0aW9ucyRsb2NhbGUzID0gb3B0aW9ucy5sb2NhbGUpID09PSBudWxsIHx8IF9vcHRpb25zJGxvY2FsZTMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfb3B0aW9ucyRsb2NhbGUzJG9wdGkgPSBfb3B0aW9ucyRsb2NhbGUzLm9wdGlvbnMpID09PSBudWxsIHx8IF9vcHRpb25zJGxvY2FsZTMkb3B0aSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX29wdGlvbnMkbG9jYWxlMyRvcHRpLndlZWtTdGFydHNPbikgIT09IG51bGwgJiYgX3JlZjcgIT09IHZvaWQgMCA/IF9yZWY3IDogZGVmYXVsdE9wdGlvbnMud2Vla1N0YXJ0c09uKSAhPT0gbnVsbCAmJiBfcmVmNiAhPT0gdm9pZCAwID8gX3JlZjYgOiAoX2RlZmF1bHRPcHRpb25zJGxvY2FsMyA9IGRlZmF1bHRPcHRpb25zLmxvY2FsZSkgPT09IG51bGwgfHwgX2RlZmF1bHRPcHRpb25zJGxvY2FsMyA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9kZWZhdWx0T3B0aW9ucyRsb2NhbDQgPSBfZGVmYXVsdE9wdGlvbnMkbG9jYWwzLm9wdGlvbnMpID09PSBudWxsIHx8IF9kZWZhdWx0T3B0aW9ucyRsb2NhbDQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kZWZhdWx0T3B0aW9ucyRsb2NhbDQud2Vla1N0YXJ0c09uKSAhPT0gbnVsbCAmJiBfcmVmNSAhPT0gdm9pZCAwID8gX3JlZjUgOiAwKTsgLy8gVGVzdCBpZiB3ZWVrU3RhcnRzT24gaXMgYmV0d2VlbiAwIGFuZCA2IF9hbmRfIGlzIG5vdCBOYU5cclxuXHJcbiAgaWYgKCEod2Vla1N0YXJ0c09uID49IDAgJiYgd2Vla1N0YXJ0c09uIDw9IDYpKSB7XHJcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignd2Vla1N0YXJ0c09uIG11c3QgYmUgYmV0d2VlbiAwIGFuZCA2IGluY2x1c2l2ZWx5Jyk7XHJcbiAgfVxyXG5cclxuICBpZiAoIWxvY2FsZS5sb2NhbGl6ZSkge1xyXG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ2xvY2FsZSBtdXN0IGNvbnRhaW4gbG9jYWxpemUgcHJvcGVydHknKTtcclxuICB9XHJcblxyXG4gIGlmICghbG9jYWxlLmZvcm1hdExvbmcpIHtcclxuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdsb2NhbGUgbXVzdCBjb250YWluIGZvcm1hdExvbmcgcHJvcGVydHknKTtcclxuICB9XHJcblxyXG4gIHZhciBvcmlnaW5hbERhdGUgPSB0b0RhdGUoZGlydHlEYXRlKTtcclxuXHJcbiAgaWYgKCFpc1ZhbGlkKG9yaWdpbmFsRGF0ZSkpIHtcclxuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdJbnZhbGlkIHRpbWUgdmFsdWUnKTtcclxuICB9IC8vIENvbnZlcnQgdGhlIGRhdGUgaW4gc3lzdGVtIHRpbWV6b25lIHRvIHRoZSBzYW1lIGRhdGUgaW4gVVRDKzAwOjAwIHRpbWV6b25lLlxyXG4gIC8vIFRoaXMgZW5zdXJlcyB0aGF0IHdoZW4gVVRDIGZ1bmN0aW9ucyB3aWxsIGJlIGltcGxlbWVudGVkLCBsb2NhbGVzIHdpbGwgYmUgY29tcGF0aWJsZSB3aXRoIHRoZW0uXHJcbiAgLy8gU2VlIGFuIGlzc3VlIGFib3V0IFVUQyBmdW5jdGlvbnM6IGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9pc3N1ZXMvMzc2XHJcblxyXG5cclxuICB2YXIgdGltZXpvbmVPZmZzZXQgPSBnZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzKG9yaWdpbmFsRGF0ZSk7XHJcbiAgdmFyIHV0Y0RhdGUgPSBzdWJNaWxsaXNlY29uZHMob3JpZ2luYWxEYXRlLCB0aW1lem9uZU9mZnNldCk7XHJcbiAgdmFyIGZvcm1hdHRlck9wdGlvbnMgPSB7XHJcbiAgICBmaXJzdFdlZWtDb250YWluc0RhdGU6IGZpcnN0V2Vla0NvbnRhaW5zRGF0ZSxcclxuICAgIHdlZWtTdGFydHNPbjogd2Vla1N0YXJ0c09uLFxyXG4gICAgbG9jYWxlOiBsb2NhbGUsXHJcbiAgICBfb3JpZ2luYWxEYXRlOiBvcmlnaW5hbERhdGVcclxuICB9O1xyXG4gIHZhciByZXN1bHQgPSBmb3JtYXRTdHIubWF0Y2gobG9uZ0Zvcm1hdHRpbmdUb2tlbnNSZWdFeHApLm1hcChmdW5jdGlvbiAoc3Vic3RyaW5nKSB7XHJcbiAgICB2YXIgZmlyc3RDaGFyYWN0ZXIgPSBzdWJzdHJpbmdbMF07XHJcblxyXG4gICAgaWYgKGZpcnN0Q2hhcmFjdGVyID09PSAncCcgfHwgZmlyc3RDaGFyYWN0ZXIgPT09ICdQJykge1xyXG4gICAgICB2YXIgbG9uZ0Zvcm1hdHRlciA9IGxvbmdGb3JtYXR0ZXJzW2ZpcnN0Q2hhcmFjdGVyXTtcclxuICAgICAgcmV0dXJuIGxvbmdGb3JtYXR0ZXIoc3Vic3RyaW5nLCBsb2NhbGUuZm9ybWF0TG9uZyk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHN1YnN0cmluZztcclxuICB9KS5qb2luKCcnKS5tYXRjaChmb3JtYXR0aW5nVG9rZW5zUmVnRXhwKS5tYXAoZnVuY3Rpb24gKHN1YnN0cmluZykge1xyXG4gICAgLy8gUmVwbGFjZSB0d28gc2luZ2xlIHF1b3RlIGNoYXJhY3RlcnMgd2l0aCBvbmUgc2luZ2xlIHF1b3RlIGNoYXJhY3RlclxyXG4gICAgaWYgKHN1YnN0cmluZyA9PT0gXCInJ1wiKSB7XHJcbiAgICAgIHJldHVybiBcIidcIjtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgZmlyc3RDaGFyYWN0ZXIgPSBzdWJzdHJpbmdbMF07XHJcblxyXG4gICAgaWYgKGZpcnN0Q2hhcmFjdGVyID09PSBcIidcIikge1xyXG4gICAgICByZXR1cm4gY2xlYW5Fc2NhcGVkU3RyaW5nKHN1YnN0cmluZyk7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIGZvcm1hdHRlciA9IGZvcm1hdHRlcnNbZmlyc3RDaGFyYWN0ZXJdO1xyXG5cclxuICAgIGlmIChmb3JtYXR0ZXIpIHtcclxuICAgICAgaWYgKCEob3B0aW9ucyAhPT0gbnVsbCAmJiBvcHRpb25zICE9PSB2b2lkIDAgJiYgb3B0aW9ucy51c2VBZGRpdGlvbmFsV2Vla1llYXJUb2tlbnMpICYmIGlzUHJvdGVjdGVkV2Vla1llYXJUb2tlbihzdWJzdHJpbmcpKSB7XHJcbiAgICAgICAgdGhyb3dQcm90ZWN0ZWRFcnJvcihzdWJzdHJpbmcsIGRpcnR5Rm9ybWF0U3RyLCBTdHJpbmcoZGlydHlEYXRlKSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICghKG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwICYmIG9wdGlvbnMudXNlQWRkaXRpb25hbERheU9mWWVhclRva2VucykgJiYgaXNQcm90ZWN0ZWREYXlPZlllYXJUb2tlbihzdWJzdHJpbmcpKSB7XHJcbiAgICAgICAgdGhyb3dQcm90ZWN0ZWRFcnJvcihzdWJzdHJpbmcsIGRpcnR5Rm9ybWF0U3RyLCBTdHJpbmcoZGlydHlEYXRlKSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiBmb3JtYXR0ZXIodXRjRGF0ZSwgc3Vic3RyaW5nLCBsb2NhbGUubG9jYWxpemUsIGZvcm1hdHRlck9wdGlvbnMpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChmaXJzdENoYXJhY3Rlci5tYXRjaCh1bmVzY2FwZWRMYXRpbkNoYXJhY3RlclJlZ0V4cCkpIHtcclxuICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0Zvcm1hdCBzdHJpbmcgY29udGFpbnMgYW4gdW5lc2NhcGVkIGxhdGluIGFscGhhYmV0IGNoYXJhY3RlciBgJyArIGZpcnN0Q2hhcmFjdGVyICsgJ2AnKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gc3Vic3RyaW5nO1xyXG4gIH0pLmpvaW4oJycpO1xyXG4gIHJldHVybiByZXN1bHQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNsZWFuRXNjYXBlZFN0cmluZyhpbnB1dCkge1xyXG4gIHZhciBtYXRjaGVkID0gaW5wdXQubWF0Y2goZXNjYXBlZFN0cmluZ1JlZ0V4cCk7XHJcblxyXG4gIGlmICghbWF0Y2hlZCkge1xyXG4gICAgcmV0dXJuIGlucHV0O1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIG1hdGNoZWRbMV0ucmVwbGFjZShkb3VibGVRdW90ZVJlZ0V4cCwgXCInXCIpO1xyXG59IiwiaW1wb3J0IGlzRGF0ZSBmcm9tIFwiLi4vaXNEYXRlL2luZGV4LmpzXCI7XHJcbmltcG9ydCB0b0RhdGUgZnJvbSBcIi4uL3RvRGF0ZS9pbmRleC5qc1wiO1xyXG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xyXG4vKipcclxuICogQG5hbWUgaXNWYWxpZFxyXG4gKiBAY2F0ZWdvcnkgQ29tbW9uIEhlbHBlcnNcclxuICogQHN1bW1hcnkgSXMgdGhlIGdpdmVuIGRhdGUgdmFsaWQ/XHJcbiAqXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBSZXR1cm5zIGZhbHNlIGlmIGFyZ3VtZW50IGlzIEludmFsaWQgRGF0ZSBhbmQgdHJ1ZSBvdGhlcndpc2UuXHJcbiAqIEFyZ3VtZW50IGlzIGNvbnZlcnRlZCB0byBEYXRlIHVzaW5nIGB0b0RhdGVgLiBTZWUgW3RvRGF0ZV17QGxpbmsgaHR0cHM6Ly9kYXRlLWZucy5vcmcvZG9jcy90b0RhdGV9XHJcbiAqIEludmFsaWQgRGF0ZSBpcyBhIERhdGUsIHdob3NlIHRpbWUgdmFsdWUgaXMgTmFOLlxyXG4gKlxyXG4gKiBUaW1lIHZhbHVlIG9mIERhdGU6IGh0dHA6Ly9lczUuZ2l0aHViLmlvLyN4MTUuOS4xLjFcclxuICpcclxuICogQHBhcmFtIHsqfSBkYXRlIC0gdGhlIGRhdGUgdG8gY2hlY2tcclxuICogQHJldHVybnMge0Jvb2xlYW59IHRoZSBkYXRlIGlzIHZhbGlkXHJcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMSBhcmd1bWVudCByZXF1aXJlZFxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKiAvLyBGb3IgdGhlIHZhbGlkIGRhdGU6XHJcbiAqIGNvbnN0IHJlc3VsdCA9IGlzVmFsaWQobmV3IERhdGUoMjAxNCwgMSwgMzEpKVxyXG4gKiAvLz0+IHRydWVcclxuICpcclxuICogQGV4YW1wbGVcclxuICogLy8gRm9yIHRoZSB2YWx1ZSwgY29udmVydGFibGUgaW50byBhIGRhdGU6XHJcbiAqIGNvbnN0IHJlc3VsdCA9IGlzVmFsaWQoMTM5MzgwNDgwMDAwMClcclxuICogLy89PiB0cnVlXHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqIC8vIEZvciB0aGUgaW52YWxpZCBkYXRlOlxyXG4gKiBjb25zdCByZXN1bHQgPSBpc1ZhbGlkKG5ldyBEYXRlKCcnKSlcclxuICogLy89PiBmYWxzZVxyXG4gKi9cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzVmFsaWQoZGlydHlEYXRlKSB7XHJcbiAgcmVxdWlyZWRBcmdzKDEsIGFyZ3VtZW50cyk7XHJcblxyXG4gIGlmICghaXNEYXRlKGRpcnR5RGF0ZSkgJiYgdHlwZW9mIGRpcnR5RGF0ZSAhPT0gJ251bWJlcicpIHtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XHJcblxyXG4gIHZhciBkYXRlID0gdG9EYXRlKGRpcnR5RGF0ZSk7XHJcbiAgcmV0dXJuICFpc05hTihOdW1iZXIoZGF0ZSkpO1xyXG59IiwiLyoqXHJcbiAqIEdvb2dsZSBDaHJvbWUgYXMgb2YgNjcuMC4zMzk2Ljg3IGludHJvZHVjZWQgdGltZXpvbmVzIHdpdGggb2Zmc2V0IHRoYXQgaW5jbHVkZXMgc2Vjb25kcy5cclxuICogVGhleSB1c3VhbGx5IGFwcGVhciBmb3IgZGF0ZXMgdGhhdCBkZW5vdGUgdGltZSBiZWZvcmUgdGhlIHRpbWV6b25lcyB3ZXJlIGludHJvZHVjZWRcclxuICogKGUuZy4gZm9yICdFdXJvcGUvUHJhZ3VlJyB0aW1lem9uZSB0aGUgb2Zmc2V0IGlzIEdNVCswMDo1Nzo0NCBiZWZvcmUgMSBPY3RvYmVyIDE4OTFcclxuICogYW5kIEdNVCswMTowMDowMCBhZnRlciB0aGF0IGRhdGUpXHJcbiAqXHJcbiAqIERhdGUjZ2V0VGltZXpvbmVPZmZzZXQgcmV0dXJucyB0aGUgb2Zmc2V0IGluIG1pbnV0ZXMgYW5kIHdvdWxkIHJldHVybiA1NyBmb3IgdGhlIGV4YW1wbGUgYWJvdmUsXHJcbiAqIHdoaWNoIHdvdWxkIGxlYWQgdG8gaW5jb3JyZWN0IGNhbGN1bGF0aW9ucy5cclxuICpcclxuICogVGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSB0aW1lem9uZSBvZmZzZXQgaW4gbWlsbGlzZWNvbmRzIHRoYXQgdGFrZXMgc2Vjb25kcyBpbiBhY2NvdW50LlxyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcyhkYXRlKSB7XHJcbiAgdmFyIHV0Y0RhdGUgPSBuZXcgRGF0ZShEYXRlLlVUQyhkYXRlLmdldEZ1bGxZZWFyKCksIGRhdGUuZ2V0TW9udGgoKSwgZGF0ZS5nZXREYXRlKCksIGRhdGUuZ2V0SG91cnMoKSwgZGF0ZS5nZXRNaW51dGVzKCksIGRhdGUuZ2V0U2Vjb25kcygpLCBkYXRlLmdldE1pbGxpc2Vjb25kcygpKSk7XHJcbiAgdXRjRGF0ZS5zZXRVVENGdWxsWWVhcihkYXRlLmdldEZ1bGxZZWFyKCkpO1xyXG4gIHJldHVybiBkYXRlLmdldFRpbWUoKSAtIHV0Y0RhdGUuZ2V0VGltZSgpO1xyXG59IiwiaW1wb3J0IGFkZE1pbGxpc2Vjb25kcyBmcm9tIFwiLi4vYWRkTWlsbGlzZWNvbmRzL2luZGV4LmpzXCI7XHJcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XHJcbmltcG9ydCB0b0ludGVnZXIgZnJvbSBcIi4uL19saWIvdG9JbnRlZ2VyL2luZGV4LmpzXCI7XHJcbi8qKlxyXG4gKiBAbmFtZSBzdWJNaWxsaXNlY29uZHNcclxuICogQGNhdGVnb3J5IE1pbGxpc2Vjb25kIEhlbHBlcnNcclxuICogQHN1bW1hcnkgU3VidHJhY3QgdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIGZyb20gdGhlIGdpdmVuIGRhdGUuXHJcbiAqXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBTdWJ0cmFjdCB0aGUgc3BlY2lmaWVkIG51bWJlciBvZiBtaWxsaXNlY29uZHMgZnJvbSB0aGUgZ2l2ZW4gZGF0ZS5cclxuICpcclxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZSAtIHRoZSBkYXRlIHRvIGJlIGNoYW5nZWRcclxuICogQHBhcmFtIHtOdW1iZXJ9IGFtb3VudCAtIHRoZSBhbW91bnQgb2YgbWlsbGlzZWNvbmRzIHRvIGJlIHN1YnRyYWN0ZWQuIFBvc2l0aXZlIGRlY2ltYWxzIHdpbGwgYmUgcm91bmRlZCB1c2luZyBgTWF0aC5mbG9vcmAsIGRlY2ltYWxzIGxlc3MgdGhhbiB6ZXJvIHdpbGwgYmUgcm91bmRlZCB1c2luZyBgTWF0aC5jZWlsYC5cclxuICogQHJldHVybnMge0RhdGV9IHRoZSBuZXcgZGF0ZSB3aXRoIHRoZSBtaWxsaXNlY29uZHMgc3VidHJhY3RlZFxyXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDIgYXJndW1lbnRzIHJlcXVpcmVkXHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqIC8vIFN1YnRyYWN0IDc1MCBtaWxsaXNlY29uZHMgZnJvbSAxMCBKdWx5IDIwMTQgMTI6NDU6MzAuMDAwOlxyXG4gKiBjb25zdCByZXN1bHQgPSBzdWJNaWxsaXNlY29uZHMobmV3IERhdGUoMjAxNCwgNiwgMTAsIDEyLCA0NSwgMzAsIDApLCA3NTApXHJcbiAqIC8vPT4gVGh1IEp1bCAxMCAyMDE0IDEyOjQ1OjI5LjI1MFxyXG4gKi9cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN1Yk1pbGxpc2Vjb25kcyhkaXJ0eURhdGUsIGRpcnR5QW1vdW50KSB7XHJcbiAgcmVxdWlyZWRBcmdzKDIsIGFyZ3VtZW50cyk7XHJcbiAgdmFyIGFtb3VudCA9IHRvSW50ZWdlcihkaXJ0eUFtb3VudCk7XHJcbiAgcmV0dXJuIGFkZE1pbGxpc2Vjb25kcyhkaXJ0eURhdGUsIC1hbW91bnQpO1xyXG59IiwiaW1wb3J0IHRvSW50ZWdlciBmcm9tIFwiLi4vX2xpYi90b0ludGVnZXIvaW5kZXguanNcIjtcclxuaW1wb3J0IHRvRGF0ZSBmcm9tIFwiLi4vdG9EYXRlL2luZGV4LmpzXCI7XHJcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XHJcbi8qKlxyXG4gKiBAbmFtZSBhZGRNaWxsaXNlY29uZHNcclxuICogQGNhdGVnb3J5IE1pbGxpc2Vjb25kIEhlbHBlcnNcclxuICogQHN1bW1hcnkgQWRkIHRoZSBzcGVjaWZpZWQgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byB0aGUgZ2l2ZW4gZGF0ZS5cclxuICpcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqIEFkZCB0aGUgc3BlY2lmaWVkIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdG8gdGhlIGdpdmVuIGRhdGUuXHJcbiAqXHJcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGUgLSB0aGUgZGF0ZSB0byBiZSBjaGFuZ2VkXHJcbiAqIEBwYXJhbSB7TnVtYmVyfSBhbW91bnQgLSB0aGUgYW1vdW50IG9mIG1pbGxpc2Vjb25kcyB0byBiZSBhZGRlZC4gUG9zaXRpdmUgZGVjaW1hbHMgd2lsbCBiZSByb3VuZGVkIHVzaW5nIGBNYXRoLmZsb29yYCwgZGVjaW1hbHMgbGVzcyB0aGFuIHplcm8gd2lsbCBiZSByb3VuZGVkIHVzaW5nIGBNYXRoLmNlaWxgLlxyXG4gKiBAcmV0dXJucyB7RGF0ZX0gdGhlIG5ldyBkYXRlIHdpdGggdGhlIG1pbGxpc2Vjb25kcyBhZGRlZFxyXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDIgYXJndW1lbnRzIHJlcXVpcmVkXHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqIC8vIEFkZCA3NTAgbWlsbGlzZWNvbmRzIHRvIDEwIEp1bHkgMjAxNCAxMjo0NTozMC4wMDA6XHJcbiAqIGNvbnN0IHJlc3VsdCA9IGFkZE1pbGxpc2Vjb25kcyhuZXcgRGF0ZSgyMDE0LCA2LCAxMCwgMTIsIDQ1LCAzMCwgMCksIDc1MClcclxuICogLy89PiBUaHUgSnVsIDEwIDIwMTQgMTI6NDU6MzAuNzUwXHJcbiAqL1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYWRkTWlsbGlzZWNvbmRzKGRpcnR5RGF0ZSwgZGlydHlBbW91bnQpIHtcclxuICByZXF1aXJlZEFyZ3MoMiwgYXJndW1lbnRzKTtcclxuICB2YXIgdGltZXN0YW1wID0gdG9EYXRlKGRpcnR5RGF0ZSkuZ2V0VGltZSgpO1xyXG4gIHZhciBhbW91bnQgPSB0b0ludGVnZXIoZGlydHlBbW91bnQpO1xyXG4gIHJldHVybiBuZXcgRGF0ZSh0aW1lc3RhbXAgKyBhbW91bnQpO1xyXG59IiwiaW1wb3J0IGRyYXdFeGlzdGluZ1RvZG9zIGZyb20gXCIuL2RyYXdFeGlzdGluZ1RvZG9zXCI7XHJcbmltcG9ydCByZW1vdmVFbGVtZW50IGZyb20gXCIuL3JlbW92ZUVsZW1lbnRcIjtcclxuaW1wb3J0IHtmb3JtYXR9IGZyb20gXCJkYXRlLWZuc1wiXHJcbmNvbnN0IGRyYXdUb2RvID0gKHRvZG8sIGRpc3BsYXlQYW5lbCwgcHJvamVjdCwgcG0pID0+IHtcclxuICBjb25zdCBleHBhbmRBcnJvdz1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZXhwYW5kLWFycm93Jyk7XHJcbiAgY29uc3Qgc2lkZVBhbmVsPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaWRlLXBhbmVsJyk7XHJcbiAgZXhwYW5kQXJyb3cub25kcmFnb3Zlcj0oKT0+e1xyXG4gICAgZGlzcGxheVBhbmVsLnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnZXhwYW5kLXBhbmVsJyk7XHJcbiAgICAgIHNpZGVQYW5lbC5jbGFzc0xpc3QucmVtb3ZlKCdkaXNwbGF5LW9wZW4nKTtcclxuICAgICAgZGlzcGxheVBhbmVsLnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnY2xvc2UtcGFuZWwnKTtcclxuICAgICAgc2lkZVBhbmVsLmNsYXNzTGlzdC5hZGQoJ2Rpc3BsYXktY2xvc2VkJyk7XHJcbiAgfTtcclxuICBcclxuICBsZXQgdG9kb0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgdG9kb0Rpdi5jbGFzc0xpc3QuYWRkKFwidG9kb1wiKTtcclxuICB0b2RvRGl2LmlkID0gXCJ0b2RvLVwiICsgdG9kby5pZDtcclxuICB0b2RvRGl2LnNldEF0dHJpYnV0ZShcImRyYWdnYWJsZVwiLCBcInRydWVcIik7XHJcblxyXG4gIGxldCB0b2RvQ2hlY2tib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XHJcbiAgdG9kb0NoZWNrYm94LnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJjaGVja2JveFwiKTtcclxuICB0b2RvQ2hlY2tib3guY2xhc3NMaXN0LmFkZChcInRvZG8tY2hlY2tib3hcIik7XHJcbiAgbGV0IHRvZG9UaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xyXG4gIHRvZG9UaXRsZS5jbGFzc0xpc3QuYWRkKFwidGl0bGVcIik7XHJcbiAgdG9kb1RpdGxlLnRleHRDb250ZW50ID0gdG9kby50aXRsZTtcclxuXHJcbiAgbGV0IHRvZG9EdWVEYXRlSDQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcclxuICB0b2RvRHVlRGF0ZUg0LmNsYXNzTGlzdC5hZGQoXCJkdWUtZGF0ZVwiKTtcclxuICB0b2RvRHVlRGF0ZUg0LnRleHRDb250ZW50ID0gdG9kby5kdWVEYXRlO1xyXG5cclxuICBsZXQgbmV3SW5wdXREYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xyXG4gIG5ld0lucHV0RGF0ZS5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwiZGF0ZVwiKTtcclxuICBuZXdJbnB1dERhdGUuY2xhc3NMaXN0LmFkZChcInRvZG8tbmV3LWRhdGVcIik7XHJcbiAgbmV3SW5wdXREYXRlLnZhbHVlID0gdG9kby5kdWVEYXRlO1xyXG5cclxuICBsZXQgcmVtb3ZlQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcclxuICByZW1vdmVCdXR0b24uY2xhc3NMaXN0LmFkZChcInJlbW92ZS10b2RvXCIpO1xyXG4gIHJlbW92ZUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiWFwiO1xyXG4gIGxldCByZW1vdmVCdXR0b25Db250YWluZXI9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gIHJlbW92ZUJ1dHRvbkNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdyZW1vdmUtYnV0dG9uLWNvbnRhaW5lcicpO1xyXG4gIHJlbW92ZUJ1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChyZW1vdmVCdXR0b24pO1xyXG4gbGV0ICBjaGVja2JveENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gY2hlY2tib3hDb250YWluZXIuY2xhc3NMaXN0LmFkZChcImNoZWNrYm94LWNvbnRhaW5lclwiKTtcclxuICBjaGVja2JveENvbnRhaW5lci5hcHBlbmRDaGlsZCh0b2RvQ2hlY2tib3gpO1xyXG4gIHRvZG9EaXYuYXBwZW5kQ2hpbGQoY2hlY2tib3hDb250YWluZXIpO1xyXG4gIHRvZG9EaXYuYXBwZW5kQ2hpbGQodG9kb1RpdGxlKTtcclxuICB0b2RvRGl2LmFwcGVuZENoaWxkKHRvZG9EdWVEYXRlSDQpO1xyXG4gIHRvZG9EaXYuYXBwZW5kQ2hpbGQocmVtb3ZlQnV0dG9uQ29udGFpbmVyKTtcclxuICBkaXNwbGF5UGFuZWwuYXBwZW5kQ2hpbGQodG9kb0Rpdik7XHJcblxyXG4gIFxyXG5cclxuICBsZXQgbmV3SW5wdXRUZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xyXG4gIG5ld0lucHV0VGV4dC5jbGFzc0xpc3QuYWRkKFwidG9kby1uZXctdGl0bGVcIik7XHJcbiAgbmV3SW5wdXRUZXh0LnZhbHVlID0gdG9kby50aXRsZTtcclxuXHJcbiAgcmVtb3ZlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICByZW1vdmVFbGVtZW50KHByb2plY3QsIHRvZG8uaWQpO1xyXG4gICAgdG9kb0Rpdi5yZW1vdmUoKTtcclxuXHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInBhY2thZ2VNYW5hZ2VyXCIsIEpTT04uc3RyaW5naWZ5KHBtKSk7XHJcbiAgfSk7XHJcblxyXG4gIHRvZG9UaXRsZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgdG9kb1RpdGxlLmFwcGVuZENoaWxkKG5ld0lucHV0VGV4dCk7XHJcbiAgICBuZXdJbnB1dFRleHQuZm9jdXMoKTtcclxuICB9KTtcclxuICBuZXdJbnB1dFRleHQub25ibHVyID0gKCkgPT4ge1xyXG4gICAgdG9kby50aXRsZSA9IG5ld0lucHV0VGV4dC52YWx1ZTtcclxuICAgIHRvZG9UaXRsZS50ZXh0Q29udGVudCA9IHRvZG8udGl0bGU7XHJcbiAgICBuZXdJbnB1dFRleHQucmVtb3ZlKCk7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInBhY2thZ2VNYW5hZ2VyXCIsIEpTT04uc3RyaW5naWZ5KHBtKSk7XHJcbiAgfTtcclxuICBuZXdJbnB1dFRleHQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsICh7IGtleSB9KSA9PiB7XHJcbiAgICBpZiAoa2V5ID09PSBcIkVudGVyXCIpIHtcclxuICAgICAgbmV3SW5wdXRUZXh0LmJsdXIoKTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgdG9kb0Rpdi5vbmRyYWdzdGFydCA9IChldmVudCkgPT4ge1xyXG4gICAgY29uc3Qgb2JqID0geyB0b2RvT2JqOiB0b2RvLCBwcm9qZWN0T2JqOiBwcm9qZWN0IH07XHJcbiAgICBldmVudC5kYXRhVHJhbnNmZXIuc2V0RGF0YShcInRleHRcIiwgSlNPTi5zdHJpbmdpZnkob2JqKSk7XHJcbiAgfTtcclxuXHJcbiAgdG9kb0Rpdi5vbmRyYWdlbmQgPSAoZXZlbnQpID0+IHtcclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBkcmF3RXhpc3RpbmdUb2RvcyhwbSwgcHJvamVjdCwgZGlzcGxheVBhbmVsKTtcclxuICAgIFxyXG4gIH07XHJcbiAgdG9kb0R1ZURhdGVINC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgdG9kb0R1ZURhdGVINC5hcHBlbmRDaGlsZChuZXdJbnB1dERhdGUpO1xyXG4gICAgbmV3SW5wdXREYXRlLmZvY3VzKCk7XHJcbiAgfSk7XHJcbiAgbmV3SW5wdXREYXRlLm9uYmx1ciA9ICgpID0+IHtcclxuICAgIGlmIChuZXdJbnB1dERhdGUudmFsdWUgIT09IFwiXCIpIHtcclxuICAgICAgbGV0IGRhdGU9Zm9ybWF0KG5ldyBEYXRlKGAke25ld0lucHV0RGF0ZS52YWx1ZX1UMDA6MDBgKSwnTU0vZGQveXl5eScpO1xyXG4gICAgICB0b2RvLmR1ZURhdGUgPSBkYXRlO1xyXG4gICAgICB0b2RvRHVlRGF0ZUg0LnZhbHVlQXNEYXRlID0gZGF0ZTtcclxuICAgICAgdG9kb0R1ZURhdGVINC50ZXh0Q29udGVudCA9IHRvZG8uZHVlRGF0ZTtcclxuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJwYWNrYWdlTWFuYWdlclwiLCBKU09OLnN0cmluZ2lmeShwbSkpO1xyXG4gICAgfVxyXG4gICAgbmV3SW5wdXREYXRlLnJlbW92ZSgpO1xyXG4gIH07XHJcbiAgbmV3SW5wdXREYXRlLmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCAoeyBrZXkgfSkgPT4ge1xyXG4gICAgaWYgKGtleSA9PT0gXCJFbnRlclwiKSBuZXdJbnB1dERhdGUuYmx1cigpO1xyXG4gIH0pO1xyXG4gIHJldHVybiB0b2RvRGl2O1xyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBkcmF3VG9kbztcclxuIiwiaW1wb3J0IGRyYXdUb2RvIGZyb20gXCIuL2RyYXdUb2RvXCI7XHJcbmltcG9ydCB7Zm9ybWF0LGNvbXBhcmVBc2N9IGZyb20gJ2RhdGUtZm5zJztcclxuY29uc3QgZHJhd0FsbFRvZG9zPShwbSxkaXNwbGF5UGFuZWwpPT57XHJcbiAgICBsZXQgYWxsUHJvamVjdHMgPSBwbS5nZXRBbGwoKTtcclxuICAgIGFsbFByb2plY3RzLmZvckVhY2goKHByb2plY3QpPT57XHJcbiAgICAgICAgbGV0IHRlbXBUb2RvQXJyPXByb2plY3QuZ2V0QWxsKCk7XHJcbiAgICAgICAgdGVtcFRvZG9BcnIuZm9yRWFjaCgodG9kbyk9PntcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGRyYXdUb2RvKHRvZG8sZGlzcGxheVBhbmVsLHByb2plY3QscG0pO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9KVxyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIGxldCBhbGxUb2Rvcz1kaXNwbGF5UGFuZWwuY2hpbGRyZW47XHJcbiAgICBhbGxUb2Rvcz1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhbGxUb2Rvcyk7XHJcbiAgICBcclxuICAgICAgICBhbGxUb2Rvcy5zb3J0KChhLGIpPT57XHJcbiAgICAgICAgICAgIGxldCBkYXRlQT1uZXcgRGF0ZShhLmNoaWxkTm9kZXNbMl0uaW5uZXJIVE1MKTtcclxuICAgICAgICAgICAgbGV0IGRhdGVCPW5ldyBEYXRlKGIuY2hpbGROb2Rlc1syXS5pbm5lckhUTUwpO1xyXG4gICAgICAgICAgICByZXR1cm4gZGF0ZUEtZGF0ZUI7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICBsZXQgcGFyZW50Q29udGFpbmVyPWRpc3BsYXlQYW5lbDtcclxuICAgICBwYXJlbnRDb250YWluZXIuaW5uZXJIVE1MPVwiXCI7XHJcbiAgICAgXHJcbiAgICAgZm9yKGxldCBpPTA7aTxhbGxUb2Rvcy5sZW5ndGg7aSsrKXtcclxuICAgICAgICBpZihhbGxUb2Rvc1tpXS5jaGlsZE5vZGVzWzJdIT09J1NldCBEYXRlJylcclxuICAgICAgICBwYXJlbnRDb250YWluZXIuYXBwZW5kQ2hpbGQoYWxsVG9kb3NbaV0pO1xyXG5cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICBwYXJlbnRDb250YWluZXIuaW5zZXJ0QmVmb3JlKGFsbFRvZG9zW2ldLHBhcmVudENvbnRhaW5lci5maXJzdENoaWxkKTtcclxuICAgICAgICB9XHJcbiAgICAgfVxyXG5cclxuICAgIFxyXG4gICAgXHJcblxyXG59ICAgICBcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGRyYXdBbGxUb2RvczsiLCJpbXBvcnQgZHJhd0FsbFRvZG9zIGZyb20gXCIuL2RyYXdBbGxUb2Rvc1wiO1xyXG5pbXBvcnQgZHJhd1RvZG8gZnJvbSBcIi4vZHJhd1RvZG9cIjtcclxuXHJcbmNvbnN0IGRyYXdFeGlzdGluZ1RvZG9zID0gKHBtLCBwcm9qZWN0LCBkaXNwbGF5UGFuZWwpID0+IHtcclxuICBkaXNwbGF5UGFuZWwuaW5uZXJIVE1MID0gXCJcIjtcclxuICBpZihwcm9qZWN0LnRpdGxlPT09XCJBbGxcIil7XHJcbiAgICBkcmF3QWxsVG9kb3MocG0sZGlzcGxheVBhbmVsKTtcclxuICB9XHJcbiAgZWxzZXtcclxuICAgIGNvbnN0IHRvZG9BcnJheSA9IHByb2plY3QuZ2V0QWxsKCk7XHJcbiAgICB0b2RvQXJyYXkuZm9yRWFjaCgodG9kbykgPT4ge1xyXG4gICAgICBjb25zdCB0ZW1wVG9kb0RpdiA9IGRyYXdUb2RvKHRvZG8sIGRpc3BsYXlQYW5lbCwgcHJvamVjdCwgcG0pO1xyXG4gICAgfSk7XHJcblxyXG4gIH1cclxufTtcclxuZXhwb3J0IGRlZmF1bHQgZHJhd0V4aXN0aW5nVG9kb3M7XHJcbiIsImltcG9ydCBjcmVhdGVOZXdUb2RvRm9ybSBmcm9tIFwiLi9uZXdUb2RvRm9ybVwiO1xyXG5cclxuY29uc3QgY3JlYXRlTmV3VG9kb0J1dHRvbiA9IChwbSxwcm9qZWN0LCBkaXNwbGF5UGFuZWwpID0+IHtcclxuICBjb25zdCBtcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubWFpbi1wYW5lbFwiKTtcclxuICBsZXQgY3JlYXRlVG9kb0Zvcm1CdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xyXG4gIGNyZWF0ZVRvZG9Gb3JtQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJjcmVhdGUtdG9kby1mb3JtLWJ1dHRvblwiKTtcclxuICBjcmVhdGVUb2RvRm9ybUJ1dHRvbi5pZCA9IFwidG9kby1jcmVhdGUtbmV3XCI7XHJcbiAgY3JlYXRlVG9kb0Zvcm1CdXR0b24udGV4dENvbnRlbnQgPSBcIkNyZWF0ZSBuZXcgVG9kb1wiO1xyXG4gIGNyZWF0ZVRvZG9Gb3JtQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICBjcmVhdGVOZXdUb2RvRm9ybShwbSxwcm9qZWN0LCBkaXNwbGF5UGFuZWwpO1xyXG4gIH0pO1xyXG4gIGxldCBidXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRvZG8tY3JlYXRlLW5ld1wiKTtcclxuICBsZXQgdG9vbFRpcERpdj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICB0b29sVGlwRGl2LmlkPSd0b29sLXRpcCc7XHJcbiAgdG9vbFRpcERpdi5pbm5lckhUTUw9JzxwIGlkPVwidGlwLXBhcmFncmFwaFwiPlRyeSBkcmFnZ2luZyBhbmQgZHJvcHBpbmcgYSBUYXNrIGludG8gYSBwcm9qZWN0ITwvcD4nXHJcblxyXG4gIGlmIChkb2N1bWVudC5ib2R5LmNvbnRhaW5zKGJ1dHRvbikpIHtcclxuICAgIGJ1dHRvbi5yZW1vdmUoKTtcclxuICB9XHJcbiAgbXAuYXBwZW5kQ2hpbGQoY3JlYXRlVG9kb0Zvcm1CdXR0b24pO1xyXG4gIG1wLmFwcGVuZENoaWxkKHRvb2xUaXBEaXYpO1xyXG4gIHJldHVybiBjcmVhdGVUb2RvRm9ybUJ1dHRvbjtcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlTmV3VG9kb0J1dHRvbjtcclxuIiwiaW1wb3J0IGRyYXdFeGlzdGluZ1RvZG9zIGZyb20gXCIuL2RyYXdFeGlzdGluZ1RvZG9zXCI7XHJcbmltcG9ydCB7Zm9ybWF0fSBmcm9tIFwiZGF0ZS1mbnNcIjtcclxuaW1wb3J0IFRvZG8gZnJvbSBcIi4vVG9kb1wiO1xyXG5jb25zdCBjcmVhdGVOZXdUb2RvRm9ybSA9IChwbSxwcm9qZWN0LCBkaXNwbGF5UGFuZWwpID0+IHtcclxuICBsZXQgdG90YWxUb2RvcyA9ICgpPT4ge1xyXG4gICAgbGV0IHN1bT0wO1xyXG4gICAgcG0uZ2V0QWxsKCkuZm9yRWFjaCgocCk9PntcclxuICAgICAgcC5nZXRBbGwoKS5mb3JFYWNoKCh0KT0+IHN1bSs9MSk7XHJcbiAgICB9KVxyXG4gICAgcmV0dXJuIHN1bTtcclxuICB9XHJcbiAgbGV0IG5ld1RvZG9Gb3JtRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICBuZXdUb2RvRm9ybURpdi5jbGFzc0xpc3QuYWRkKFwiY3JlYXRlLXRvZG8tZm9ybVwiKTtcclxuICBsZXQgbmV3VG9kb0Zvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiKTtcclxuICBuZXdUb2RvRm9ybS5pZD0ndG9kby1mb3JtJztcclxuICBsZXQgdGl0bGVMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcclxuICB0aXRsZUxhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLCBcImZvcm0tdG9kby10aXRsZVwiKTtcclxuICB0aXRsZUxhYmVsLnRleHRDb250ZW50ID0gXCJ0b2RvOlwiO1xyXG4gIGxldCB0aXRsZUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xyXG4gIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcInRleHRcIik7XHJcbiAgdGl0bGVJbnB1dC5pZCA9IFwiZm9ybS1Ub2RvLXRpdGxlXCI7XHJcbiAgbGV0IGR1ZURhdGVMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcclxuICBkdWVEYXRlTGFiZWwuc2V0QXR0cmlidXRlKFwiZm9yXCIsIFwiZm9ybS10b2RvLWR1ZURhdGVcIik7XHJcbiAgZHVlRGF0ZUxhYmVsLnRleHRDb250ZW50ID0gXCJEdWUgRGF0ZVwiO1xyXG4gIGxldCBkdWVEYXRlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XHJcbiAgZHVlRGF0ZUlucHV0LnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJkYXRlXCIpO1xyXG4gIGR1ZURhdGVJbnB1dC5pZCA9IFwiZm9ybS10b2RvLWR1ZURhdGVcIjtcclxuICBsZXQgcHJpb3JpdHlMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcclxuICBwcmlvcml0eUxhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLCBcImZvcm0tdG9kby1wcmlvcml0eVwiKTtcclxuICBwcmlvcml0eUxhYmVsLnRleHRDb250ZW50ID0gXCJQcmlvcml0eVwiO1xyXG4gIGxldCBwcmlvcml0eUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xyXG4gIHByaW9yaXR5SW5wdXQuc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcInRleHRcIik7XHJcbiAgcHJpb3JpdHlJbnB1dC5pZCA9IFwiZm9ybS10b2RvLXByaW9yaXR5XCI7XHJcbiAgbGV0IGNyZWF0ZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XHJcbiAgY3JlYXRlQnV0dG9uLnRleHRDb250ZW50ID0gXCIrQWRkXCI7XHJcbiAgY3JlYXRlQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJmb3JtLWNyZWF0ZS10ZFwiKTtcclxuXHJcbiAgbGV0IGNhbmNlbEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XHJcbiAgY2FuY2VsQnV0dG9uLnRleHRDb250ZW50ID0gXCJDYW5jZWxcIjtcclxuICBjYW5jZWxCdXR0b24uY2xhc3NMaXN0LmFkZChcImZvcm0tcmVtb3ZlLXRkXCIpO1xyXG4gIFxyXG4gIGxldCBidXR0b25QYW5lbD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxyXG4gIGJ1dHRvblBhbmVsLmlkPSdmb3JtLWJ1dHRvbnMtdGQnO1xyXG5cclxuICBidXR0b25QYW5lbC5hcHBlbmRDaGlsZChjcmVhdGVCdXR0b24pO1xyXG4gIGJ1dHRvblBhbmVsLmFwcGVuZENoaWxkKGNhbmNlbEJ1dHRvbik7XHJcblxyXG4gIG5ld1RvZG9Gb3JtLmFwcGVuZENoaWxkKHRpdGxlTGFiZWwpO1xyXG4gIG5ld1RvZG9Gb3JtLmFwcGVuZENoaWxkKHRpdGxlSW5wdXQpO1xyXG4gIC8vIG5ld1RvZG9Gb3JtLmFwcGVuZENoaWxkKGR1ZURhdGVMYWJlbCk7XHJcbiAgLy8gbmV3VG9kb0Zvcm0uYXBwZW5kQ2hpbGQoZHVlRGF0ZUlucHV0KTtcclxuICBuZXdUb2RvRm9ybURpdi5hcHBlbmRDaGlsZChuZXdUb2RvRm9ybSk7XHJcbiAgbmV3VG9kb0Zvcm1EaXYuYXBwZW5kQ2hpbGQoYnV0dG9uUGFuZWwpO1xyXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobmV3VG9kb0Zvcm1EaXYpO1xyXG4gIFxyXG4gIHRpdGxlSW5wdXQuZm9jdXMoKTtcclxuICB0aXRsZUlucHV0Lm9uYmx1cj0oKT0+e1xyXG4gICAgaWYodGl0bGVJbnB1dC52YWx1ZSE9PScnKVxyXG4gICAgYWRkVG9ET00oKTtcclxuICAgIGVsc2VcclxuICAgIG5ld1RvZG9Gb3JtRGl2LnJlbW92ZSgpO1xyXG4gIH1cclxuICBjYW5jZWxCdXR0b24ub25jbGljayA9ICgpPT57XHJcbiAgICBuZXdUb2RvRm9ybURpdi5yZW1vdmUoKTtcclxuICB9XHJcbiAgbmV3VG9kb0Zvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywoZXZlbnQpPT57XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgYWRkVG9ET00oKTtcclxuICB9KVxyXG4gIGNyZWF0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgYWRkVG9ET00oKTtcclxuICB9KTtcclxuXHJcbiAgY29uc3QgYWRkVG9ET009KCk9PntcclxuICAgIGxldCBkYXRlO1xyXG4gICAgaWYoZHVlRGF0ZUlucHV0LnZhbHVlIT09JycpXHJcbiAgICBkYXRlPWZvcm1hdChuZXcgRGF0ZShgJHtkdWVEYXRlSW5wdXQudmFsdWV9VDAwOjAwYCksJ01NL2RkL3l5eXknKTtcclxuICAgIFxyXG4gICAgZWxzZVxyXG4gICAgZGF0ZT0nU2V0IERhdGUnO1xyXG5cclxuICAgIGlmKHRpdGxlSW5wdXQudmFsdWUhPT0nJyl7XHJcblxyXG4gICAgICBsZXQgdGVtcFRvZG9OYW1lID0gbmV3IFRvZG8oXHJcbiAgICAgICAgdGl0bGVJbnB1dC52YWx1ZSxcclxuICAgICAgICBcIiBcIixcclxuICAgICAgICBkYXRlLFxyXG4gICAgICAgIHByaW9yaXR5SW5wdXQudmFsdWUsXHJcbiAgICAgICAgdG90YWxUb2RvcygpKTtcclxuICAgIFxyXG4gICAgcHJvamVjdC5hZGRUb2RvKHRlbXBUb2RvTmFtZSk7XHJcbiAgICBuZXdUb2RvRm9ybURpdi5yZW1vdmUoKTtcclxuICAgIGRyYXdFeGlzdGluZ1RvZG9zKHBtLHByb2plY3QsIGRpc3BsYXlQYW5lbCk7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInBhY2thZ2VNYW5hZ2VyXCIsIEpTT04uc3RyaW5naWZ5KHBtKSk7XHJcbiAgICAgIH1cclxuICB9XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZU5ld1RvZG9Gb3JtO1xyXG4iLCJpbXBvcnQgY3JlYXRlTmV3VG9kb0J1dHRvbiBmcm9tIFwiLi9uZXdUb2RvQnV0dG9uXCI7XHJcbmltcG9ydCBkcmF3RXhpc3RpbmdUb2RvcyBmcm9tIFwiLi9kcmF3RXhpc3RpbmdUb2Rvc1wiO1xyXG5pbXBvcnQgcmVtb3ZlRWxlbWVudCBmcm9tIFwiLi9yZW1vdmVFbGVtZW50XCI7XHJcbmltcG9ydCBUb2RvIGZyb20gXCIuL1RvZG9cIjtcclxuaW1wb3J0IGRyYXdBbGxUb2RvcyBmcm9tIFwiLi9kcmF3QWxsVG9kb3NcIjtcclxuXHJcbmNvbnN0IGRyYXdQcm9qZWN0c1RvTGlzdCA9IChcclxuICBwbSxcclxuICBwcm9qZWN0LFxyXG4gIHRpdGxlLFxyXG4gIGlkLFxyXG4gIHByb2pNYW5EaXYsXHJcbiAgZGlzcGxheVBhbmVsXHJcbikgPT4ge1xyXG4gIGNvbnN0IG5hdlRpdGxlPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuYXYtdGl0bGUnKTtcclxuICBjb25zdCBzaWRlUGFuZWwgPSBwcm9qTWFuRGl2LnBhcmVudEVsZW1lbnQ7XHJcbiAgY29uc3QgZXhwYW5kQXJyb3c9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2V4cGFuZC1hcnJvdycpO1xyXG4gIGV4cGFuZEFycm93Lm9uY2xpY2sgPSAoKT0+e1xyXG4gICAgICBkaXNwbGF5UGFuZWwucGFyZW50RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdleHBhbmQtcGFuZWwnKTtcclxuICAgICAgc2lkZVBhbmVsLmNsYXNzTGlzdC5yZW1vdmUoJ2Rpc3BsYXktb3BlbicpO1xyXG4gICAgICBkaXNwbGF5UGFuZWwucGFyZW50RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdjbG9zZS1wYW5lbCcpO1xyXG4gICAgICBzaWRlUGFuZWwuY2xhc3NMaXN0LmFkZCgnZGlzcGxheS1jbG9zZWQnKTtcclxuICB9XHJcbiAgaWYocHJvamVjdC50aXRsZSE9PVwiQWxsXCIpXHJcbiAge1xyXG5cclxuICAgIGxldCBwcm9qZWN0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIGxldCBlZGl0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcclxuICAgIFxyXG5cclxuICAgIGVkaXRCdXR0b24uY2xhc3NMaXN0LmFkZChcImVkaXQtcHJvamVjdFwiKTtcclxuICAgIFxyXG4gICAgbGV0IGVkaXRJY29uPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG4gICAgZWRpdEljb24uY2xhc3NMaXN0LmFkZCgnZWRpdC1pY29uJyk7XHJcbiAgICBlZGl0QnV0dG9uLmFwcGVuZENoaWxkKGVkaXRJY29uKTtcclxuICAgIHByb2plY3REaXYuY2xhc3NMaXN0LmFkZChcInByb2plY3RcIik7XHJcbiAgICBwcm9qZWN0RGl2LmlkID0gXCJwcm9qZWN0LVwiICsgaWQ7XHJcbiAgICBsZXQgcHJvamVjdFRpdGxlSDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcclxuICAgIHByb2plY3RUaXRsZUgxLmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0LW5hbWVcIik7XHJcbiAgICBwcm9qZWN0VGl0bGVIMS50ZXh0Q29udGVudCA9IHByb2plY3QudGl0bGU7XHJcbiAgICBsZXQgbmV3TmFtZUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xyXG4gICAgbmV3TmFtZUlucHV0LmlkID0gXCJuZXctbmFtZS1pbnB1dFwiO1xyXG4gICAgbmV3TmFtZUlucHV0LnZhbHVlID0gcHJvamVjdC50aXRsZTtcclxuICAgIGxldCByZW1vdmVCdXR0b249ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XHJcbiAgICByZW1vdmVCdXR0b24uY2xhc3NMaXN0LmFkZCgncHJvamVjdC1yZW1vdmUtYnV0dG9uJyk7XHJcbiAgICByZW1vdmVCdXR0b24udGV4dENvbnRlbnQ9J1gnO1xyXG4gIFxyXG4gICAgcHJvamVjdERpdi5hcHBlbmRDaGlsZChwcm9qZWN0VGl0bGVIMSk7XHJcbiAgICBsZXQgYnV0dG9uUGFuZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGJ1dHRvblBhbmVsLmNsYXNzTGlzdC5hZGQoJ2J1dHRvbi1wYW5lbCcpO1xyXG4gICAgYnV0dG9uUGFuZWwuYXBwZW5kQ2hpbGQoZWRpdEJ1dHRvbik7XHJcbiAgICBidXR0b25QYW5lbC5hcHBlbmRDaGlsZChyZW1vdmVCdXR0b24pO1xyXG4gICAgcHJvamVjdERpdi5hcHBlbmRDaGlsZChidXR0b25QYW5lbCk7XHJcbiAgICBcclxuICAgIFxyXG4gICAgcHJvak1hbkRpdi5hcHBlbmRDaGlsZChwcm9qZWN0RGl2KTtcclxuICBcclxuICAgIFxyXG4gICAgXHJcbiAgICAgIHByb2plY3REaXYuYWRkRXZlbnRMaXN0ZW5lcignZHJvcCcsKGV2ZW50KT0+bW92ZVRvZG8oZXZlbnQscHJvamVjdCxwbSkpO1xyXG4gICAgICByZW1vdmVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICByZW1vdmVFbGVtZW50KHBtLCBwcm9qZWN0LmlkKTtcclxuICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInBhY2thZ2VNYW5hZ2VyXCIsIEpTT04uc3RyaW5naWZ5KHBtKSk7XHJcbiAgXHJcbiAgICAgcHJvamVjdERpdi5yZW1vdmUoKTtcclxuICAgfSk7XHJcbiAgXHJcbiAgIGVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICBwcm9qZWN0VGl0bGVIMS5yZW1vdmUoKTtcclxuICAgICBwcm9qZWN0RGl2LmFwcGVuZENoaWxkKG5ld05hbWVJbnB1dCk7XHJcbiAgICAgbmV3TmFtZUlucHV0LmZvY3VzKCk7XHJcbiAgIH0pO1xyXG4gIFxyXG4gICBuZXdOYW1lSW5wdXQub25ibHVyID0gKCkgPT4ge1xyXG4gICAgIHByb2plY3RUaXRsZUgxLnRleHRDb250ZW50ID0gbmV3TmFtZUlucHV0LnZhbHVlO1xyXG4gICAgIHByb2plY3QudGl0bGUgPSBuZXdOYW1lSW5wdXQudmFsdWU7XHJcbiAgICAgbmV3TmFtZUlucHV0LnJlbW92ZSgpO1xyXG4gICAgIHByb2plY3REaXYuaW5zZXJ0QmVmb3JlKHByb2plY3RUaXRsZUgxLCBidXR0b25QYW5lbCk7XHJcbiAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJwYWNrYWdlTWFuYWdlclwiLCBKU09OLnN0cmluZ2lmeShwbSkpO1xyXG4gICB9O1xyXG4gICBuZXdOYW1lSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsICh7IGtleSB9KSA9PiB7XHJcbiAgICAgaWYgKGtleSA9PT0gXCJFbnRlclwiKSBuZXdOYW1lSW5wdXQuYmx1cigpO1xyXG4gICB9KTtcclxuICBcclxuICAgcHJvamVjdERpdi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICBpZihldmVudC50YXJnZXQ9PT10aGlzfHxldmVudC50YXJnZXQ9PT1wcm9qZWN0VGl0bGVIMSl7XHJcblxyXG4gICAgICBpZihkaXNwbGF5UGFuZWwucGFyZW50RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2Nsb3NlLXBhbmVsJykpe1xyXG4gICAgICAgIGRpc3BsYXlQYW5lbC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2Nsb3NlLXBhbmVsJyk7XHJcbiAgICAgICAgc2lkZVBhbmVsLmNsYXNzTGlzdC5yZW1vdmUoJ2Rpc3BsYXktY2xvc2VkJyk7XHJcbiAgICAgIH1cclxuICAgICAgZGlzcGxheVBhbmVsLnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnZXhwYW5kLXBhbmVsJyk7XHJcbiAgICAgIHNpZGVQYW5lbC5jbGFzc0xpc3QuYWRkKCdkaXNwbGF5LW9wZW4nKTtcclxuICAgICAgIGRpc3BsYXlQYW5lbC5pbm5lckhUTUwgPSBcIlwiO1xyXG4gICAgICAgMTtcclxuICAgICAgIFxyXG4gICAgICAgbmF2VGl0bGUudGV4dENvbnRlbnQ9cHJvamVjdC50aXRsZTtcclxuICAgICAgIGRyYXdFeGlzdGluZ1RvZG9zKHBtLCBwcm9qZWN0LCBkaXNwbGF5UGFuZWwpO1xyXG4gICAgICAgbGV0IG5ld0Zvcm1CdXR0b24gPSBjcmVhdGVOZXdUb2RvQnV0dG9uKHBtLCBwcm9qZWN0LCBkaXNwbGF5UGFuZWwpO1xyXG4gICAgfVxyXG4gICB9KTtcclxuICAgcHJvamVjdERpdi5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ292ZXJcIiwgKGV2ZW50KSA9PiB7XHJcbiAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgfSk7XHJcbiAgfVxyXG5cclxuZWxzZVxyXG57XHJcbiAgbGV0IHByb2plY3REaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gIHByb2plY3REaXYuY2xhc3NMaXN0LmFkZChcInByb2plY3RcIik7XHJcbiAgcHJvamVjdERpdi5pZCA9ICdhbGwtcHJvamVjdHMtY29udGFpbmVyJztcclxuICBsZXQgcHJvamVjdFRpdGxlSDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcclxuICBwcm9qZWN0VGl0bGVIMS5jbGFzc0xpc3QuYWRkKFwicHJvamVjdC1uYW1lXCIpO1xyXG4gIHByb2plY3RUaXRsZUgxLnRleHRDb250ZW50ID0gcHJvamVjdC50aXRsZTtcclxuICBwcm9qZWN0RGl2LmFwcGVuZENoaWxkKHByb2plY3RUaXRsZUgxKTtcclxuICBwcm9qTWFuRGl2LmFwcGVuZENoaWxkKHByb2plY3REaXYpO1xyXG4gIHByb2plY3REaXYuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgIGlmKGRpc3BsYXlQYW5lbC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnY2xvc2UtcGFuZWwnKSl7XHJcbiAgICAgIGRpc3BsYXlQYW5lbC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2Nsb3NlLXBhbmVsJyk7XHJcbiAgICAgIHNpZGVQYW5lbC5jbGFzc0xpc3QucmVtb3ZlKCdkaXNwbGF5LWNsb3NlZCcpO1xyXG4gICAgfVxyXG4gICAgZGlzcGxheVBhbmVsLnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnZXhwYW5kLXBhbmVsJyk7XHJcbiAgICBzaWRlUGFuZWwuY2xhc3NMaXN0LmFkZCgnZGlzcGxheS1vcGVuJyk7XHJcbiAgICBkaXNwbGF5UGFuZWwuaW5uZXJIVE1MID0gXCJcIjtcclxuICAgIG5hdlRpdGxlLnRleHRDb250ZW50PXByb2plY3QudGl0bGU7XHJcbiAgICBkcmF3QWxsVG9kb3MocG0sZGlzcGxheVBhbmVsKTtcclxuICAgIGxldCBuZXdGb3JtQnV0dG9uID0gY3JlYXRlTmV3VG9kb0J1dHRvbihwbSwgcHJvamVjdCwgZGlzcGxheVBhbmVsKTtcclxuICB9KTtcclxuICBcclxufTtcclxuXHJcbmNvbnN0IG1vdmVUb2RvPShldmVudCxwcm9qZWN0LHBtKT0+e1xyXG4gICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICBjb25zdCB0b2RvVG9BZGQgPSBKU09OLnBhcnNlKGV2ZW50LmRhdGFUcmFuc2Zlci5nZXREYXRhKFwidGV4dFwiKSkudG9kb09iajtcclxuICAgY29uc3Qgc291cmNlUHJvamVjdCA9IEpTT04ucGFyc2UoXHJcbiAgICAgZXZlbnQuZGF0YVRyYW5zZmVyLmdldERhdGEoXCJ0ZXh0XCIpXHJcbiAgICkucHJvamVjdE9iajtcclxuICAgY29uc3QgdG9kbyA9IG5ldyBUb2RvKFxyXG4gICAgIHRvZG9Ub0FkZC5fdGl0bGUsXHJcbiAgICAgdG9kb1RvQWRkLl9kZXNjcmlwdGlvbixcclxuICAgICB0b2RvVG9BZGQuX2R1ZURhdGUsXHJcbiAgICAgXCIgXCIsXHJcbiAgICAgdG9kb1RvQWRkLl9pZFxyXG4gICApO1xyXG4gICBwcm9qZWN0LmFkZFRvZG8odG9kbyk7XHJcbiAgIGxldCBhcnIgPSBwbS5nZXRBbGwoKTtcclxuICAgZm9yIChsZXQgcCBpbiBhcnIpIHtcclxuICAgICBpZiAoYXJyW3BdLmlkID09IHNvdXJjZVByb2plY3QuX2lkKSB7XHJcbiAgICAgICBsZXQgcHJvalJlZiA9IGFycltwXTtcclxuICAgICAgIHJlbW92ZUVsZW1lbnQocHJvalJlZiwgdG9kby5pZCk7XHJcbiAgICAgfVxyXG4gICB9XHJcbiAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwicGFja2FnZU1hbmFnZXJcIiwgSlNPTi5zdHJpbmdpZnkocG0pKTtcclxuXHJcbn1cclxufVxyXG5leHBvcnQgZGVmYXVsdCBkcmF3UHJvamVjdHNUb0xpc3Q7XHJcbiIsImltcG9ydCBkcmF3UHJvamVjdHNUb0xpc3QgZnJvbSBcIi4vZHJhd1Byb2plY3RzVG9MaXN0XCI7XHJcbmNvbnN0IGxvYWRQcm9qZWN0cyA9IChcclxuICBwcm9qZWN0TWFuYWdlck9iamVjdCxcclxuICBwcm9qZWN0TWFuYWdlckRpdixcclxuICBkaXNwbGF5UGFuZWxcclxuKSA9PiB7XHJcbiAgcHJvamVjdE1hbmFnZXJEaXYuaW5uZXJIVE1MID0gXCJcIjtcclxuICBjb25zdCBwcm9qQXJyYXkgPSBwcm9qZWN0TWFuYWdlck9iamVjdC5wcm9qZWN0cztcclxuICBwcm9qQXJyYXkuZm9yRWFjaCgocHJvamVjdCkgPT4ge1xyXG4gICAgY29uc3QgdGVtcERpdiA9IGRyYXdQcm9qZWN0c1RvTGlzdChcclxuICAgICAgcHJvamVjdE1hbmFnZXJPYmplY3QsXHJcbiAgICAgIHByb2plY3QsXHJcbiAgICAgIHByb2plY3QudGl0bGUsXHJcbiAgICAgIHByb2plY3QuaWQsXHJcbiAgICAgIHByb2plY3RNYW5hZ2VyRGl2LFxyXG4gICAgICBkaXNwbGF5UGFuZWxcclxuICAgICk7XHJcbiAgICBwcm9qZWN0LmRpdiA9IHRlbXBEaXY7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncGFja2FnZU1hbmFnZXInLEpTT04uc3RyaW5naWZ5KHByb2plY3RNYW5hZ2VyT2JqZWN0KSk7XHJcbiAgfSk7XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IGxvYWRQcm9qZWN0cztcclxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLnNjc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLnNjc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgUHJvamVjdE1hbmFnZXIgZnJvbSBcIi4vbW9kdWxlcy9Qcm9qZWN0TWFuYWdlclwiO1xyXG5pbXBvcnQgVG9kbyBmcm9tIFwiLi9tb2R1bGVzL1RvZG9cIjtcclxuaW1wb3J0IFByb2plY3QgZnJvbSBcIi4vbW9kdWxlcy9Qcm9qZWN0XCI7XHJcbmltcG9ydCB7XHJcbiAgZHJhd1Byb2plY3RNYW5hZ2VyLFxyXG4gIGRyYXdQcm9qZWN0RGlzcGxheVBhbmVsLFxyXG59IGZyb20gXCIuL21vZHVsZXMvbG9hZE1haW5cIjtcclxuaW1wb3J0IGRyYXdQcm9qZWN0c09uTG9hZCBmcm9tIFwiLi9tb2R1bGVzL2xvYWRQcm9qZWN0c1wiO1xyXG5pbXBvcnQgXCIuL21haW4uc2Nzc1wiO1xyXG5pbXBvcnQgbG9hZFByb2plY3RzIGZyb20gXCIuL21vZHVsZXMvbG9hZFByb2plY3RzXCI7XHJcbmxldCBzYXZlZFByb2plY3RzO1xyXG5sZXQgcG0gPSBuZXcgUHJvamVjdE1hbmFnZXIoKTtcclxuaWYobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJwYWNrYWdlTWFuYWdlclwiKSE9bnVsbCl7XHJcblxyXG4gICAgc2F2ZWRQcm9qZWN0cyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJwYWNrYWdlTWFuYWdlclwiKSkucHJvamVjdHM7XHJcbiAgICBzYXZlZFByb2plY3RzLmZvckVhY2goKGl0ZW0saW5kZXgpPT57XHJcbiAgICAgICAgbGV0IHByb2o9bmV3IFByb2plY3QoaXRlbS5fdGl0bGUsaXRlbS5faWQsaXRlbS5fZGl2KTtcclxuICAgICAgICBwbS5hZGRQcm9qKHByb2opO1xyXG4gICAgICAgIGxldCB0b2Rvcz1pdGVtLnRvZG9zO1xyXG4gICAgICAgIHRvZG9zLmZvckVhY2goKHRvZG8pPT57XHJcbiAgICAgICAgICAgIGxldCB0ZW1wVG9kbz1uZXcgVG9kbyh0b2RvLl90aXRsZSx0b2RvLl9kZXNjcmlwdGlvbix0b2RvLl9kdWVEYXRlLCcnLHRvZG8uX2lkKTtcclxuICAgICAgICAgICAgcHJvai5hZGRUb2RvKHRlbXBUb2RvKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIFxyXG4gICAgfSlcclxuICAgIGlmKHBtLmdldEFsbCgpLmxlbmd0aDwxKVxyXG4gICAge1xyXG4gICAgICAgIGxldCBkZWZhdWx0UHJvamVjdD1uZXcgUHJvamVjdCgnQWxsJywwKTtcclxuICAgIHBtLmFkZFByb2ooZGVmYXVsdFByb2plY3QpO1xyXG4gICAgfVxyXG59XHJcbmVsc2V7XHJcbiAgICBsZXQgcHJvaj1uZXcgUHJvamVjdCgnUHJvamVjdCcsMCk7XHJcbiAgICBwbS5hZGRQcm9qKHByb2opO1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5jb25zdCBkaXNwbGF5UGFuZWwgPSBkcmF3UHJvamVjdERpc3BsYXlQYW5lbCgpO1xyXG5jb25zdCBwcm9qZWN0TWFuYWdlckRpdiA9IGRyYXdQcm9qZWN0TWFuYWdlcihwbSwgZGlzcGxheVBhbmVsKTtcclxuXHJcbi8vRGV2ZWxvcG1lbnQgc2V0IHVwIHN0dWZmXHJcblxyXG5cclxubG9hZFByb2plY3RzKHBtLCBwcm9qZWN0TWFuYWdlckRpdiwgZGlzcGxheVBhbmVsKTtcclxubG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJwYWNrYWdlTWFuYWdlclwiLEpTT04uc3RyaW5naWZ5KHBtKSk7XHJcblxyXG5cclxuXHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb2plY3RNYW5hZ2VyIHtcclxuICBwcm9qZWN0cyA9IFtdO1xyXG4gIGFkZFByb2oocHJvamVjdCkge1xyXG4gICAgdGhpcy5wcm9qZWN0cy5wdXNoKHByb2plY3QpO1xyXG4gIH1cclxuICBnZXRBbGwoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5wcm9qZWN0cztcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IGNyZWF0ZU5ld1Byb2plY3RGb3JtIGZyb20gXCIuL25ld1Byb2plY3RGb3JtXCI7XHJcblxyXG5jb25zdCBkcmF3UHJvamVjdE1hbmFnZXIgPSAocG0sIGRpc3BsYXlQYW5lbCkgPT4ge1xyXG4gXHJcbiAgXHJcblxyXG4gIGxldCBzaWRlUGFuZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gIHNpZGVQYW5lbC5jbGFzc0xpc3QuYWRkKFwic2lkZS1wYW5lbFwiKTtcclxuICBsZXQgcHJvamVjdFBhbmVsVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICBwcm9qZWN0UGFuZWxUaXRsZS5jbGFzc0xpc3QuYWRkKCdwcm9qbWFuLWhlYWRlcicpO1xyXG4gIHByb2plY3RQYW5lbFRpdGxlLmlubmVySFRNTD1cIjxoMiBpZCA9IHBhbmVsLXRpdGxlPlRvZG8tQXBwPC9oMj4gPHAgaWQgPSdwcm9qbWFuLWxhYmVsJz5Qcm9qZWN0czwvcD5cIlxyXG4gIGxldCBwcm9qZWN0TWFuYWdlckRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgcHJvamVjdE1hbmFnZXJEaXYuY2xhc3NMaXN0LmFkZChcInByb2plY3QtbWFuYWdlclwiKTtcclxuICBsZXQgY3JlYXRlRm9ybU5ld1Byb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xyXG4gIGNyZWF0ZUZvcm1OZXdQcm9qZWN0LmNsYXNzTGlzdC5hZGQoXCJuZXctcHJvamVjdC1idXR0b25cIik7XHJcbiAgY3JlYXRlRm9ybU5ld1Byb2plY3QudGV4dENvbnRlbnQgPSBcIisgQWRkIFByb2plY3RcIjtcclxuICAvLyBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHByb2plY3RNYW5hZ2VyRGl2KTtcclxuICBsZXQgbWFpblBhbmVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tYWluLXBhbmVsXCIpO1xyXG4gIGNvbnN0IHBhcmVudE5vZGUgPSBkb2N1bWVudC5ib2R5O1xyXG4gIHNpZGVQYW5lbC5hcHBlbmRDaGlsZChwcm9qZWN0UGFuZWxUaXRsZSk7XHJcbiAgc2lkZVBhbmVsLmFwcGVuZENoaWxkKHByb2plY3RNYW5hZ2VyRGl2KTtcclxuICBzaWRlUGFuZWwuYXBwZW5kQ2hpbGQoY3JlYXRlRm9ybU5ld1Byb2plY3QpO1xyXG4gIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHNpZGVQYW5lbCwgbWFpblBhbmVsKTtcclxuICBjcmVhdGVGb3JtTmV3UHJvamVjdC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgY3JlYXRlTmV3UHJvamVjdEZvcm0ocHJvamVjdE1hbmFnZXJEaXYsIHBtLCBkaXNwbGF5UGFuZWwpOyAvLy9ERVBFTkRcclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIHByb2plY3RNYW5hZ2VyRGl2O1xyXG59O1xyXG5cclxuY29uc3QgZHJhd1Byb2plY3REaXNwbGF5UGFuZWwgPSAoKSA9PiB7XHJcbiAgbGV0IG1haW5QYW5lbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgbWFpblBhbmVsLmNsYXNzTGlzdC5hZGQoXCJtYWluLXBhbmVsXCIpO1xyXG4gIGxldCBuYXZCYXI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgbmF2QmFyLmlkPSduYXYtYmFyJztcclxuICBsZXQgZXhwYW5kQXJyb3c9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgZXhwYW5kQXJyb3cuaWQ9J2V4cGFuZC1hcnJvdyc7XHJcbiAgLy8gZXhwYW5kQXJyb3cudGV4dENvbnRlbnQ9JzwnO1xyXG4gIGxldCBkaXNwbGF5UGFuZWxEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gIGRpc3BsYXlQYW5lbERpdi5jbGFzc0xpc3QuYWRkKFwicHJvamVjdC1kaXNwbGF5LXBhbmVsXCIpO1xyXG4gIGxldCBwcm9qZWN0VGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgcHJvamVjdFRpdGxlLnRleHRDb250ZW50PSdQcm9qZWN0IFRpdGxlJztcclxuICBwcm9qZWN0VGl0bGUuaWQ9J25hdi10aXRsZSc7XHJcbiBcclxuICBuYXZCYXIuYXBwZW5kQ2hpbGQoZXhwYW5kQXJyb3cpO1xyXG4gIG5hdkJhci5hcHBlbmRDaGlsZChwcm9qZWN0VGl0bGUpO1xyXG4gIG1haW5QYW5lbC5hcHBlbmRDaGlsZChuYXZCYXIpO1xyXG4gIG1haW5QYW5lbC5hcHBlbmRDaGlsZChkaXNwbGF5UGFuZWxEaXYpO1xyXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobWFpblBhbmVsKTtcclxuXHJcbiAgcmV0dXJuIGRpc3BsYXlQYW5lbERpdjtcclxufTtcclxuZXhwb3J0IHsgZHJhd1Byb2plY3RNYW5hZ2VyLCBkcmF3UHJvamVjdERpc3BsYXlQYW5lbCB9O1xyXG4iLCJpbXBvcnQgbG9hZFByb2plY3RzIGZyb20gXCIuL2xvYWRQcm9qZWN0c1wiO1xyXG5pbXBvcnQgUHJvamVjdCBmcm9tIFwiLi9Qcm9qZWN0XCI7XHJcbmNvbnN0IGNyZWF0ZU5ld1Byb2plY3RGb3JtID0gKHByb2pNYW5EaXYsIHBtLCBkaXNwbGF5UGFuZWwpID0+IHtcclxuIFxyXG4gIFxyXG4gIFxyXG4gXHJcbiAgbGV0IG5hbWVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICBuYW1lSW5wdXQuc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcInRleHRcIik7XHJcbiAgbmFtZUlucHV0LmlkID0gXCJmb3JtLXByb2plY3QtbmFtZVwiO1xyXG4gIGxldCBjcmVhdGVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xyXG4gIGNyZWF0ZUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiKyBBZGRcIjtcclxuICBjcmVhdGVCdXR0b24uaWQ9XCJjcmVhdGUtYnV0dG9uXCI7XHJcbiAgXHJcbiAgLy9jcmVhdGUgYSBmYWxzZSBwcm9qZWN0IGRpdiB0byBhcHBlbmQgdG8uXHJcbiAgXHJcbiAgbGV0IGZhbHNlUHJvamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gIGZhbHNlUHJvamVjdC5pZD0naW5wdXQtcGxhY2Vob2xkZXInO1xyXG4gIFxyXG4gIGZhbHNlUHJvamVjdC5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0Jyk7XHJcbiAgZmFsc2VQcm9qZWN0LmFwcGVuZENoaWxkKG5hbWVJbnB1dCk7XHJcbiAgZmFsc2VQcm9qZWN0LmFwcGVuZENoaWxkKGNyZWF0ZUJ1dHRvbik7XHJcbiAgcHJvak1hbkRpdi5hcHBlbmRDaGlsZChmYWxzZVByb2plY3QpO1xyXG4gXHJcbiAgbmFtZUlucHV0LmZvY3VzKCk7XHJcbiAgXHJcbiBcclxuICAgIG5hbWVJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsKHtrZXl9KT0+e1xyXG4gICAgICBpZihrZXk9PT1cIkVudGVyXCIpe1xyXG4gICAgICAgIG5hbWVJbnB1dC5ibHVyKCk7XHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgICBcclxuICAgIGNyZWF0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICBpZihuYW1lSW5wdXQudmFsdWUhPT0nJylcclxuICAgICAgYWRkVG9ET00oKTtcclxuICAgICAgIGVsc2VcclxuICAgICAgICAgZmFsc2VQcm9qZWN0LnJlbW92ZSgpO1xyXG4gICAgfSk7XHJcbiAgICBuYW1lSW5wdXQub25ibHVyPSgpPT57XHJcbiAgICAgIGlmKG5hbWVJbnB1dC52YWx1ZSE9PScnKVxyXG4gICAgICBhZGRUb0RPTSgpO1xyXG4gICAgICAgZWxzZVxyXG4gICAgICAgICBmYWxzZVByb2plY3QucmVtb3ZlKCk7XHJcbiAgICB9XHJcbiAgICBcclxuICBcclxuICBcclxuICBcclxuICBjb25zdCBhZGRUb0RPTSA9ICgpID0+IHtcclxuICAgIFxyXG4gICAgbGV0IHRlbXBQcm9qTmFtZSA9IG5ldyBQcm9qZWN0KG5hbWVJbnB1dC52YWx1ZSwgcG0uZ2V0QWxsKCkubGVuZ3RoKTtcclxuICAgIHBtLmFkZFByb2oodGVtcFByb2pOYW1lKTtcclxuICAgIGxvYWRQcm9qZWN0cyhwbSwgcHJvak1hbkRpdiwgZGlzcGxheVBhbmVsKTtcclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwicGFja2FnZU1hbmFnZXJcIiwgSlNPTi5zdHJpbmdpZnkocG0pKTtcclxuICAgIFxyXG4gIH1cclxufTtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVOZXdQcm9qZWN0Rm9ybTtcclxuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fIiwiVVJMIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18iLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwidXJsIiwib3B0aW9ucyIsIlN0cmluZyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidGVzdCIsInNsaWNlIiwiaGFzaCIsIm5lZWRRdW90ZXMiLCJyZXBsYWNlIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibSIsIm4iLCJnZXR0ZXIiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicCIsImIiLCJiYXNlVVJJIiwic2VsZiIsImhyZWYiLCJuYyIsIlRvZG8iLCJjb25zdHJ1Y3RvciIsIlRpdGxlIiwiRGVzY3JpcHRpb24iLCJkdWVEYXRlIiwicHJpb3JpdHkiLCJfdGl0bGUiLCJfZGVzY3JpcHRpb24iLCJfZHVlRGF0ZSIsIl9wcmlvcml0eSIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJfaWQiLCJQcm9qZWN0IiwidG9kb3MiLCJkaXYiLCJfZGl2IiwiYWRkVG9kbyIsInRvZG8iLCJnZXRBbGwiLCJvYmplY3QiLCJhcnJheSIsInJlcXVpcmVkQXJncyIsInJlcXVpcmVkIiwiYXJncyIsIlR5cGVFcnJvciIsIl90eXBlb2YiLCJTeW1ib2wiLCJpdGVyYXRvciIsInRvRGF0ZSIsImFyZ3VtZW50IiwiYXJndW1lbnRzIiwiYXJnU3RyIiwiRGF0ZSIsImdldFRpbWUiLCJjb25zb2xlIiwid2FybiIsInN0YWNrIiwiTmFOIiwidG9JbnRlZ2VyIiwiZGlydHlOdW1iZXIiLCJudW1iZXIiLCJOdW1iZXIiLCJpc05hTiIsIk1hdGgiLCJjZWlsIiwiZmxvb3IiLCJzdGFydE9mVVRDSVNPV2VlayIsImRpcnR5RGF0ZSIsImRhdGUiLCJkYXkiLCJnZXRVVENEYXkiLCJkaWZmIiwic2V0VVRDRGF0ZSIsImdldFVUQ0RhdGUiLCJzZXRVVENIb3VycyIsImdldFVUQ0lTT1dlZWtZZWFyIiwieWVhciIsImdldFVUQ0Z1bGxZZWFyIiwiZm91cnRoT2ZKYW51YXJ5T2ZOZXh0WWVhciIsInNldFVUQ0Z1bGxZZWFyIiwic3RhcnRPZk5leHRZZWFyIiwiZm91cnRoT2ZKYW51YXJ5T2ZUaGlzWWVhciIsInN0YXJ0T2ZUaGlzWWVhciIsIk1JTExJU0VDT05EU19JTl9XRUVLIiwiZGVmYXVsdE9wdGlvbnMiLCJnZXREZWZhdWx0T3B0aW9ucyIsInN0YXJ0T2ZVVENXZWVrIiwiX3JlZiIsIl9yZWYyIiwiX3JlZjMiLCJfb3B0aW9ucyR3ZWVrU3RhcnRzT24iLCJfb3B0aW9ucyRsb2NhbGUiLCJfb3B0aW9ucyRsb2NhbGUkb3B0aW8iLCJfZGVmYXVsdE9wdGlvbnMkbG9jYWwiLCJfZGVmYXVsdE9wdGlvbnMkbG9jYWwyIiwid2Vla1N0YXJ0c09uIiwibG9jYWxlIiwiUmFuZ2VFcnJvciIsImdldFVUQ1dlZWtZZWFyIiwiX29wdGlvbnMkZmlyc3RXZWVrQ29uIiwiZmlyc3RXZWVrQ29udGFpbnNEYXRlIiwiZmlyc3RXZWVrT2ZOZXh0WWVhciIsImZpcnN0V2Vla09mVGhpc1llYXIiLCJhZGRMZWFkaW5nWmVyb3MiLCJ0YXJnZXRMZW5ndGgiLCJzaWduIiwib3V0cHV0IiwiYWJzIiwidG9rZW4iLCJzaWduZWRZZWFyIiwibW9udGgiLCJnZXRVVENNb250aCIsImdldFVUQ0hvdXJzIiwiZ2V0VVRDTWludXRlcyIsImdldFVUQ1NlY29uZHMiLCJudW1iZXJPZkRpZ2l0cyIsIm1pbGxpc2Vjb25kcyIsImdldFVUQ01pbGxpc2Vjb25kcyIsInBvdyIsIkciLCJsb2NhbGl6ZSIsImVyYSIsIndpZHRoIiwieSIsIm9yZGluYWxOdW1iZXIiLCJ1bml0IiwibGlnaHRGb3JtYXR0ZXJzIiwiWSIsInNpZ25lZFdlZWtZZWFyIiwid2Vla1llYXIiLCJSIiwidSIsIlEiLCJxdWFydGVyIiwiY29udGV4dCIsInEiLCJNIiwiTCIsInciLCJ3ZWVrIiwiZmlyc3RXZWVrIiwic3RhcnRPZlVUQ1dlZWtZZWFyIiwicm91bmQiLCJnZXRVVENXZWVrIiwiSSIsImlzb1dlZWsiLCJmb3VydGhPZkphbnVhcnkiLCJzdGFydE9mVVRDSVNPV2Vla1llYXIiLCJnZXRVVENJU09XZWVrIiwiRCIsImRheU9mWWVhciIsInRpbWVzdGFtcCIsInNldFVUQ01vbnRoIiwiZGlmZmVyZW5jZSIsImdldFVUQ0RheU9mWWVhciIsIkUiLCJkYXlPZldlZWsiLCJsb2NhbERheU9mV2VlayIsImMiLCJpc29EYXlPZldlZWsiLCJkYXlQZXJpb2RFbnVtVmFsdWUiLCJkYXlQZXJpb2QiLCJ0b0xvd2VyQ2FzZSIsImhvdXJzIiwiQiIsImgiLCJIIiwiSyIsInMiLCJTIiwiWCIsIl9sb2NhbGl6ZSIsInRpbWV6b25lT2Zmc2V0IiwiX29yaWdpbmFsRGF0ZSIsImdldFRpbWV6b25lT2Zmc2V0IiwiZm9ybWF0VGltZXpvbmVXaXRoT3B0aW9uYWxNaW51dGVzIiwiZm9ybWF0VGltZXpvbmUiLCJ4IiwiTyIsImZvcm1hdFRpbWV6b25lU2hvcnQiLCJ6IiwidCIsIm9yaWdpbmFsRGF0ZSIsIlQiLCJvZmZzZXQiLCJkaXJ0eURlbGltaXRlciIsImFic09mZnNldCIsIm1pbnV0ZXMiLCJkZWxpbWl0ZXIiLCJkYXRlTG9uZ0Zvcm1hdHRlciIsInBhdHRlcm4iLCJmb3JtYXRMb25nIiwidGltZUxvbmdGb3JtYXR0ZXIiLCJ0aW1lIiwiUCIsImRhdGVUaW1lRm9ybWF0IiwibWF0Y2hSZXN1bHQiLCJtYXRjaCIsImRhdGVQYXR0ZXJuIiwidGltZVBhdHRlcm4iLCJkYXRlVGltZSIsInByb3RlY3RlZERheU9mWWVhclRva2VucyIsInByb3RlY3RlZFdlZWtZZWFyVG9rZW5zIiwidGhyb3dQcm90ZWN0ZWRFcnJvciIsImZvcm1hdCIsImlucHV0IiwiZm9ybWF0RGlzdGFuY2VMb2NhbGUiLCJsZXNzVGhhblhTZWNvbmRzIiwib25lIiwib3RoZXIiLCJ4U2Vjb25kcyIsImhhbGZBTWludXRlIiwibGVzc1RoYW5YTWludXRlcyIsInhNaW51dGVzIiwiYWJvdXRYSG91cnMiLCJ4SG91cnMiLCJ4RGF5cyIsImFib3V0WFdlZWtzIiwieFdlZWtzIiwiYWJvdXRYTW9udGhzIiwieE1vbnRocyIsImFib3V0WFllYXJzIiwieFllYXJzIiwib3ZlclhZZWFycyIsImFsbW9zdFhZZWFycyIsImJ1aWxkRm9ybWF0TG9uZ0ZuIiwiZGVmYXVsdFdpZHRoIiwiZm9ybWF0cyIsImZ1bGwiLCJsb25nIiwibWVkaXVtIiwic2hvcnQiLCJmb3JtYXRSZWxhdGl2ZUxvY2FsZSIsImxhc3RXZWVrIiwieWVzdGVyZGF5IiwidG9kYXkiLCJ0b21vcnJvdyIsIm5leHRXZWVrIiwiYnVpbGRMb2NhbGl6ZUZuIiwiZGlydHlJbmRleCIsInZhbHVlc0FycmF5IiwiZm9ybWF0dGluZ1ZhbHVlcyIsImRlZmF1bHRGb3JtYXR0aW5nV2lkdGgiLCJfZGVmYXVsdFdpZHRoIiwiX3dpZHRoIiwidmFsdWVzIiwiYXJndW1lbnRDYWxsYmFjayIsIl9vcHRpb25zIiwicmVtMTAwIiwibmFycm93IiwiYWJicmV2aWF0ZWQiLCJ3aWRlIiwiYW0iLCJwbSIsIm1pZG5pZ2h0Iiwibm9vbiIsIm1vcm5pbmciLCJhZnRlcm5vb24iLCJldmVuaW5nIiwibmlnaHQiLCJidWlsZE1hdGNoRm4iLCJzdHJpbmciLCJtYXRjaFBhdHRlcm4iLCJtYXRjaFBhdHRlcm5zIiwiZGVmYXVsdE1hdGNoV2lkdGgiLCJ2YWx1ZSIsIm1hdGNoZWRTdHJpbmciLCJwYXJzZVBhdHRlcm5zIiwiZGVmYXVsdFBhcnNlV2lkdGgiLCJBcnJheSIsImlzQXJyYXkiLCJwcmVkaWNhdGUiLCJmaW5kSW5kZXgiLCJmaW5kS2V5IiwidmFsdWVDYWxsYmFjayIsInJlc3QiLCJwYXJzZVBhdHRlcm4iLCJwYXJzZUludCIsInBhcnNlUmVzdWx0IiwiYW55IiwiY29kZSIsImZvcm1hdERpc3RhbmNlIiwidG9rZW5WYWx1ZSIsImFkZFN1ZmZpeCIsImNvbXBhcmlzb24iLCJmb3JtYXRSZWxhdGl2ZSIsIl9kYXRlIiwiX2Jhc2VEYXRlIiwiZm9ybWF0dGluZ1Rva2Vuc1JlZ0V4cCIsImxvbmdGb3JtYXR0aW5nVG9rZW5zUmVnRXhwIiwiZXNjYXBlZFN0cmluZ1JlZ0V4cCIsImRvdWJsZVF1b3RlUmVnRXhwIiwidW5lc2NhcGVkTGF0aW5DaGFyYWN0ZXJSZWdFeHAiLCJkaXJ0eUZvcm1hdFN0ciIsIl9yZWY0IiwiX29wdGlvbnMkbG9jYWxlMiIsIl9vcHRpb25zJGxvY2FsZTIkb3B0aSIsIl9yZWY1IiwiX3JlZjYiLCJfcmVmNyIsIl9vcHRpb25zJGxvY2FsZTMiLCJfb3B0aW9ucyRsb2NhbGUzJG9wdGkiLCJfZGVmYXVsdE9wdGlvbnMkbG9jYWwzIiwiX2RlZmF1bHRPcHRpb25zJGxvY2FsNCIsImZvcm1hdFN0ciIsImRlZmF1bHRMb2NhbGUiLCJpc0RhdGUiLCJpc1ZhbGlkIiwidXRjRGF0ZSIsIlVUQyIsImdldEZ1bGxZZWFyIiwiZ2V0TW9udGgiLCJnZXREYXRlIiwiZ2V0SG91cnMiLCJnZXRNaW51dGVzIiwiZ2V0U2Vjb25kcyIsImdldE1pbGxpc2Vjb25kcyIsImdldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMiLCJkaXJ0eUFtb3VudCIsImFtb3VudCIsImFkZE1pbGxpc2Vjb25kcyIsInN1Yk1pbGxpc2Vjb25kcyIsImZvcm1hdHRlck9wdGlvbnMiLCJzdWJzdHJpbmciLCJmaXJzdENoYXJhY3RlciIsImxvbmdGb3JtYXR0ZXIiLCJtYXRjaGVkIiwiZm9ybWF0dGVyIiwidXNlQWRkaXRpb25hbFdlZWtZZWFyVG9rZW5zIiwiaW5kZXhPZiIsInVzZUFkZGl0aW9uYWxEYXlPZlllYXJUb2tlbnMiLCJpc1Byb3RlY3RlZERheU9mWWVhclRva2VuIiwiZGlzcGxheVBhbmVsIiwicHJvamVjdCIsImV4cGFuZEFycm93Iiwic2lkZVBhbmVsIiwib25kcmFnb3ZlciIsInBhcmVudEVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJ0b2RvRGl2IiwidG9kb0NoZWNrYm94IiwidG9kb1RpdGxlIiwidGV4dENvbnRlbnQiLCJ0b2RvRHVlRGF0ZUg0IiwibmV3SW5wdXREYXRlIiwicmVtb3ZlQnV0dG9uIiwicmVtb3ZlQnV0dG9uQ29udGFpbmVyIiwiY2hlY2tib3hDb250YWluZXIiLCJuZXdJbnB1dFRleHQiLCJhZGRFdmVudExpc3RlbmVyIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsImZvY3VzIiwib25ibHVyIiwiYmx1ciIsIm9uZHJhZ3N0YXJ0IiwiZXZlbnQiLCJ0b2RvT2JqIiwicHJvamVjdE9iaiIsImRhdGFUcmFuc2ZlciIsInNldERhdGEiLCJvbmRyYWdlbmQiLCJwcmV2ZW50RGVmYXVsdCIsInZhbHVlQXNEYXRlIiwiZm9yRWFjaCIsImFsbFRvZG9zIiwiY2hpbGRyZW4iLCJzb3J0IiwiY2hpbGROb2RlcyIsImlubmVySFRNTCIsInBhcmVudENvbnRhaW5lciIsImluc2VydEJlZm9yZSIsIm1wIiwiY3JlYXRlVG9kb0Zvcm1CdXR0b24iLCJuZXdUb2RvRm9ybURpdiIsIm5ld1RvZG9Gb3JtIiwidGl0bGVMYWJlbCIsInRpdGxlSW5wdXQiLCJkdWVEYXRlTGFiZWwiLCJkdWVEYXRlSW5wdXQiLCJwcmlvcml0eUxhYmVsIiwicHJpb3JpdHlJbnB1dCIsImNyZWF0ZUJ1dHRvbiIsImNhbmNlbEJ1dHRvbiIsImJ1dHRvblBhbmVsIiwiYm9keSIsImFkZFRvRE9NIiwib25jbGljayIsInRlbXBUb2RvTmFtZSIsInN1bSIsInRvdGFsVG9kb3MiLCJidXR0b24iLCJnZXRFbGVtZW50QnlJZCIsInRvb2xUaXBEaXYiLCJjb250YWlucyIsInByb2pNYW5EaXYiLCJuYXZUaXRsZSIsInByb2plY3REaXYiLCJlZGl0QnV0dG9uIiwiZWRpdEljb24iLCJwcm9qZWN0VGl0bGVIMSIsIm5ld05hbWVJbnB1dCIsIm1vdmVUb2RvIiwidG9kb1RvQWRkIiwicGFyc2UiLCJnZXREYXRhIiwic291cmNlUHJvamVjdCIsImFyciIsInByb2pSZWYiLCJwcm9qZWN0TWFuYWdlck9iamVjdCIsInByb2plY3RNYW5hZ2VyRGl2IiwicHJvamVjdHMiLCJ0ZW1wRGl2Iiwic2F2ZWRQcm9qZWN0cyIsImFkZFByb2oiLCJnZXRJdGVtIiwicHJvaiIsInRlbXBUb2RvIiwiZGVmYXVsdFByb2plY3QiLCJtYWluUGFuZWwiLCJuYXZCYXIiLCJkaXNwbGF5UGFuZWxEaXYiLCJwcm9qZWN0VGl0bGUiLCJkcmF3UHJvamVjdERpc3BsYXlQYW5lbCIsInByb2plY3RQYW5lbFRpdGxlIiwiY3JlYXRlRm9ybU5ld1Byb2plY3QiLCJuYW1lSW5wdXQiLCJmYWxzZVByb2plY3QiLCJ0ZW1wUHJvak5hbWUiLCJkcmF3UHJvamVjdE1hbmFnZXIiXSwic291cmNlUm9vdCI6IiJ9